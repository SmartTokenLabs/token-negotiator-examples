(self.webpackChunktoken_overlay_website = self.webpackChunktoken_overlay_website || []).push([ [ 387 ], {
  9387: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    "use strict";
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WC_DEFAULT_RPC_MAP\": () => (/* binding */ WC_DEFAULT_RPC_MAP),\n/* harmony export */   \"WC_V2_DEFAULT_CHAINS\": () => (/* binding */ WC_V2_DEFAULT_CHAINS),\n/* harmony export */   \"getWalletConnectV2ProviderInstance\": () => (/* binding */ getWalletConnectV2ProviderInstance)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_universal_provider_dist_index_umd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(841);\n/* harmony import */ var _walletconnect_universal_provider_dist_index_umd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_universal_provider_dist_index_umd__WEBPACK_IMPORTED_MODULE_0__);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar WC_DEFAULT_RPC_MAP = {\n    1: 'https://ethereum.publicnode.com',\n    5: 'https://eth-goerli.g.alchemy.com/v2/yVhq9zPJorAWsw-F87fEabSUl7cCU6z4',\n    11155111: 'https://sepolia.infura.io/v3/9f79b2f9274344af90b8d4e244b580ef',\n    137: 'https://polygon-rpc.com/',\n    80001: 'https://polygon-mumbai.g.alchemy.com/v2/rVI6pOV4irVsrw20cJxc1fxK_1cSeiY0',\n    56: 'https://bsc-dataseed.binance.org/',\n    97: 'https://data-seed-prebsc-1-s1.binance.org:8545',\n    43114: 'https://api.avax.network/ext/bc/C/rpc',\n    43113: 'https://api.avax-test.network/ext/bc/C/rpc',\n    250: 'https://rpc.fantom.network/',\n    25: 'https://evm-cronos.crypto.org',\n    338: 'https://evm-t3.cronos.org',\n    42161: 'https://arb1.arbitrum.io/rpc',\n    421613: 'https://arb-goerli.g.alchemy.com/v2/nFrflomLgsQQL5NWjGileAVqIGGxZWce',\n    10: 'https://mainnet.optimism.io',\n};\nvar WC_V2_DEFAULT_CHAINS = [\n    'eip155:1',\n    'eip155:137',\n    'eip155:250',\n    'eip155:25',\n    'eip155:42161',\n    'eip155:10',\n];\nvar getWalletConnectV2ProviderInstance = function () { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0: return [4, _walletconnect_universal_provider_dist_index_umd__WEBPACK_IMPORTED_MODULE_0___default().init({\n                    projectId: '2ec7ead81da1226703ad789c0b2f7b30',\n                    logger: 'debug',\n                    relayUrl: 'wss://relay.walletconnect.com',\n                })];\n            case 1: return [2, _a.sent()];\n        }\n    });\n}); };\n//# sourceMappingURL=WalletConnectV2Provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTM4Ny5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLG1CQUFtQixTQUFJLElBQUksU0FBSTtBQUMvQixjQUFjLDZCQUE2QiwwQkFBMEIsY0FBYyxxQkFBcUI7QUFDeEcsaUJBQWlCLG9EQUFvRCxxRUFBcUUsY0FBYztBQUN4Six1QkFBdUIsc0JBQXNCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QyxtQ0FBbUMsU0FBUztBQUM1QyxtQ0FBbUMsV0FBVyxVQUFVO0FBQ3hELDBDQUEwQyxjQUFjO0FBQ3hEO0FBQ0EsOEdBQThHLE9BQU87QUFDckgsaUZBQWlGLGlCQUFpQjtBQUNsRyx5REFBeUQsZ0JBQWdCLFFBQVE7QUFDakYsK0NBQStDLGdCQUFnQixnQkFBZ0I7QUFDL0U7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBLFVBQVUsWUFBWSxhQUFhLFNBQVMsVUFBVTtBQUN0RCxvQ0FBb0MsU0FBUztBQUM3QztBQUNBO0FBQ2lGO0FBQzFFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sdURBQXVEO0FBQzlEO0FBQ0E7QUFDQSwrQkFBK0IsNEZBQXNCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsS0FBSztBQUNMLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuLW92ZXJsYXktd2Vic2l0ZS8uL25vZGVfbW9kdWxlcy9AdG9rZW5zY3JpcHQvdG9rZW4tbmVnb3RpYXRvci9kaXN0L3dhbGxldC9XYWxsZXRDb25uZWN0VjJQcm92aWRlci5qcz9mNjE5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoZyAmJiAoZyA9IDAsIG9wWzBdICYmIChfID0gMCkpLCBfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbmltcG9ydCBVbml2ZXJzYWxQcm92aWRlciBmcm9tICdAd2FsbGV0Y29ubmVjdC91bml2ZXJzYWwtcHJvdmlkZXIvZGlzdC9pbmRleC51bWQnO1xuZXhwb3J0IHZhciBXQ19ERUZBVUxUX1JQQ19NQVAgPSB7XG4gICAgMTogJ2h0dHBzOi8vZXRoZXJldW0ucHVibGljbm9kZS5jb20nLFxuICAgIDU6ICdodHRwczovL2V0aC1nb2VybGkuZy5hbGNoZW15LmNvbS92Mi95VmhxOXpQSm9yQVdzdy1GODdmRWFiU1VsN2NDVTZ6NCcsXG4gICAgMTExNTUxMTE6ICdodHRwczovL3NlcG9saWEuaW5mdXJhLmlvL3YzLzlmNzliMmY5Mjc0MzQ0YWY5MGI4ZDRlMjQ0YjU4MGVmJyxcbiAgICAxMzc6ICdodHRwczovL3BvbHlnb24tcnBjLmNvbS8nLFxuICAgIDgwMDAxOiAnaHR0cHM6Ly9wb2x5Z29uLW11bWJhaS5nLmFsY2hlbXkuY29tL3YyL3JWSTZwT1Y0aXJWc3J3MjBjSnhjMWZ4S18xY1NlaVkwJyxcbiAgICA1NjogJ2h0dHBzOi8vYnNjLWRhdGFzZWVkLmJpbmFuY2Uub3JnLycsXG4gICAgOTc6ICdodHRwczovL2RhdGEtc2VlZC1wcmVic2MtMS1zMS5iaW5hbmNlLm9yZzo4NTQ1JyxcbiAgICA0MzExNDogJ2h0dHBzOi8vYXBpLmF2YXgubmV0d29yay9leHQvYmMvQy9ycGMnLFxuICAgIDQzMTEzOiAnaHR0cHM6Ly9hcGkuYXZheC10ZXN0Lm5ldHdvcmsvZXh0L2JjL0MvcnBjJyxcbiAgICAyNTA6ICdodHRwczovL3JwYy5mYW50b20ubmV0d29yay8nLFxuICAgIDI1OiAnaHR0cHM6Ly9ldm0tY3Jvbm9zLmNyeXB0by5vcmcnLFxuICAgIDMzODogJ2h0dHBzOi8vZXZtLXQzLmNyb25vcy5vcmcnLFxuICAgIDQyMTYxOiAnaHR0cHM6Ly9hcmIxLmFyYml0cnVtLmlvL3JwYycsXG4gICAgNDIxNjEzOiAnaHR0cHM6Ly9hcmItZ29lcmxpLmcuYWxjaGVteS5jb20vdjIvbkZyZmxvbUxnc1FRTDVOV2pHaWxlQVZxSUdHeFpXY2UnLFxuICAgIDEwOiAnaHR0cHM6Ly9tYWlubmV0Lm9wdGltaXNtLmlvJyxcbn07XG5leHBvcnQgdmFyIFdDX1YyX0RFRkFVTFRfQ0hBSU5TID0gW1xuICAgICdlaXAxNTU6MScsXG4gICAgJ2VpcDE1NToxMzcnLFxuICAgICdlaXAxNTU6MjUwJyxcbiAgICAnZWlwMTU1OjI1JyxcbiAgICAnZWlwMTU1OjQyMTYxJyxcbiAgICAnZWlwMTU1OjEwJyxcbl07XG5leHBvcnQgdmFyIGdldFdhbGxldENvbm5lY3RWMlByb3ZpZGVySW5zdGFuY2UgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgc3dpdGNoIChfYS5sYWJlbCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQsIFVuaXZlcnNhbFByb3ZpZGVyLmluaXQoe1xuICAgICAgICAgICAgICAgICAgICBwcm9qZWN0SWQ6ICcyZWM3ZWFkODFkYTEyMjY3MDNhZDc4OWMwYjJmN2IzMCcsXG4gICAgICAgICAgICAgICAgICAgIGxvZ2dlcjogJ2RlYnVnJyxcbiAgICAgICAgICAgICAgICAgICAgcmVsYXlVcmw6ICd3c3M6Ly9yZWxheS53YWxsZXRjb25uZWN0LmNvbScsXG4gICAgICAgICAgICAgICAgfSldO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gWzIsIF9hLnNlbnQoKV07XG4gICAgICAgIH1cbiAgICB9KTtcbn0pOyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2FsbGV0Q29ubmVjdFYyUHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9387\n");
  },
  841: function(__unused_webpack_module, exports, __webpack_require__) {
    eval("/* provided dependency */ var console = __webpack_require__(5108);\n/* provided dependency */ var process = __webpack_require__(4155);\n(function(zt,ze){ true?ze(exports):0})(this,function(zt){\"use strict\";var ze=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof __webpack_require__.g<\"u\"?__webpack_require__.g:typeof self<\"u\"?self:{};function pc(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function Kt(t){var e=t.default;if(typeof e==\"function\"){var r=function(){return e.apply(this,arguments)};r.prototype=e.prototype}else r={};return Object.defineProperty(r,\"__esModule\",{value:!0}),Object.keys(t).forEach(function(i){var n=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(r,i,n.get?n:{enumerable:!0,get:function(){return t[i]}})}),r}function gc(t){try{return JSON.stringify(t)}catch{return'\"[Circular]\"'}}var yc=_c;function _c(t,e,r){var i=r&&r.stringify||gc,n=1;if(typeof t==\"object\"&&t!==null){var s=e.length+n;if(s===1)return t;var o=new Array(s);o[0]=i(t);for(var c=1;c<s;c++)o[c]=i(e[c]);return o.join(\" \")}if(typeof t!=\"string\")return t;var l=e.length;if(l===0)return t;for(var h=\"\",f=1-n,S=-1,w=t&&t.length||0,v=0;v<w;){if(t.charCodeAt(v)===37&&v+1<w){switch(S=S>-1?S:0,t.charCodeAt(v+1)){case 100:case 102:if(f>=l||e[f]==null)break;S<v&&(h+=t.slice(S,v)),h+=Number(e[f]),S=v+2,v++;break;case 105:if(f>=l||e[f]==null)break;S<v&&(h+=t.slice(S,v)),h+=Math.floor(Number(e[f])),S=v+2,v++;break;case 79:case 111:case 106:if(f>=l||e[f]===void 0)break;S<v&&(h+=t.slice(S,v));var m=typeof e[f];if(m===\"string\"){h+=\"'\"+e[f]+\"'\",S=v+2,v++;break}if(m===\"function\"){h+=e[f].name||\"<anonymous>\",S=v+2,v++;break}h+=i(e[f]),S=v+2,v++;break;case 115:if(f>=l)break;S<v&&(h+=t.slice(S,v)),h+=String(e[f]),S=v+2,v++;break;case 37:S<v&&(h+=t.slice(S,v)),h+=\"%\",S=v+2,v++,f--;break}++f}++v}return S===-1?t:(S<w&&(h+=t.slice(S)),h)}const Wn=yc;var lr=Dt;const fr=Ic().console||{},bc={mapHttpRequest:kr,mapHttpResponse:kr,wrapRequestSerializer:Ai,wrapResponseSerializer:Ai,wrapErrorSerializer:Ai,req:kr,res:kr,err:Dc};function vc(t,e){return Array.isArray(t)?t.filter(function(i){return i!==\"!stdSerializers.err\"}):t===!0?Object.keys(e):!1}function Dt(t){t=t||{},t.browser=t.browser||{};const e=t.browser.transmit;if(e&&typeof e.send!=\"function\")throw Error(\"pino: transmit option must have a send function\");const r=t.browser.write||fr;t.browser.write&&(t.browser.asObject=!0);const i=t.serializers||{},n=vc(t.browser.serialize,i);let s=t.browser.serialize;Array.isArray(t.browser.serialize)&&t.browser.serialize.indexOf(\"!stdSerializers.err\")>-1&&(s=!1);const o=[\"error\",\"fatal\",\"warn\",\"info\",\"debug\",\"trace\"];typeof r==\"function\"&&(r.error=r.fatal=r.warn=r.info=r.debug=r.trace=r),t.enabled===!1&&(t.level=\"silent\");const c=t.level||\"info\",l=Object.create(r);l.log||(l.log=dr),Object.defineProperty(l,\"levelVal\",{get:f}),Object.defineProperty(l,\"level\",{get:S,set:w});const h={transmit:e,serialize:n,asObject:t.browser.asObject,levels:o,timestamp:Sc(t)};l.levels=Dt.levels,l.level=c,l.setMaxListeners=l.getMaxListeners=l.emit=l.addListener=l.on=l.prependListener=l.once=l.prependOnceListener=l.removeListener=l.removeAllListeners=l.listeners=l.listenerCount=l.eventNames=l.write=l.flush=dr,l.serializers=i,l._serialize=n,l._stdErrSerialize=s,l.child=v,e&&(l._logEvent=Pi());function f(){return this.level===\"silent\"?1/0:this.levels.values[this.level]}function S(){return this._level}function w(m){if(m!==\"silent\"&&!this.levels.values[m])throw Error(\"unknown level \"+m);this._level=m,ir(h,l,\"error\",\"log\"),ir(h,l,\"fatal\",\"error\"),ir(h,l,\"warn\",\"error\"),ir(h,l,\"info\",\"log\"),ir(h,l,\"debug\",\"log\"),ir(h,l,\"trace\",\"log\")}function v(m,R){if(!m)throw new Error(\"missing bindings for child Pino\");R=R||{},n&&m.serializers&&(R.serializers=m.serializers);const F=R.serializers;if(n&&F){var H=Object.assign({},i,F),x=t.browser.serialize===!0?Object.keys(H):n;delete m.serializers,Gr([m],x,H,this._stdErrSerialize)}function P(y){this._childLevel=(y._childLevel|0)+1,this.error=nr(y,m,\"error\"),this.fatal=nr(y,m,\"fatal\"),this.warn=nr(y,m,\"warn\"),this.info=nr(y,m,\"info\"),this.debug=nr(y,m,\"debug\"),this.trace=nr(y,m,\"trace\"),H&&(this.serializers=H,this._serialize=x),e&&(this._logEvent=Pi([].concat(y._logEvent.bindings,m)))}return P.prototype=this,new P(this)}return l}Dt.levels={values:{fatal:60,error:50,warn:40,info:30,debug:20,trace:10},labels:{10:\"trace\",20:\"debug\",30:\"info\",40:\"warn\",50:\"error\",60:\"fatal\"}},Dt.stdSerializers=bc,Dt.stdTimeFunctions=Object.assign({},{nullTime:Yn,epochTime:Jn,unixTime:xc,isoTime:Oc});function ir(t,e,r,i){const n=Object.getPrototypeOf(e);e[r]=e.levelVal>e.levels.values[r]?dr:n[r]?n[r]:fr[r]||fr[i]||dr,wc(t,e,r)}function wc(t,e,r){!t.transmit&&e[r]===dr||(e[r]=function(i){return function(){const s=t.timestamp(),o=new Array(arguments.length),c=Object.getPrototypeOf&&Object.getPrototypeOf(this)===fr?fr:this;for(var l=0;l<o.length;l++)o[l]=arguments[l];if(t.serialize&&!t.asObject&&Gr(o,this._serialize,this.serializers,this._stdErrSerialize),t.asObject?i.call(c,mc(this,r,o,s)):i.apply(c,o),t.transmit){const h=t.transmit.level||e.level,f=Dt.levels.values[h],S=Dt.levels.values[r];if(S<f)return;Ec(this,{ts:s,methodLevel:r,methodValue:S,transmitLevel:h,transmitValue:Dt.levels.values[t.transmit.level||e.level],send:t.transmit.send,val:e.levelVal},o)}}}(e[r]))}function mc(t,e,r,i){t._serialize&&Gr(r,t._serialize,t.serializers,t._stdErrSerialize);const n=r.slice();let s=n[0];const o={};i&&(o.time=i),o.level=Dt.levels.values[e];let c=(t._childLevel|0)+1;if(c<1&&(c=1),s!==null&&typeof s==\"object\"){for(;c--&&typeof n[0]==\"object\";)Object.assign(o,n.shift());s=n.length?Wn(n.shift(),n):void 0}else typeof s==\"string\"&&(s=Wn(n.shift(),n));return s!==void 0&&(o.msg=s),o}function Gr(t,e,r,i){for(const n in t)if(i&&t[n]instanceof Error)t[n]=Dt.stdSerializers.err(t[n]);else if(typeof t[n]==\"object\"&&!Array.isArray(t[n]))for(const s in t[n])e&&e.indexOf(s)>-1&&s in r&&(t[n][s]=r[s](t[n][s]))}function nr(t,e,r){return function(){const i=new Array(1+arguments.length);i[0]=e;for(var n=1;n<i.length;n++)i[n]=arguments[n-1];return t[r].apply(this,i)}}function Ec(t,e,r){const i=e.send,n=e.ts,s=e.methodLevel,o=e.methodValue,c=e.val,l=t._logEvent.bindings;Gr(r,t._serialize||Object.keys(t.serializers),t.serializers,t._stdErrSerialize===void 0?!0:t._stdErrSerialize),t._logEvent.ts=n,t._logEvent.messages=r.filter(function(h){return l.indexOf(h)===-1}),t._logEvent.level.label=s,t._logEvent.level.value=o,i(s,t._logEvent,c),t._logEvent=Pi(l)}function Pi(t){return{ts:0,messages:[],bindings:t||[],level:{label:\"\",value:0}}}function Dc(t){const e={type:t.constructor.name,msg:t.message,stack:t.stack};for(const r in t)e[r]===void 0&&(e[r]=t[r]);return e}function Sc(t){return typeof t.timestamp==\"function\"?t.timestamp:t.timestamp===!1?Yn:Jn}function kr(){return{}}function Ai(t){return t}function dr(){}function Yn(){return!1}function Jn(){return Date.now()}function xc(){return Math.round(Date.now()/1e3)}function Oc(){return new Date(Date.now()).toISOString()}function Ic(){function t(e){return typeof e<\"u\"&&e}try{return typeof globalThis<\"u\"||Object.defineProperty(Object.prototype,\"globalThis\",{get:function(){return delete Object.prototype.globalThis,this.globalThis=this},configurable:!0}),globalThis}catch{return t(self)||t(window)||t(this)||{}}}var it={exports:{}},sr=typeof Reflect==\"object\"?Reflect:null,Xn=sr&&typeof sr.apply==\"function\"?sr.apply:function(e,r,i){return Function.prototype.apply.call(e,r,i)},Wr;sr&&typeof sr.ownKeys==\"function\"?Wr=sr.ownKeys:Object.getOwnPropertySymbols?Wr=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Wr=function(e){return Object.getOwnPropertyNames(e)};function Pc(t){console&&console.warn&&console.warn(t)}var Zn=Number.isNaN||function(e){return e!==e};function xe(){xe.init.call(this)}it.exports=xe,it.exports.once=Nc,xe.EventEmitter=xe,xe.prototype._events=void 0,xe.prototype._eventsCount=0,xe.prototype._maxListeners=void 0;var Qn=10;function Yr(t){if(typeof t!=\"function\")throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof t)}Object.defineProperty(xe,\"defaultMaxListeners\",{enumerable:!0,get:function(){return Qn},set:function(t){if(typeof t!=\"number\"||t<0||Zn(t))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+t+\".\");Qn=t}}),xe.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},xe.prototype.setMaxListeners=function(e){if(typeof e!=\"number\"||e<0||Zn(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this};function es(t){return t._maxListeners===void 0?xe.defaultMaxListeners:t._maxListeners}xe.prototype.getMaxListeners=function(){return es(this)},xe.prototype.emit=function(e){for(var r=[],i=1;i<arguments.length;i++)r.push(arguments[i]);var n=e===\"error\",s=this._events;if(s!==void 0)n=n&&s.error===void 0;else if(!n)return!1;if(n){var o;if(r.length>0&&(o=r[0]),o instanceof Error)throw o;var c=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw c.context=o,c}var l=s[e];if(l===void 0)return!1;if(typeof l==\"function\")Xn(l,this,r);else for(var h=l.length,f=ss(l,h),i=0;i<h;++i)Xn(f[i],this,r);return!0};function ts(t,e,r,i){var n,s,o;if(Yr(r),s=t._events,s===void 0?(s=t._events=Object.create(null),t._eventsCount=0):(s.newListener!==void 0&&(t.emit(\"newListener\",e,r.listener?r.listener:r),s=t._events),o=s[e]),o===void 0)o=s[e]=r,++t._eventsCount;else if(typeof o==\"function\"?o=s[e]=i?[r,o]:[o,r]:i?o.unshift(r):o.push(r),n=es(t),n>0&&o.length>n&&!o.warned){o.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\" \"+String(e)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");c.name=\"MaxListenersExceededWarning\",c.emitter=t,c.type=e,c.count=o.length,Pc(c)}return t}xe.prototype.addListener=function(e,r){return ts(this,e,r,!1)},xe.prototype.on=xe.prototype.addListener,xe.prototype.prependListener=function(e,r){return ts(this,e,r,!0)};function Ac(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function rs(t,e,r){var i={fired:!1,wrapFn:void 0,target:t,type:e,listener:r},n=Ac.bind(i);return n.listener=r,i.wrapFn=n,n}xe.prototype.once=function(e,r){return Yr(r),this.on(e,rs(this,e,r)),this},xe.prototype.prependOnceListener=function(e,r){return Yr(r),this.prependListener(e,rs(this,e,r)),this},xe.prototype.removeListener=function(e,r){var i,n,s,o,c;if(Yr(r),n=this._events,n===void 0)return this;if(i=n[e],i===void 0)return this;if(i===r||i.listener===r)--this._eventsCount===0?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit(\"removeListener\",e,i.listener||r));else if(typeof i!=\"function\"){for(s=-1,o=i.length-1;o>=0;o--)if(i[o]===r||i[o].listener===r){c=i[o].listener,s=o;break}if(s<0)return this;s===0?i.shift():Tc(i,s),i.length===1&&(n[e]=i[0]),n.removeListener!==void 0&&this.emit(\"removeListener\",e,c||r)}return this},xe.prototype.off=xe.prototype.removeListener,xe.prototype.removeAllListeners=function(e){var r,i,n;if(i=this._events,i===void 0)return this;if(i.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):i[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete i[e]),this;if(arguments.length===0){var s=Object.keys(i),o;for(n=0;n<s.length;++n)o=s[n],o!==\"removeListener\"&&this.removeAllListeners(o);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(r=i[e],typeof r==\"function\")this.removeListener(e,r);else if(r!==void 0)for(n=r.length-1;n>=0;n--)this.removeListener(e,r[n]);return this};function is(t,e,r){var i=t._events;if(i===void 0)return[];var n=i[e];return n===void 0?[]:typeof n==\"function\"?r?[n.listener||n]:[n]:r?Cc(n):ss(n,n.length)}xe.prototype.listeners=function(e){return is(this,e,!0)},xe.prototype.rawListeners=function(e){return is(this,e,!1)},xe.listenerCount=function(t,e){return typeof t.listenerCount==\"function\"?t.listenerCount(e):ns.call(t,e)},xe.prototype.listenerCount=ns;function ns(t){var e=this._events;if(e!==void 0){var r=e[t];if(typeof r==\"function\")return 1;if(r!==void 0)return r.length}return 0}xe.prototype.eventNames=function(){return this._eventsCount>0?Wr(this._events):[]};function ss(t,e){for(var r=new Array(e),i=0;i<e;++i)r[i]=t[i];return r}function Tc(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}function Cc(t){for(var e=new Array(t.length),r=0;r<e.length;++r)e[r]=t[r].listener||t[r];return e}function Nc(t,e){return new Promise(function(r,i){function n(o){t.removeListener(e,s),i(o)}function s(){typeof t.removeListener==\"function\"&&t.removeListener(\"error\",n),r([].slice.call(arguments))}os(t,e,s,{once:!0}),e!==\"error\"&&Rc(t,n,{once:!0})})}function Rc(t,e,r){typeof t.on==\"function\"&&os(t,\"error\",e,r)}function os(t,e,r,i){if(typeof t.on==\"function\")i.once?t.once(e,r):t.on(e,r);else if(typeof t.addEventListener==\"function\")t.addEventListener(e,function n(s){i.once&&t.removeEventListener(e,n),r(s)});else throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof t)}var Jr={};/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation.\n\n\tPermission to use, copy, modify, and/or distribute this software for any\n\tpurpose with or without fee is hereby granted.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n\tLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n\tOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n\tPERFORMANCE OF THIS SOFTWARE.\n\t***************************************************************************** */var Ti=function(t,e){return Ti=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,i){r.__proto__=i}||function(r,i){for(var n in i)i.hasOwnProperty(n)&&(r[n]=i[n])},Ti(t,e)};function Fc(t,e){Ti(t,e);function r(){this.constructor=t}t.prototype=e===null?Object.create(e):(r.prototype=e.prototype,new r)}var Ci=function(){return Ci=Object.assign||function(e){for(var r,i=1,n=arguments.length;i<n;i++){r=arguments[i];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},Ci.apply(this,arguments)};function Lc(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&typeof Object.getOwnPropertySymbols==\"function\")for(var n=0,i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]]);return r}function $c(t,e,r,i){var n=arguments.length,s=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,o;if(typeof Reflect==\"object\"&&typeof Reflect.decorate==\"function\")s=Reflect.decorate(t,e,r,i);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(s=(n<3?o(s):n>3?o(e,r,s):o(e,r))||s);return n>3&&s&&Object.defineProperty(e,r,s),s}function Uc(t,e){return function(r,i){e(r,i,t)}}function Mc(t,e){if(typeof Reflect==\"object\"&&typeof Reflect.metadata==\"function\")return Reflect.metadata(t,e)}function jc(t,e,r,i){function n(s){return s instanceof r?s:new r(function(o){o(s)})}return new(r||(r=Promise))(function(s,o){function c(f){try{h(i.next(f))}catch(S){o(S)}}function l(f){try{h(i.throw(f))}catch(S){o(S)}}function h(f){f.done?s(f.value):n(f.value).then(c,l)}h((i=i.apply(t,e||[])).next())})}function Bc(t,e){var r={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,n,s,o;return o={next:c(0),throw:c(1),return:c(2)},typeof Symbol==\"function\"&&(o[Symbol.iterator]=function(){return this}),o;function c(h){return function(f){return l([h,f])}}function l(h){if(i)throw new TypeError(\"Generator is already executing.\");for(;r;)try{if(i=1,n&&(s=h[0]&2?n.return:h[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,h[1])).done)return s;switch(n=0,s&&(h=[h[0]&2,s.value]),h[0]){case 0:case 1:s=h;break;case 4:return r.label++,{value:h[1],done:!1};case 5:r.label++,n=h[1],h=[0];continue;case 7:h=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(h[0]===6||h[0]===2)){r=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){r.label=h[1];break}if(h[0]===6&&r.label<s[1]){r.label=s[1],s=h;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(h);break}s[2]&&r.ops.pop(),r.trys.pop();continue}h=e.call(t,r)}catch(f){h=[6,f],n=0}finally{i=s=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function Hc(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}function qc(t,e){for(var r in t)r!==\"default\"&&!e.hasOwnProperty(r)&&(e[r]=t[r])}function Ni(t){var e=typeof Symbol==\"function\"&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&typeof t.length==\"number\")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function as(t,e){var r=typeof Symbol==\"function\"&&t[Symbol.iterator];if(!r)return t;var i=r.call(t),n,s=[],o;try{for(;(e===void 0||e-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(c){o={error:c}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s}function zc(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(as(arguments[e]));return t}function Kc(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;for(var i=Array(t),n=0,e=0;e<r;e++)for(var s=arguments[e],o=0,c=s.length;o<c;o++,n++)i[n]=s[o];return i}function pr(t){return this instanceof pr?(this.v=t,this):new pr(t)}function Vc(t,e,r){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i=r.apply(t,e||[]),n,s=[];return n={},o(\"next\"),o(\"throw\"),o(\"return\"),n[Symbol.asyncIterator]=function(){return this},n;function o(w){i[w]&&(n[w]=function(v){return new Promise(function(m,R){s.push([w,v,m,R])>1||c(w,v)})})}function c(w,v){try{l(i[w](v))}catch(m){S(s[0][3],m)}}function l(w){w.value instanceof pr?Promise.resolve(w.value.v).then(h,f):S(s[0][2],w)}function h(w){c(\"next\",w)}function f(w){c(\"throw\",w)}function S(w,v){w(v),s.shift(),s.length&&c(s[0][0],s[0][1])}}function Gc(t){var e,r;return e={},i(\"next\"),i(\"throw\",function(n){throw n}),i(\"return\"),e[Symbol.iterator]=function(){return this},e;function i(n,s){e[n]=t[n]?function(o){return(r=!r)?{value:pr(t[n](o)),done:n===\"return\"}:s?s(o):o}:s}}function kc(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e=t[Symbol.asyncIterator],r;return e?e.call(t):(t=typeof Ni==\"function\"?Ni(t):t[Symbol.iterator](),r={},i(\"next\"),i(\"throw\"),i(\"return\"),r[Symbol.asyncIterator]=function(){return this},r);function i(s){r[s]=t[s]&&function(o){return new Promise(function(c,l){o=t[s](o),n(c,l,o.done,o.value)})}}function n(s,o,c,l){Promise.resolve(l).then(function(h){s({value:h,done:c})},o)}}function Wc(t,e){return Object.defineProperty?Object.defineProperty(t,\"raw\",{value:e}):t.raw=e,t}function Yc(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function Jc(t){return t&&t.__esModule?t:{default:t}}function Xc(t,e){if(!e.has(t))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(t)}function Zc(t,e,r){if(!e.has(t))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(t,r),r}var Qc=Object.freeze({__proto__:null,__extends:Fc,get __assign(){return Ci},__rest:Lc,__decorate:$c,__param:Uc,__metadata:Mc,__awaiter:jc,__generator:Bc,__createBinding:Hc,__exportStar:qc,__values:Ni,__read:as,__spread:zc,__spreadArrays:Kc,__await:pr,__asyncGenerator:Vc,__asyncDelegator:Gc,__asyncValues:kc,__makeTemplateObject:Wc,__importStar:Yc,__importDefault:Jc,__classPrivateFieldGet:Xc,__classPrivateFieldSet:Zc}),cs=Kt(Qc),gr={};Object.defineProperty(gr,\"__esModule\",{value:!0});function eu(t){if(typeof t!=\"string\")throw new Error(`Cannot safe json parse value of type ${typeof t}`);try{return JSON.parse(t)}catch{return t}}gr.safeJsonParse=eu;function tu(t){return typeof t==\"string\"?t:JSON.stringify(t,(e,r)=>typeof r>\"u\"?null:r)}gr.safeJsonStringify=tu;var yr={exports:{}},us;function ru(){return us||(us=1,function(){let t;function e(){}t=e,t.prototype.getItem=function(r){return this.hasOwnProperty(r)?String(this[r]):null},t.prototype.setItem=function(r,i){this[r]=String(i)},t.prototype.removeItem=function(r){delete this[r]},t.prototype.clear=function(){const r=this;Object.keys(r).forEach(function(i){r[i]=void 0,delete r[i]})},t.prototype.key=function(r){return r=r||0,Object.keys(this)[r]},t.prototype.__defineGetter__(\"length\",function(){return Object.keys(this).length}),typeof ze<\"u\"&&ze.localStorage?yr.exports=ze.localStorage:typeof window<\"u\"&&window.localStorage?yr.exports=window.localStorage:yr.exports=new e}()),yr.exports}var Ri={},_r={},hs;function iu(){if(hs)return _r;hs=1,Object.defineProperty(_r,\"__esModule\",{value:!0}),_r.IKeyValueStorage=void 0;class t{}return _r.IKeyValueStorage=t,_r}var br={},ls;function nu(){if(ls)return br;ls=1,Object.defineProperty(br,\"__esModule\",{value:!0}),br.parseEntry=void 0;const t=gr;function e(r){var i;return[r[0],t.safeJsonParse((i=r[1])!==null&&i!==void 0?i:\"\")]}return br.parseEntry=e,br}var fs;function su(){return fs||(fs=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=cs;e.__exportStar(iu(),t),e.__exportStar(nu(),t)}(Ri)),Ri}Object.defineProperty(Jr,\"__esModule\",{value:!0}),Jr.KeyValueStorage=void 0;const or=cs,ds=gr,ou=or.__importDefault(ru()),au=su();class ps{constructor(){this.localStorage=ou.default}getKeys(){return or.__awaiter(this,void 0,void 0,function*(){return Object.keys(this.localStorage)})}getEntries(){return or.__awaiter(this,void 0,void 0,function*(){return Object.entries(this.localStorage).map(au.parseEntry)})}getItem(e){return or.__awaiter(this,void 0,void 0,function*(){const r=this.localStorage.getItem(e);if(r!==null)return ds.safeJsonParse(r)})}setItem(e,r){return or.__awaiter(this,void 0,void 0,function*(){this.localStorage.setItem(e,ds.safeJsonStringify(r))})}removeItem(e){return or.__awaiter(this,void 0,void 0,function*(){this.localStorage.removeItem(e)})}}Jr.KeyValueStorage=ps;var cu=Jr.default=ps,vr={};/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation.\n\n\tPermission to use, copy, modify, and/or distribute this software for any\n\tpurpose with or without fee is hereby granted.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n\tLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n\tOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n\tPERFORMANCE OF THIS SOFTWARE.\n\t***************************************************************************** */var Fi=function(t,e){return Fi=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,i){r.__proto__=i}||function(r,i){for(var n in i)i.hasOwnProperty(n)&&(r[n]=i[n])},Fi(t,e)};function uu(t,e){Fi(t,e);function r(){this.constructor=t}t.prototype=e===null?Object.create(e):(r.prototype=e.prototype,new r)}var Li=function(){return Li=Object.assign||function(e){for(var r,i=1,n=arguments.length;i<n;i++){r=arguments[i];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},Li.apply(this,arguments)};function hu(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&typeof Object.getOwnPropertySymbols==\"function\")for(var n=0,i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]]);return r}function lu(t,e,r,i){var n=arguments.length,s=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,o;if(typeof Reflect==\"object\"&&typeof Reflect.decorate==\"function\")s=Reflect.decorate(t,e,r,i);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(s=(n<3?o(s):n>3?o(e,r,s):o(e,r))||s);return n>3&&s&&Object.defineProperty(e,r,s),s}function fu(t,e){return function(r,i){e(r,i,t)}}function du(t,e){if(typeof Reflect==\"object\"&&typeof Reflect.metadata==\"function\")return Reflect.metadata(t,e)}function pu(t,e,r,i){function n(s){return s instanceof r?s:new r(function(o){o(s)})}return new(r||(r=Promise))(function(s,o){function c(f){try{h(i.next(f))}catch(S){o(S)}}function l(f){try{h(i.throw(f))}catch(S){o(S)}}function h(f){f.done?s(f.value):n(f.value).then(c,l)}h((i=i.apply(t,e||[])).next())})}function gu(t,e){var r={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,n,s,o;return o={next:c(0),throw:c(1),return:c(2)},typeof Symbol==\"function\"&&(o[Symbol.iterator]=function(){return this}),o;function c(h){return function(f){return l([h,f])}}function l(h){if(i)throw new TypeError(\"Generator is already executing.\");for(;r;)try{if(i=1,n&&(s=h[0]&2?n.return:h[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,h[1])).done)return s;switch(n=0,s&&(h=[h[0]&2,s.value]),h[0]){case 0:case 1:s=h;break;case 4:return r.label++,{value:h[1],done:!1};case 5:r.label++,n=h[1],h=[0];continue;case 7:h=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(h[0]===6||h[0]===2)){r=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){r.label=h[1];break}if(h[0]===6&&r.label<s[1]){r.label=s[1],s=h;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(h);break}s[2]&&r.ops.pop(),r.trys.pop();continue}h=e.call(t,r)}catch(f){h=[6,f],n=0}finally{i=s=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function yu(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}function _u(t,e){for(var r in t)r!==\"default\"&&!e.hasOwnProperty(r)&&(e[r]=t[r])}function $i(t){var e=typeof Symbol==\"function\"&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&typeof t.length==\"number\")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function gs(t,e){var r=typeof Symbol==\"function\"&&t[Symbol.iterator];if(!r)return t;var i=r.call(t),n,s=[],o;try{for(;(e===void 0||e-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(c){o={error:c}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s}function bu(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(gs(arguments[e]));return t}function vu(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;for(var i=Array(t),n=0,e=0;e<r;e++)for(var s=arguments[e],o=0,c=s.length;o<c;o++,n++)i[n]=s[o];return i}function wr(t){return this instanceof wr?(this.v=t,this):new wr(t)}function wu(t,e,r){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i=r.apply(t,e||[]),n,s=[];return n={},o(\"next\"),o(\"throw\"),o(\"return\"),n[Symbol.asyncIterator]=function(){return this},n;function o(w){i[w]&&(n[w]=function(v){return new Promise(function(m,R){s.push([w,v,m,R])>1||c(w,v)})})}function c(w,v){try{l(i[w](v))}catch(m){S(s[0][3],m)}}function l(w){w.value instanceof wr?Promise.resolve(w.value.v).then(h,f):S(s[0][2],w)}function h(w){c(\"next\",w)}function f(w){c(\"throw\",w)}function S(w,v){w(v),s.shift(),s.length&&c(s[0][0],s[0][1])}}function mu(t){var e,r;return e={},i(\"next\"),i(\"throw\",function(n){throw n}),i(\"return\"),e[Symbol.iterator]=function(){return this},e;function i(n,s){e[n]=t[n]?function(o){return(r=!r)?{value:wr(t[n](o)),done:n===\"return\"}:s?s(o):o}:s}}function Eu(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e=t[Symbol.asyncIterator],r;return e?e.call(t):(t=typeof $i==\"function\"?$i(t):t[Symbol.iterator](),r={},i(\"next\"),i(\"throw\"),i(\"return\"),r[Symbol.asyncIterator]=function(){return this},r);function i(s){r[s]=t[s]&&function(o){return new Promise(function(c,l){o=t[s](o),n(c,l,o.done,o.value)})}}function n(s,o,c,l){Promise.resolve(l).then(function(h){s({value:h,done:c})},o)}}function Du(t,e){return Object.defineProperty?Object.defineProperty(t,\"raw\",{value:e}):t.raw=e,t}function Su(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function xu(t){return t&&t.__esModule?t:{default:t}}function Ou(t,e){if(!e.has(t))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(t)}function Iu(t,e,r){if(!e.has(t))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(t,r),r}var Pu=Object.freeze({__proto__:null,__extends:uu,get __assign(){return Li},__rest:hu,__decorate:lu,__param:fu,__metadata:du,__awaiter:pu,__generator:gu,__createBinding:yu,__exportStar:_u,__values:$i,__read:gs,__spread:bu,__spreadArrays:vu,__await:wr,__asyncGenerator:wu,__asyncDelegator:mu,__asyncValues:Eu,__makeTemplateObject:Du,__importStar:Su,__importDefault:xu,__classPrivateFieldGet:Ou,__classPrivateFieldSet:Iu}),Xr=Kt(Pu),mr={},Z={};/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation.\n\n\tPermission to use, copy, modify, and/or distribute this software for any\n\tpurpose with or without fee is hereby granted.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n\tLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n\tOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n\tPERFORMANCE OF THIS SOFTWARE.\n\t***************************************************************************** */var Ui=function(t,e){return Ui=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,i){r.__proto__=i}||function(r,i){for(var n in i)i.hasOwnProperty(n)&&(r[n]=i[n])},Ui(t,e)};function Au(t,e){Ui(t,e);function r(){this.constructor=t}t.prototype=e===null?Object.create(e):(r.prototype=e.prototype,new r)}var Mi=function(){return Mi=Object.assign||function(e){for(var r,i=1,n=arguments.length;i<n;i++){r=arguments[i];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},Mi.apply(this,arguments)};function Tu(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&typeof Object.getOwnPropertySymbols==\"function\")for(var n=0,i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]]);return r}function Cu(t,e,r,i){var n=arguments.length,s=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,o;if(typeof Reflect==\"object\"&&typeof Reflect.decorate==\"function\")s=Reflect.decorate(t,e,r,i);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(s=(n<3?o(s):n>3?o(e,r,s):o(e,r))||s);return n>3&&s&&Object.defineProperty(e,r,s),s}function Nu(t,e){return function(r,i){e(r,i,t)}}function Ru(t,e){if(typeof Reflect==\"object\"&&typeof Reflect.metadata==\"function\")return Reflect.metadata(t,e)}function Fu(t,e,r,i){function n(s){return s instanceof r?s:new r(function(o){o(s)})}return new(r||(r=Promise))(function(s,o){function c(f){try{h(i.next(f))}catch(S){o(S)}}function l(f){try{h(i.throw(f))}catch(S){o(S)}}function h(f){f.done?s(f.value):n(f.value).then(c,l)}h((i=i.apply(t,e||[])).next())})}function Lu(t,e){var r={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,n,s,o;return o={next:c(0),throw:c(1),return:c(2)},typeof Symbol==\"function\"&&(o[Symbol.iterator]=function(){return this}),o;function c(h){return function(f){return l([h,f])}}function l(h){if(i)throw new TypeError(\"Generator is already executing.\");for(;r;)try{if(i=1,n&&(s=h[0]&2?n.return:h[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,h[1])).done)return s;switch(n=0,s&&(h=[h[0]&2,s.value]),h[0]){case 0:case 1:s=h;break;case 4:return r.label++,{value:h[1],done:!1};case 5:r.label++,n=h[1],h=[0];continue;case 7:h=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(h[0]===6||h[0]===2)){r=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){r.label=h[1];break}if(h[0]===6&&r.label<s[1]){r.label=s[1],s=h;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(h);break}s[2]&&r.ops.pop(),r.trys.pop();continue}h=e.call(t,r)}catch(f){h=[6,f],n=0}finally{i=s=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function $u(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}function Uu(t,e){for(var r in t)r!==\"default\"&&!e.hasOwnProperty(r)&&(e[r]=t[r])}function ji(t){var e=typeof Symbol==\"function\"&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&typeof t.length==\"number\")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function ys(t,e){var r=typeof Symbol==\"function\"&&t[Symbol.iterator];if(!r)return t;var i=r.call(t),n,s=[],o;try{for(;(e===void 0||e-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(c){o={error:c}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s}function Mu(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(ys(arguments[e]));return t}function ju(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;for(var i=Array(t),n=0,e=0;e<r;e++)for(var s=arguments[e],o=0,c=s.length;o<c;o++,n++)i[n]=s[o];return i}function Er(t){return this instanceof Er?(this.v=t,this):new Er(t)}function Bu(t,e,r){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i=r.apply(t,e||[]),n,s=[];return n={},o(\"next\"),o(\"throw\"),o(\"return\"),n[Symbol.asyncIterator]=function(){return this},n;function o(w){i[w]&&(n[w]=function(v){return new Promise(function(m,R){s.push([w,v,m,R])>1||c(w,v)})})}function c(w,v){try{l(i[w](v))}catch(m){S(s[0][3],m)}}function l(w){w.value instanceof Er?Promise.resolve(w.value.v).then(h,f):S(s[0][2],w)}function h(w){c(\"next\",w)}function f(w){c(\"throw\",w)}function S(w,v){w(v),s.shift(),s.length&&c(s[0][0],s[0][1])}}function Hu(t){var e,r;return e={},i(\"next\"),i(\"throw\",function(n){throw n}),i(\"return\"),e[Symbol.iterator]=function(){return this},e;function i(n,s){e[n]=t[n]?function(o){return(r=!r)?{value:Er(t[n](o)),done:n===\"return\"}:s?s(o):o}:s}}function qu(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e=t[Symbol.asyncIterator],r;return e?e.call(t):(t=typeof ji==\"function\"?ji(t):t[Symbol.iterator](),r={},i(\"next\"),i(\"throw\"),i(\"return\"),r[Symbol.asyncIterator]=function(){return this},r);function i(s){r[s]=t[s]&&function(o){return new Promise(function(c,l){o=t[s](o),n(c,l,o.done,o.value)})}}function n(s,o,c,l){Promise.resolve(l).then(function(h){s({value:h,done:c})},o)}}function zu(t,e){return Object.defineProperty?Object.defineProperty(t,\"raw\",{value:e}):t.raw=e,t}function Ku(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function Vu(t){return t&&t.__esModule?t:{default:t}}function Gu(t,e){if(!e.has(t))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(t)}function ku(t,e,r){if(!e.has(t))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(t,r),r}var Wu=Object.freeze({__proto__:null,__extends:Au,get __assign(){return Mi},__rest:Tu,__decorate:Cu,__param:Nu,__metadata:Ru,__awaiter:Fu,__generator:Lu,__createBinding:$u,__exportStar:Uu,__values:ji,__read:ys,__spread:Mu,__spreadArrays:ju,__await:Er,__asyncGenerator:Bu,__asyncDelegator:Hu,__asyncValues:qu,__makeTemplateObject:zu,__importStar:Ku,__importDefault:Vu,__classPrivateFieldGet:Gu,__classPrivateFieldSet:ku}),Zr=Kt(Wu),Bi={},Dr={},_s;function Yu(){if(_s)return Dr;_s=1,Object.defineProperty(Dr,\"__esModule\",{value:!0}),Dr.delay=void 0;function t(e){return new Promise(r=>{setTimeout(()=>{r(!0)},e)})}return Dr.delay=t,Dr}var Vt={},Hi={},Gt={},bs;function Ju(){return bs||(bs=1,Object.defineProperty(Gt,\"__esModule\",{value:!0}),Gt.ONE_THOUSAND=Gt.ONE_HUNDRED=void 0,Gt.ONE_HUNDRED=100,Gt.ONE_THOUSAND=1e3),Gt}var qi={},vs;function Xu(){return vs||(vs=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ONE_YEAR=t.FOUR_WEEKS=t.THREE_WEEKS=t.TWO_WEEKS=t.ONE_WEEK=t.THIRTY_DAYS=t.SEVEN_DAYS=t.FIVE_DAYS=t.THREE_DAYS=t.ONE_DAY=t.TWENTY_FOUR_HOURS=t.TWELVE_HOURS=t.SIX_HOURS=t.THREE_HOURS=t.ONE_HOUR=t.SIXTY_MINUTES=t.THIRTY_MINUTES=t.TEN_MINUTES=t.FIVE_MINUTES=t.ONE_MINUTE=t.SIXTY_SECONDS=t.THIRTY_SECONDS=t.TEN_SECONDS=t.FIVE_SECONDS=t.ONE_SECOND=void 0,t.ONE_SECOND=1,t.FIVE_SECONDS=5,t.TEN_SECONDS=10,t.THIRTY_SECONDS=30,t.SIXTY_SECONDS=60,t.ONE_MINUTE=t.SIXTY_SECONDS,t.FIVE_MINUTES=t.ONE_MINUTE*5,t.TEN_MINUTES=t.ONE_MINUTE*10,t.THIRTY_MINUTES=t.ONE_MINUTE*30,t.SIXTY_MINUTES=t.ONE_MINUTE*60,t.ONE_HOUR=t.SIXTY_MINUTES,t.THREE_HOURS=t.ONE_HOUR*3,t.SIX_HOURS=t.ONE_HOUR*6,t.TWELVE_HOURS=t.ONE_HOUR*12,t.TWENTY_FOUR_HOURS=t.ONE_HOUR*24,t.ONE_DAY=t.TWENTY_FOUR_HOURS,t.THREE_DAYS=t.ONE_DAY*3,t.FIVE_DAYS=t.ONE_DAY*5,t.SEVEN_DAYS=t.ONE_DAY*7,t.THIRTY_DAYS=t.ONE_DAY*30,t.ONE_WEEK=t.SEVEN_DAYS,t.TWO_WEEKS=t.ONE_WEEK*2,t.THREE_WEEKS=t.ONE_WEEK*3,t.FOUR_WEEKS=t.ONE_WEEK*4,t.ONE_YEAR=t.ONE_DAY*365}(qi)),qi}var ws;function ms(){return ws||(ws=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=Zr;e.__exportStar(Ju(),t),e.__exportStar(Xu(),t)}(Hi)),Hi}var Es;function Zu(){if(Es)return Vt;Es=1,Object.defineProperty(Vt,\"__esModule\",{value:!0}),Vt.fromMiliseconds=Vt.toMiliseconds=void 0;const t=ms();function e(i){return i*t.ONE_THOUSAND}Vt.toMiliseconds=e;function r(i){return Math.floor(i/t.ONE_THOUSAND)}return Vt.fromMiliseconds=r,Vt}var Ds;function Qu(){return Ds||(Ds=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=Zr;e.__exportStar(Yu(),t),e.__exportStar(Zu(),t)}(Bi)),Bi}var ar={},Ss;function eh(){if(Ss)return ar;Ss=1,Object.defineProperty(ar,\"__esModule\",{value:!0}),ar.Watch=void 0;class t{constructor(){this.timestamps=new Map}start(r){if(this.timestamps.has(r))throw new Error(`Watch already started for label: ${r}`);this.timestamps.set(r,{started:Date.now()})}stop(r){const i=this.get(r);if(typeof i.elapsed<\"u\")throw new Error(`Watch already stopped for label: ${r}`);const n=Date.now()-i.started;this.timestamps.set(r,{started:i.started,elapsed:n})}get(r){const i=this.timestamps.get(r);if(typeof i>\"u\")throw new Error(`No timestamp found for label: ${r}`);return i}elapsed(r){const i=this.get(r);return i.elapsed||Date.now()-i.started}}return ar.Watch=t,ar.default=t,ar}var zi={},Sr={},xs;function th(){if(xs)return Sr;xs=1,Object.defineProperty(Sr,\"__esModule\",{value:!0}),Sr.IWatch=void 0;class t{}return Sr.IWatch=t,Sr}var Os;function rh(){return Os||(Os=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),Zr.__exportStar(th(),t)}(zi)),zi}(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=Zr;e.__exportStar(Qu(),t),e.__exportStar(eh(),t),e.__exportStar(rh(),t),e.__exportStar(ms(),t)})(Z);var Ki={},xr={};class kt{}var ih=Object.freeze({__proto__:null,IEvents:kt}),nh=Kt(ih),Is;function sh(){if(Is)return xr;Is=1,Object.defineProperty(xr,\"__esModule\",{value:!0}),xr.IHeartBeat=void 0;const t=nh;class e extends t.IEvents{constructor(i){super()}}return xr.IHeartBeat=e,xr}var Ps;function As(){return Ps||(Ps=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),Xr.__exportStar(sh(),t)}(Ki)),Ki}var Vi={},Wt={},Ts;function oh(){if(Ts)return Wt;Ts=1,Object.defineProperty(Wt,\"__esModule\",{value:!0}),Wt.HEARTBEAT_EVENTS=Wt.HEARTBEAT_INTERVAL=void 0;const t=Z;return Wt.HEARTBEAT_INTERVAL=t.FIVE_SECONDS,Wt.HEARTBEAT_EVENTS={pulse:\"heartbeat_pulse\"},Wt}var Cs;function Ns(){return Cs||(Cs=1,function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),Xr.__exportStar(oh(),t)}(Vi)),Vi}var Rs;function ah(){if(Rs)return mr;Rs=1,Object.defineProperty(mr,\"__esModule\",{value:!0}),mr.HeartBeat=void 0;const t=Xr,e=it.exports,r=Z,i=As(),n=Ns();class s extends i.IHeartBeat{constructor(c){super(c),this.events=new e.EventEmitter,this.interval=n.HEARTBEAT_INTERVAL,this.interval=c?.interval||n.HEARTBEAT_INTERVAL}static init(c){return t.__awaiter(this,void 0,void 0,function*(){const l=new s(c);return yield l.init(),l})}init(){return t.__awaiter(this,void 0,void 0,function*(){yield this.initialize()})}stop(){clearInterval(this.intervalRef)}on(c,l){this.events.on(c,l)}once(c,l){this.events.once(c,l)}off(c,l){this.events.off(c,l)}removeListener(c,l){this.events.removeListener(c,l)}initialize(){return t.__awaiter(this,void 0,void 0,function*(){this.intervalRef=setInterval(()=>this.pulse(),r.toMiliseconds(this.interval))})}pulse(){this.events.emit(n.HEARTBEAT_EVENTS.pulse)}}return mr.HeartBeat=s,mr}(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=Xr;e.__exportStar(ah(),t),e.__exportStar(As(),t),e.__exportStar(Ns(),t)})(vr);var Se={};/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation.\n\n\tPermission to use, copy, modify, and/or distribute this software for any\n\tpurpose with or without fee is hereby granted.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n\tLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n\tOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n\tPERFORMANCE OF THIS SOFTWARE.\n\t***************************************************************************** */var Gi=function(t,e){return Gi=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,i){r.__proto__=i}||function(r,i){for(var n in i)i.hasOwnProperty(n)&&(r[n]=i[n])},Gi(t,e)};function ch(t,e){Gi(t,e);function r(){this.constructor=t}t.prototype=e===null?Object.create(e):(r.prototype=e.prototype,new r)}var ki=function(){return ki=Object.assign||function(e){for(var r,i=1,n=arguments.length;i<n;i++){r=arguments[i];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},ki.apply(this,arguments)};function uh(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&typeof Object.getOwnPropertySymbols==\"function\")for(var n=0,i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]]);return r}function hh(t,e,r,i){var n=arguments.length,s=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,o;if(typeof Reflect==\"object\"&&typeof Reflect.decorate==\"function\")s=Reflect.decorate(t,e,r,i);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(s=(n<3?o(s):n>3?o(e,r,s):o(e,r))||s);return n>3&&s&&Object.defineProperty(e,r,s),s}function lh(t,e){return function(r,i){e(r,i,t)}}function fh(t,e){if(typeof Reflect==\"object\"&&typeof Reflect.metadata==\"function\")return Reflect.metadata(t,e)}function dh(t,e,r,i){function n(s){return s instanceof r?s:new r(function(o){o(s)})}return new(r||(r=Promise))(function(s,o){function c(f){try{h(i.next(f))}catch(S){o(S)}}function l(f){try{h(i.throw(f))}catch(S){o(S)}}function h(f){f.done?s(f.value):n(f.value).then(c,l)}h((i=i.apply(t,e||[])).next())})}function ph(t,e){var r={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,n,s,o;return o={next:c(0),throw:c(1),return:c(2)},typeof Symbol==\"function\"&&(o[Symbol.iterator]=function(){return this}),o;function c(h){return function(f){return l([h,f])}}function l(h){if(i)throw new TypeError(\"Generator is already executing.\");for(;r;)try{if(i=1,n&&(s=h[0]&2?n.return:h[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,h[1])).done)return s;switch(n=0,s&&(h=[h[0]&2,s.value]),h[0]){case 0:case 1:s=h;break;case 4:return r.label++,{value:h[1],done:!1};case 5:r.label++,n=h[1],h=[0];continue;case 7:h=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(h[0]===6||h[0]===2)){r=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){r.label=h[1];break}if(h[0]===6&&r.label<s[1]){r.label=s[1],s=h;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(h);break}s[2]&&r.ops.pop(),r.trys.pop();continue}h=e.call(t,r)}catch(f){h=[6,f],n=0}finally{i=s=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function gh(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}function yh(t,e){for(var r in t)r!==\"default\"&&!e.hasOwnProperty(r)&&(e[r]=t[r])}function Wi(t){var e=typeof Symbol==\"function\"&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&typeof t.length==\"number\")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function Fs(t,e){var r=typeof Symbol==\"function\"&&t[Symbol.iterator];if(!r)return t;var i=r.call(t),n,s=[],o;try{for(;(e===void 0||e-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(c){o={error:c}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s}function _h(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(Fs(arguments[e]));return t}function bh(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;for(var i=Array(t),n=0,e=0;e<r;e++)for(var s=arguments[e],o=0,c=s.length;o<c;o++,n++)i[n]=s[o];return i}function Or(t){return this instanceof Or?(this.v=t,this):new Or(t)}function vh(t,e,r){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i=r.apply(t,e||[]),n,s=[];return n={},o(\"next\"),o(\"throw\"),o(\"return\"),n[Symbol.asyncIterator]=function(){return this},n;function o(w){i[w]&&(n[w]=function(v){return new Promise(function(m,R){s.push([w,v,m,R])>1||c(w,v)})})}function c(w,v){try{l(i[w](v))}catch(m){S(s[0][3],m)}}function l(w){w.value instanceof Or?Promise.resolve(w.value.v).then(h,f):S(s[0][2],w)}function h(w){c(\"next\",w)}function f(w){c(\"throw\",w)}function S(w,v){w(v),s.shift(),s.length&&c(s[0][0],s[0][1])}}function wh(t){var e,r;return e={},i(\"next\"),i(\"throw\",function(n){throw n}),i(\"return\"),e[Symbol.iterator]=function(){return this},e;function i(n,s){e[n]=t[n]?function(o){return(r=!r)?{value:Or(t[n](o)),done:n===\"return\"}:s?s(o):o}:s}}function mh(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e=t[Symbol.asyncIterator],r;return e?e.call(t):(t=typeof Wi==\"function\"?Wi(t):t[Symbol.iterator](),r={},i(\"next\"),i(\"throw\"),i(\"return\"),r[Symbol.asyncIterator]=function(){return this},r);function i(s){r[s]=t[s]&&function(o){return new Promise(function(c,l){o=t[s](o),n(c,l,o.done,o.value)})}}function n(s,o,c,l){Promise.resolve(l).then(function(h){s({value:h,done:c})},o)}}function Eh(t,e){return Object.defineProperty?Object.defineProperty(t,\"raw\",{value:e}):t.raw=e,t}function Dh(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function Sh(t){return t&&t.__esModule?t:{default:t}}function xh(t,e){if(!e.has(t))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(t)}function Oh(t,e,r){if(!e.has(t))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(t,r),r}var Ih=Object.freeze({__proto__:null,__extends:ch,get __assign(){return ki},__rest:uh,__decorate:hh,__param:lh,__metadata:fh,__awaiter:dh,__generator:ph,__createBinding:gh,__exportStar:yh,__values:Wi,__read:Fs,__spread:_h,__spreadArrays:bh,__await:Or,__asyncGenerator:vh,__asyncDelegator:wh,__asyncValues:mh,__makeTemplateObject:Eh,__importStar:Dh,__importDefault:Sh,__classPrivateFieldGet:xh,__classPrivateFieldSet:Oh}),Ph=Kt(Ih),Yt={},Ls;function $s(){return Ls||(Ls=1,Object.defineProperty(Yt,\"__esModule\",{value:!0}),Yt.PINO_CUSTOM_CONTEXT_KEY=Yt.PINO_LOGGER_DEFAULTS=void 0,Yt.PINO_LOGGER_DEFAULTS={level:\"info\"},Yt.PINO_CUSTOM_CONTEXT_KEY=\"custom_context\"),Yt}var ot={},Us;function Ah(){if(Us)return ot;Us=1,Object.defineProperty(ot,\"__esModule\",{value:!0}),ot.generateChildLogger=ot.formatChildLoggerContext=ot.getLoggerContext=ot.setBrowserLoggerContext=ot.getBrowserLoggerContext=ot.getDefaultLoggerOptions=void 0;const t=$s();function e(c){return Object.assign(Object.assign({},c),{level:c?.level||t.PINO_LOGGER_DEFAULTS.level})}ot.getDefaultLoggerOptions=e;function r(c,l=t.PINO_CUSTOM_CONTEXT_KEY){return c[l]||\"\"}ot.getBrowserLoggerContext=r;function i(c,l,h=t.PINO_CUSTOM_CONTEXT_KEY){return c[h]=l,c}ot.setBrowserLoggerContext=i;function n(c,l=t.PINO_CUSTOM_CONTEXT_KEY){let h=\"\";return typeof c.bindings>\"u\"?h=r(c,l):h=c.bindings().context||\"\",h}ot.getLoggerContext=n;function s(c,l,h=t.PINO_CUSTOM_CONTEXT_KEY){const f=n(c,h);return f.trim()?`${f}/${l}`:l}ot.formatChildLoggerContext=s;function o(c,l,h=t.PINO_CUSTOM_CONTEXT_KEY){const f=s(c,l,h),S=c.child({context:f});return i(S,f,h)}return ot.generateChildLogger=o,ot}(function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.pino=void 0;const e=Ph,r=e.__importDefault(lr);Object.defineProperty(t,\"pino\",{enumerable:!0,get:function(){return r.default}}),e.__exportStar($s(),t),e.__exportStar(Ah(),t)})(Se);class Th extends kt{constructor(e){super(),this.opts=e,this.protocol=\"wc\",this.version=2}}class Ch extends kt{constructor(e,r){super(),this.core=e,this.logger=r,this.records=new Map}}class Nh{constructor(e,r){this.logger=e,this.core=r}}class Rh extends kt{constructor(e,r){super(),this.relayer=e,this.logger=r}}class Fh extends kt{constructor(e){super()}}class Lh{constructor(e,r,i,n){this.core=e,this.logger=r,this.name=i}}class $h extends kt{constructor(e,r){super(),this.relayer=e,this.logger=r}}class Uh extends kt{constructor(e,r){super(),this.core=e,this.logger=r}}class Mh{constructor(e){this.opts=e,this.protocol=\"wc\",this.version=2}}class jh{constructor(e){this.client=e}}function Yi(t){if(typeof t!=\"string\")throw new Error(`Cannot safe json parse value of type ${typeof t}`);try{return JSON.parse(t)}catch{return t}}function Ir(t){return typeof t==\"string\"?t:JSON.stringify(t)}var Ji={},cr={},Qr={},ei={};Object.defineProperty(ei,\"__esModule\",{value:!0}),ei.BrowserRandomSource=void 0;const Ms=65536;class Bh{constructor(){this.isAvailable=!1,this.isInstantiated=!1;const e=typeof self<\"u\"?self.crypto||self.msCrypto:null;e&&e.getRandomValues!==void 0&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error(\"Browser random byte generator is not available.\");const r=new Uint8Array(e);for(let i=0;i<r.length;i+=Ms)this._crypto.getRandomValues(r.subarray(i,i+Math.min(r.length-i,Ms)));return r}}ei.BrowserRandomSource=Bh;function Hh(t){throw new Error('Could not dynamically require \"'+t+'\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var ti={},dt={};Object.defineProperty(dt,\"__esModule\",{value:!0});function qh(t){for(var e=0;e<t.length;e++)t[e]=0;return t}dt.wipe=qh;var zh={},Kh=Object.freeze({__proto__:null,default:zh}),Vh=Kt(Kh);Object.defineProperty(ti,\"__esModule\",{value:!0}),ti.NodeRandomSource=void 0;const Gh=dt;class kh{constructor(){if(this.isAvailable=!1,this.isInstantiated=!1,typeof Hh<\"u\"){const e=Vh;e&&e.randomBytes&&(this._crypto=e,this.isAvailable=!0,this.isInstantiated=!0)}}randomBytes(e){if(!this.isAvailable||!this._crypto)throw new Error(\"Node.js random byte generator is not available.\");let r=this._crypto.randomBytes(e);if(r.length!==e)throw new Error(\"NodeRandomSource: got fewer bytes than requested\");const i=new Uint8Array(e);for(let n=0;n<i.length;n++)i[n]=r[n];return(0,Gh.wipe)(r),i}}ti.NodeRandomSource=kh,Object.defineProperty(Qr,\"__esModule\",{value:!0}),Qr.SystemRandomSource=void 0;const Wh=ei,Yh=ti;class Jh{constructor(){if(this.isAvailable=!1,this.name=\"\",this._source=new Wh.BrowserRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name=\"Browser\";return}if(this._source=new Yh.NodeRandomSource,this._source.isAvailable){this.isAvailable=!0,this.name=\"Node\";return}}randomBytes(e){if(!this.isAvailable)throw new Error(\"System random byte generator is not available.\");return this._source.randomBytes(e)}}Qr.SystemRandomSource=Jh;var re={},js={};(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});function e(c,l){var h=c>>>16&65535,f=c&65535,S=l>>>16&65535,w=l&65535;return f*w+(h*w+f*S<<16>>>0)|0}t.mul=Math.imul||e;function r(c,l){return c+l|0}t.add=r;function i(c,l){return c-l|0}t.sub=i;function n(c,l){return c<<l|c>>>32-l}t.rotl=n;function s(c,l){return c<<32-l|c>>>l}t.rotr=s;function o(c){return typeof c==\"number\"&&isFinite(c)&&Math.floor(c)===c}t.isInteger=Number.isInteger||o,t.MAX_SAFE_INTEGER=9007199254740991,t.isSafeInteger=function(c){return t.isInteger(c)&&c>=-t.MAX_SAFE_INTEGER&&c<=t.MAX_SAFE_INTEGER}})(js),Object.defineProperty(re,\"__esModule\",{value:!0});var Bs=js;function Xh(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])<<16>>16}re.readInt16BE=Xh;function Zh(t,e){return e===void 0&&(e=0),(t[e+0]<<8|t[e+1])>>>0}re.readUint16BE=Zh;function Qh(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])<<16>>16}re.readInt16LE=Qh;function el(t,e){return e===void 0&&(e=0),(t[e+1]<<8|t[e])>>>0}re.readUint16LE=el;function Hs(t,e,r){return e===void 0&&(e=new Uint8Array(2)),r===void 0&&(r=0),e[r+0]=t>>>8,e[r+1]=t>>>0,e}re.writeUint16BE=Hs,re.writeInt16BE=Hs;function qs(t,e,r){return e===void 0&&(e=new Uint8Array(2)),r===void 0&&(r=0),e[r+0]=t>>>0,e[r+1]=t>>>8,e}re.writeUint16LE=qs,re.writeInt16LE=qs;function Xi(t,e){return e===void 0&&(e=0),t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3]}re.readInt32BE=Xi;function Zi(t,e){return e===void 0&&(e=0),(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}re.readUint32BE=Zi;function Qi(t,e){return e===void 0&&(e=0),t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e]}re.readInt32LE=Qi;function en(t,e){return e===void 0&&(e=0),(t[e+3]<<24|t[e+2]<<16|t[e+1]<<8|t[e])>>>0}re.readUint32LE=en;function ri(t,e,r){return e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0),e[r+0]=t>>>24,e[r+1]=t>>>16,e[r+2]=t>>>8,e[r+3]=t>>>0,e}re.writeUint32BE=ri,re.writeInt32BE=ri;function ii(t,e,r){return e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0),e[r+0]=t>>>0,e[r+1]=t>>>8,e[r+2]=t>>>16,e[r+3]=t>>>24,e}re.writeUint32LE=ii,re.writeInt32LE=ii;function tl(t,e){e===void 0&&(e=0);var r=Xi(t,e),i=Xi(t,e+4);return r*4294967296+i-(i>>31)*4294967296}re.readInt64BE=tl;function rl(t,e){e===void 0&&(e=0);var r=Zi(t,e),i=Zi(t,e+4);return r*4294967296+i}re.readUint64BE=rl;function il(t,e){e===void 0&&(e=0);var r=Qi(t,e),i=Qi(t,e+4);return i*4294967296+r-(r>>31)*4294967296}re.readInt64LE=il;function nl(t,e){e===void 0&&(e=0);var r=en(t,e),i=en(t,e+4);return i*4294967296+r}re.readUint64LE=nl;function zs(t,e,r){return e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0),ri(t/4294967296>>>0,e,r),ri(t>>>0,e,r+4),e}re.writeUint64BE=zs,re.writeInt64BE=zs;function Ks(t,e,r){return e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0),ii(t>>>0,e,r),ii(t/4294967296>>>0,e,r+4),e}re.writeUint64LE=Ks,re.writeInt64LE=Ks;function sl(t,e,r){if(r===void 0&&(r=0),t%8!==0)throw new Error(\"readUintBE supports only bitLengths divisible by 8\");if(t/8>e.length-r)throw new Error(\"readUintBE: array is too short for the given bitLength\");for(var i=0,n=1,s=t/8+r-1;s>=r;s--)i+=e[s]*n,n*=256;return i}re.readUintBE=sl;function ol(t,e,r){if(r===void 0&&(r=0),t%8!==0)throw new Error(\"readUintLE supports only bitLengths divisible by 8\");if(t/8>e.length-r)throw new Error(\"readUintLE: array is too short for the given bitLength\");for(var i=0,n=1,s=r;s<r+t/8;s++)i+=e[s]*n,n*=256;return i}re.readUintLE=ol;function al(t,e,r,i){if(r===void 0&&(r=new Uint8Array(t/8)),i===void 0&&(i=0),t%8!==0)throw new Error(\"writeUintBE supports only bitLengths divisible by 8\");if(!Bs.isSafeInteger(e))throw new Error(\"writeUintBE value must be an integer\");for(var n=1,s=t/8+i-1;s>=i;s--)r[s]=e/n&255,n*=256;return r}re.writeUintBE=al;function cl(t,e,r,i){if(r===void 0&&(r=new Uint8Array(t/8)),i===void 0&&(i=0),t%8!==0)throw new Error(\"writeUintLE supports only bitLengths divisible by 8\");if(!Bs.isSafeInteger(e))throw new Error(\"writeUintLE value must be an integer\");for(var n=1,s=i;s<i+t/8;s++)r[s]=e/n&255,n*=256;return r}re.writeUintLE=cl;function ul(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat32(e)}re.readFloat32BE=ul;function hl(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat32(e,!0)}re.readFloat32LE=hl;function ll(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat64(e)}re.readFloat64BE=ll;function fl(t,e){e===void 0&&(e=0);var r=new DataView(t.buffer,t.byteOffset,t.byteLength);return r.getFloat64(e,!0)}re.readFloat64LE=fl;function dl(t,e,r){e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0);var i=new DataView(e.buffer,e.byteOffset,e.byteLength);return i.setFloat32(r,t),e}re.writeFloat32BE=dl;function pl(t,e,r){e===void 0&&(e=new Uint8Array(4)),r===void 0&&(r=0);var i=new DataView(e.buffer,e.byteOffset,e.byteLength);return i.setFloat32(r,t,!0),e}re.writeFloat32LE=pl;function gl(t,e,r){e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0);var i=new DataView(e.buffer,e.byteOffset,e.byteLength);return i.setFloat64(r,t),e}re.writeFloat64BE=gl;function yl(t,e,r){e===void 0&&(e=new Uint8Array(8)),r===void 0&&(r=0);var i=new DataView(e.buffer,e.byteOffset,e.byteLength);return i.setFloat64(r,t,!0),e}re.writeFloat64LE=yl,function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomStringForEntropy=t.randomString=t.randomUint32=t.randomBytes=t.defaultRandomSource=void 0;const e=Qr,r=re,i=dt;t.defaultRandomSource=new e.SystemRandomSource;function n(h,f=t.defaultRandomSource){return f.randomBytes(h)}t.randomBytes=n;function s(h=t.defaultRandomSource){const f=n(4,h),S=(0,r.readUint32LE)(f);return(0,i.wipe)(f),S}t.randomUint32=s;const o=\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";function c(h,f=o,S=t.defaultRandomSource){if(f.length<2)throw new Error(\"randomString charset is too short\");if(f.length>256)throw new Error(\"randomString charset is too long\");let w=\"\";const v=f.length,m=256-256%v;for(;h>0;){const R=n(Math.ceil(h*256/m),S);for(let F=0;F<R.length&&h>0;F++){const H=R[F];H<m&&(w+=f.charAt(H%v),h--)}(0,i.wipe)(R)}return w}t.randomString=c;function l(h,f=o,S=t.defaultRandomSource){const w=Math.ceil(h/(Math.log(f.length)/Math.LN2));return c(w,f,S)}t.randomStringForEntropy=l}(cr);var Vs={};(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});var e=re,r=dt;t.DIGEST_LENGTH=64,t.BLOCK_SIZE=128;var i=function(){function c(){this.digestLength=t.DIGEST_LENGTH,this.blockSize=t.BLOCK_SIZE,this._stateHi=new Int32Array(8),this._stateLo=new Int32Array(8),this._tempHi=new Int32Array(16),this._tempLo=new Int32Array(16),this._buffer=new Uint8Array(256),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this.reset()}return c.prototype._initState=function(){this._stateHi[0]=1779033703,this._stateHi[1]=3144134277,this._stateHi[2]=1013904242,this._stateHi[3]=2773480762,this._stateHi[4]=1359893119,this._stateHi[5]=2600822924,this._stateHi[6]=528734635,this._stateHi[7]=1541459225,this._stateLo[0]=4089235720,this._stateLo[1]=2227873595,this._stateLo[2]=4271175723,this._stateLo[3]=1595750129,this._stateLo[4]=2917565137,this._stateLo[5]=725511199,this._stateLo[6]=4215389547,this._stateLo[7]=327033209},c.prototype.reset=function(){return this._initState(),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this},c.prototype.clean=function(){r.wipe(this._buffer),r.wipe(this._tempHi),r.wipe(this._tempLo),this.reset()},c.prototype.update=function(l,h){if(h===void 0&&(h=l.length),this._finished)throw new Error(\"SHA512: can't update because hash was finished.\");var f=0;if(this._bytesHashed+=h,this._bufferLength>0){for(;this._bufferLength<t.BLOCK_SIZE&&h>0;)this._buffer[this._bufferLength++]=l[f++],h--;this._bufferLength===this.blockSize&&(s(this._tempHi,this._tempLo,this._stateHi,this._stateLo,this._buffer,0,this.blockSize),this._bufferLength=0)}for(h>=this.blockSize&&(f=s(this._tempHi,this._tempLo,this._stateHi,this._stateLo,l,f,h),h%=this.blockSize);h>0;)this._buffer[this._bufferLength++]=l[f++],h--;return this},c.prototype.finish=function(l){if(!this._finished){var h=this._bytesHashed,f=this._bufferLength,S=h/536870912|0,w=h<<3,v=h%128<112?128:256;this._buffer[f]=128;for(var m=f+1;m<v-8;m++)this._buffer[m]=0;e.writeUint32BE(S,this._buffer,v-8),e.writeUint32BE(w,this._buffer,v-4),s(this._tempHi,this._tempLo,this._stateHi,this._stateLo,this._buffer,0,v),this._finished=!0}for(var m=0;m<this.digestLength/8;m++)e.writeUint32BE(this._stateHi[m],l,m*8),e.writeUint32BE(this._stateLo[m],l,m*8+4);return this},c.prototype.digest=function(){var l=new Uint8Array(this.digestLength);return this.finish(l),l},c.prototype.saveState=function(){if(this._finished)throw new Error(\"SHA256: cannot save finished state\");return{stateHi:new Int32Array(this._stateHi),stateLo:new Int32Array(this._stateLo),buffer:this._bufferLength>0?new Uint8Array(this._buffer):void 0,bufferLength:this._bufferLength,bytesHashed:this._bytesHashed}},c.prototype.restoreState=function(l){return this._stateHi.set(l.stateHi),this._stateLo.set(l.stateLo),this._bufferLength=l.bufferLength,l.buffer&&this._buffer.set(l.buffer),this._bytesHashed=l.bytesHashed,this._finished=!1,this},c.prototype.cleanSavedState=function(l){r.wipe(l.stateHi),r.wipe(l.stateLo),l.buffer&&r.wipe(l.buffer),l.bufferLength=0,l.bytesHashed=0},c}();t.SHA512=i;var n=new Int32Array([1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591]);function s(c,l,h,f,S,w,v){for(var m=h[0],R=h[1],F=h[2],H=h[3],x=h[4],P=h[5],y=h[6],D=h[7],E=f[0],a=f[1],d=f[2],M=f[3],q=f[4],G=f[5],J=f[6],X=f[7],g,_,$,U,N,C,j,B;v>=128;){for(var Q=0;Q<16;Q++){var z=8*Q+w;c[Q]=e.readUint32BE(S,z),l[Q]=e.readUint32BE(S,z+4)}for(var Q=0;Q<80;Q++){var ee=m,Y=R,ae=F,T=H,A=x,O=P,u=y,b=D,K=E,k=a,le=d,_e=M,de=q,we=G,Le=J,Te=X;if(g=D,_=X,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=(x>>>14|q<<32-14)^(x>>>18|q<<32-18)^(q>>>41-32|x<<32-(41-32)),_=(q>>>14|x<<32-14)^(q>>>18|x<<32-18)^(x>>>41-32|q<<32-(41-32)),N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,g=x&P^~x&y,_=q&G^~q&J,N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,g=n[Q*2],_=n[Q*2+1],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,g=c[Q%16],_=l[Q%16],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,$=j&65535|B<<16,U=N&65535|C<<16,g=$,_=U,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=(m>>>28|E<<32-28)^(E>>>34-32|m<<32-(34-32))^(E>>>39-32|m<<32-(39-32)),_=(E>>>28|m<<32-28)^(m>>>34-32|E<<32-(34-32))^(m>>>39-32|E<<32-(39-32)),N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,g=m&R^m&F^R&F,_=E&a^E&d^a&d,N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,b=j&65535|B<<16,Te=N&65535|C<<16,g=T,_=_e,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=$,_=U,N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,T=j&65535|B<<16,_e=N&65535|C<<16,R=ee,F=Y,H=ae,x=T,P=A,y=O,D=u,m=b,a=K,d=k,M=le,q=_e,G=de,J=we,X=Le,E=Te,Q%16===15)for(var z=0;z<16;z++)g=c[z],_=l[z],N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=c[(z+9)%16],_=l[(z+9)%16],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,$=c[(z+1)%16],U=l[(z+1)%16],g=($>>>1|U<<32-1)^($>>>8|U<<32-8)^$>>>7,_=(U>>>1|$<<32-1)^(U>>>8|$<<32-8)^(U>>>7|$<<32-7),N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,$=c[(z+14)%16],U=l[(z+14)%16],g=($>>>19|U<<32-19)^(U>>>61-32|$<<32-(61-32))^$>>>6,_=(U>>>19|$<<32-19)^($>>>61-32|U<<32-(61-32))^(U>>>6|$<<32-6),N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,c[z]=j&65535|B<<16,l[z]=N&65535|C<<16}g=m,_=E,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[0],_=f[0],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[0]=m=j&65535|B<<16,f[0]=E=N&65535|C<<16,g=R,_=a,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[1],_=f[1],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[1]=R=j&65535|B<<16,f[1]=a=N&65535|C<<16,g=F,_=d,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[2],_=f[2],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[2]=F=j&65535|B<<16,f[2]=d=N&65535|C<<16,g=H,_=M,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[3],_=f[3],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[3]=H=j&65535|B<<16,f[3]=M=N&65535|C<<16,g=x,_=q,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[4],_=f[4],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[4]=x=j&65535|B<<16,f[4]=q=N&65535|C<<16,g=P,_=G,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[5],_=f[5],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[5]=P=j&65535|B<<16,f[5]=G=N&65535|C<<16,g=y,_=J,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[6],_=f[6],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[6]=y=j&65535|B<<16,f[6]=J=N&65535|C<<16,g=D,_=X,N=_&65535,C=_>>>16,j=g&65535,B=g>>>16,g=h[7],_=f[7],N+=_&65535,C+=_>>>16,j+=g&65535,B+=g>>>16,C+=N>>>16,j+=C>>>16,B+=j>>>16,h[7]=D=j&65535|B<<16,f[7]=X=N&65535|C<<16,w+=128,v-=128}return w}function o(c){var l=new i;l.update(c);var h=l.digest();return l.clean(),h}t.hash=o})(Vs),function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.convertSecretKeyToX25519=t.convertPublicKeyToX25519=t.verify=t.sign=t.extractPublicKeyFromSecretKey=t.generateKeyPair=t.generateKeyPairFromSeed=t.SEED_LENGTH=t.SECRET_KEY_LENGTH=t.PUBLIC_KEY_LENGTH=t.SIGNATURE_LENGTH=void 0;const e=cr,r=Vs,i=dt;t.SIGNATURE_LENGTH=64,t.PUBLIC_KEY_LENGTH=32,t.SECRET_KEY_LENGTH=64,t.SEED_LENGTH=32;function n(T){const A=new Float64Array(16);if(T)for(let O=0;O<T.length;O++)A[O]=T[O];return A}const s=new Uint8Array(32);s[0]=9;const o=n(),c=n([1]),l=n([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),h=n([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),f=n([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),S=n([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),w=n([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function v(T,A){for(let O=0;O<16;O++)T[O]=A[O]|0}function m(T){let A=1;for(let O=0;O<16;O++){let u=T[O]+A+65535;A=Math.floor(u/65536),T[O]=u-A*65536}T[0]+=A-1+37*(A-1)}function R(T,A,O){const u=~(O-1);for(let b=0;b<16;b++){const K=u&(T[b]^A[b]);T[b]^=K,A[b]^=K}}function F(T,A){const O=n(),u=n();for(let b=0;b<16;b++)u[b]=A[b];m(u),m(u),m(u);for(let b=0;b<2;b++){O[0]=u[0]-65517;for(let k=1;k<15;k++)O[k]=u[k]-65535-(O[k-1]>>16&1),O[k-1]&=65535;O[15]=u[15]-32767-(O[14]>>16&1);const K=O[15]>>16&1;O[14]&=65535,R(u,O,1-K)}for(let b=0;b<16;b++)T[2*b]=u[b]&255,T[2*b+1]=u[b]>>8}function H(T,A){let O=0;for(let u=0;u<32;u++)O|=T[u]^A[u];return(1&O-1>>>8)-1}function x(T,A){const O=new Uint8Array(32),u=new Uint8Array(32);return F(O,T),F(u,A),H(O,u)}function P(T){const A=new Uint8Array(32);return F(A,T),A[0]&1}function y(T,A){for(let O=0;O<16;O++)T[O]=A[2*O]+(A[2*O+1]<<8);T[15]&=32767}function D(T,A,O){for(let u=0;u<16;u++)T[u]=A[u]+O[u]}function E(T,A,O){for(let u=0;u<16;u++)T[u]=A[u]-O[u]}function a(T,A,O){let u,b,K=0,k=0,le=0,_e=0,de=0,we=0,Le=0,Te=0,ye=0,pe=0,fe=0,ue=0,ce=0,oe=0,se=0,te=0,he=0,ge=0,ie=0,be=0,ve=0,Ee=0,De=0,me=0,mt=0,Pt=0,jt=0,pt=0,Qt=0,zr=0,mi=0,Ue=O[0],Ce=O[1],Me=O[2],je=O[3],Be=O[4],Ne=O[5],Ve=O[6],Ge=O[7],ke=O[8],We=O[9],Ye=O[10],qe=O[11],He=O[12],Pe=O[13],Je=O[14],Xe=O[15];u=A[0],K+=u*Ue,k+=u*Ce,le+=u*Me,_e+=u*je,de+=u*Be,we+=u*Ne,Le+=u*Ve,Te+=u*Ge,ye+=u*ke,pe+=u*We,fe+=u*Ye,ue+=u*qe,ce+=u*He,oe+=u*Pe,se+=u*Je,te+=u*Xe,u=A[1],k+=u*Ue,le+=u*Ce,_e+=u*Me,de+=u*je,we+=u*Be,Le+=u*Ne,Te+=u*Ve,ye+=u*Ge,pe+=u*ke,fe+=u*We,ue+=u*Ye,ce+=u*qe,oe+=u*He,se+=u*Pe,te+=u*Je,he+=u*Xe,u=A[2],le+=u*Ue,_e+=u*Ce,de+=u*Me,we+=u*je,Le+=u*Be,Te+=u*Ne,ye+=u*Ve,pe+=u*Ge,fe+=u*ke,ue+=u*We,ce+=u*Ye,oe+=u*qe,se+=u*He,te+=u*Pe,he+=u*Je,ge+=u*Xe,u=A[3],_e+=u*Ue,de+=u*Ce,we+=u*Me,Le+=u*je,Te+=u*Be,ye+=u*Ne,pe+=u*Ve,fe+=u*Ge,ue+=u*ke,ce+=u*We,oe+=u*Ye,se+=u*qe,te+=u*He,he+=u*Pe,ge+=u*Je,ie+=u*Xe,u=A[4],de+=u*Ue,we+=u*Ce,Le+=u*Me,Te+=u*je,ye+=u*Be,pe+=u*Ne,fe+=u*Ve,ue+=u*Ge,ce+=u*ke,oe+=u*We,se+=u*Ye,te+=u*qe,he+=u*He,ge+=u*Pe,ie+=u*Je,be+=u*Xe,u=A[5],we+=u*Ue,Le+=u*Ce,Te+=u*Me,ye+=u*je,pe+=u*Be,fe+=u*Ne,ue+=u*Ve,ce+=u*Ge,oe+=u*ke,se+=u*We,te+=u*Ye,he+=u*qe,ge+=u*He,ie+=u*Pe,be+=u*Je,ve+=u*Xe,u=A[6],Le+=u*Ue,Te+=u*Ce,ye+=u*Me,pe+=u*je,fe+=u*Be,ue+=u*Ne,ce+=u*Ve,oe+=u*Ge,se+=u*ke,te+=u*We,he+=u*Ye,ge+=u*qe,ie+=u*He,be+=u*Pe,ve+=u*Je,Ee+=u*Xe,u=A[7],Te+=u*Ue,ye+=u*Ce,pe+=u*Me,fe+=u*je,ue+=u*Be,ce+=u*Ne,oe+=u*Ve,se+=u*Ge,te+=u*ke,he+=u*We,ge+=u*Ye,ie+=u*qe,be+=u*He,ve+=u*Pe,Ee+=u*Je,De+=u*Xe,u=A[8],ye+=u*Ue,pe+=u*Ce,fe+=u*Me,ue+=u*je,ce+=u*Be,oe+=u*Ne,se+=u*Ve,te+=u*Ge,he+=u*ke,ge+=u*We,ie+=u*Ye,be+=u*qe,ve+=u*He,Ee+=u*Pe,De+=u*Je,me+=u*Xe,u=A[9],pe+=u*Ue,fe+=u*Ce,ue+=u*Me,ce+=u*je,oe+=u*Be,se+=u*Ne,te+=u*Ve,he+=u*Ge,ge+=u*ke,ie+=u*We,be+=u*Ye,ve+=u*qe,Ee+=u*He,De+=u*Pe,me+=u*Je,mt+=u*Xe,u=A[10],fe+=u*Ue,ue+=u*Ce,ce+=u*Me,oe+=u*je,se+=u*Be,te+=u*Ne,he+=u*Ve,ge+=u*Ge,ie+=u*ke,be+=u*We,ve+=u*Ye,Ee+=u*qe,De+=u*He,me+=u*Pe,mt+=u*Je,Pt+=u*Xe,u=A[11],ue+=u*Ue,ce+=u*Ce,oe+=u*Me,se+=u*je,te+=u*Be,he+=u*Ne,ge+=u*Ve,ie+=u*Ge,be+=u*ke,ve+=u*We,Ee+=u*Ye,De+=u*qe,me+=u*He,mt+=u*Pe,Pt+=u*Je,jt+=u*Xe,u=A[12],ce+=u*Ue,oe+=u*Ce,se+=u*Me,te+=u*je,he+=u*Be,ge+=u*Ne,ie+=u*Ve,be+=u*Ge,ve+=u*ke,Ee+=u*We,De+=u*Ye,me+=u*qe,mt+=u*He,Pt+=u*Pe,jt+=u*Je,pt+=u*Xe,u=A[13],oe+=u*Ue,se+=u*Ce,te+=u*Me,he+=u*je,ge+=u*Be,ie+=u*Ne,be+=u*Ve,ve+=u*Ge,Ee+=u*ke,De+=u*We,me+=u*Ye,mt+=u*qe,Pt+=u*He,jt+=u*Pe,pt+=u*Je,Qt+=u*Xe,u=A[14],se+=u*Ue,te+=u*Ce,he+=u*Me,ge+=u*je,ie+=u*Be,be+=u*Ne,ve+=u*Ve,Ee+=u*Ge,De+=u*ke,me+=u*We,mt+=u*Ye,Pt+=u*qe,jt+=u*He,pt+=u*Pe,Qt+=u*Je,zr+=u*Xe,u=A[15],te+=u*Ue,he+=u*Ce,ge+=u*Me,ie+=u*je,be+=u*Be,ve+=u*Ne,Ee+=u*Ve,De+=u*Ge,me+=u*ke,mt+=u*We,Pt+=u*Ye,jt+=u*qe,pt+=u*He,Qt+=u*Pe,zr+=u*Je,mi+=u*Xe,K+=38*he,k+=38*ge,le+=38*ie,_e+=38*be,de+=38*ve,we+=38*Ee,Le+=38*De,Te+=38*me,ye+=38*mt,pe+=38*Pt,fe+=38*jt,ue+=38*pt,ce+=38*Qt,oe+=38*zr,se+=38*mi,b=1,u=K+b+65535,b=Math.floor(u/65536),K=u-b*65536,u=k+b+65535,b=Math.floor(u/65536),k=u-b*65536,u=le+b+65535,b=Math.floor(u/65536),le=u-b*65536,u=_e+b+65535,b=Math.floor(u/65536),_e=u-b*65536,u=de+b+65535,b=Math.floor(u/65536),de=u-b*65536,u=we+b+65535,b=Math.floor(u/65536),we=u-b*65536,u=Le+b+65535,b=Math.floor(u/65536),Le=u-b*65536,u=Te+b+65535,b=Math.floor(u/65536),Te=u-b*65536,u=ye+b+65535,b=Math.floor(u/65536),ye=u-b*65536,u=pe+b+65535,b=Math.floor(u/65536),pe=u-b*65536,u=fe+b+65535,b=Math.floor(u/65536),fe=u-b*65536,u=ue+b+65535,b=Math.floor(u/65536),ue=u-b*65536,u=ce+b+65535,b=Math.floor(u/65536),ce=u-b*65536,u=oe+b+65535,b=Math.floor(u/65536),oe=u-b*65536,u=se+b+65535,b=Math.floor(u/65536),se=u-b*65536,u=te+b+65535,b=Math.floor(u/65536),te=u-b*65536,K+=b-1+37*(b-1),b=1,u=K+b+65535,b=Math.floor(u/65536),K=u-b*65536,u=k+b+65535,b=Math.floor(u/65536),k=u-b*65536,u=le+b+65535,b=Math.floor(u/65536),le=u-b*65536,u=_e+b+65535,b=Math.floor(u/65536),_e=u-b*65536,u=de+b+65535,b=Math.floor(u/65536),de=u-b*65536,u=we+b+65535,b=Math.floor(u/65536),we=u-b*65536,u=Le+b+65535,b=Math.floor(u/65536),Le=u-b*65536,u=Te+b+65535,b=Math.floor(u/65536),Te=u-b*65536,u=ye+b+65535,b=Math.floor(u/65536),ye=u-b*65536,u=pe+b+65535,b=Math.floor(u/65536),pe=u-b*65536,u=fe+b+65535,b=Math.floor(u/65536),fe=u-b*65536,u=ue+b+65535,b=Math.floor(u/65536),ue=u-b*65536,u=ce+b+65535,b=Math.floor(u/65536),ce=u-b*65536,u=oe+b+65535,b=Math.floor(u/65536),oe=u-b*65536,u=se+b+65535,b=Math.floor(u/65536),se=u-b*65536,u=te+b+65535,b=Math.floor(u/65536),te=u-b*65536,K+=b-1+37*(b-1),T[0]=K,T[1]=k,T[2]=le,T[3]=_e,T[4]=de,T[5]=we,T[6]=Le,T[7]=Te,T[8]=ye,T[9]=pe,T[10]=fe,T[11]=ue,T[12]=ce,T[13]=oe,T[14]=se,T[15]=te}function d(T,A){a(T,A,A)}function M(T,A){const O=n();let u;for(u=0;u<16;u++)O[u]=A[u];for(u=253;u>=0;u--)d(O,O),u!==2&&u!==4&&a(O,O,A);for(u=0;u<16;u++)T[u]=O[u]}function q(T,A){const O=n();let u;for(u=0;u<16;u++)O[u]=A[u];for(u=250;u>=0;u--)d(O,O),u!==1&&a(O,O,A);for(u=0;u<16;u++)T[u]=O[u]}function G(T,A){const O=n(),u=n(),b=n(),K=n(),k=n(),le=n(),_e=n(),de=n(),we=n();E(O,T[1],T[0]),E(we,A[1],A[0]),a(O,O,we),D(u,T[0],T[1]),D(we,A[0],A[1]),a(u,u,we),a(b,T[3],A[3]),a(b,b,h),a(K,T[2],A[2]),D(K,K,K),E(k,u,O),E(le,K,b),D(_e,K,b),D(de,u,O),a(T[0],k,le),a(T[1],de,_e),a(T[2],_e,le),a(T[3],k,de)}function J(T,A,O){for(let u=0;u<4;u++)R(T[u],A[u],O)}function X(T,A){const O=n(),u=n(),b=n();M(b,A[2]),a(O,A[0],b),a(u,A[1],b),F(T,u),T[31]^=P(O)<<7}function g(T,A,O){v(T[0],o),v(T[1],c),v(T[2],c),v(T[3],o);for(let u=255;u>=0;--u){const b=O[u/8|0]>>(u&7)&1;J(T,A,b),G(A,T),G(T,T),J(T,A,b)}}function _(T,A){const O=[n(),n(),n(),n()];v(O[0],f),v(O[1],S),v(O[2],c),a(O[3],f,S),g(T,O,A)}function $(T){if(T.length!==t.SEED_LENGTH)throw new Error(`ed25519: seed must be ${t.SEED_LENGTH} bytes`);const A=(0,r.hash)(T);A[0]&=248,A[31]&=127,A[31]|=64;const O=new Uint8Array(32),u=[n(),n(),n(),n()];_(u,A),X(O,u);const b=new Uint8Array(64);return b.set(T),b.set(O,32),{publicKey:O,secretKey:b}}t.generateKeyPairFromSeed=$;function U(T){const A=(0,e.randomBytes)(32,T),O=$(A);return(0,i.wipe)(A),O}t.generateKeyPair=U;function N(T){if(T.length!==t.SECRET_KEY_LENGTH)throw new Error(`ed25519: secret key must be ${t.SECRET_KEY_LENGTH} bytes`);return new Uint8Array(T.subarray(32))}t.extractPublicKeyFromSecretKey=N;const C=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function j(T,A){let O,u,b,K;for(u=63;u>=32;--u){for(O=0,b=u-32,K=u-12;b<K;++b)A[b]+=O-16*A[u]*C[b-(u-32)],O=Math.floor((A[b]+128)/256),A[b]-=O*256;A[b]+=O,A[u]=0}for(O=0,b=0;b<32;b++)A[b]+=O-(A[31]>>4)*C[b],O=A[b]>>8,A[b]&=255;for(b=0;b<32;b++)A[b]-=O*C[b];for(u=0;u<32;u++)A[u+1]+=A[u]>>8,T[u]=A[u]&255}function B(T){const A=new Float64Array(64);for(let O=0;O<64;O++)A[O]=T[O];for(let O=0;O<64;O++)T[O]=0;j(T,A)}function Q(T,A){const O=new Float64Array(64),u=[n(),n(),n(),n()],b=(0,r.hash)(T.subarray(0,32));b[0]&=248,b[31]&=127,b[31]|=64;const K=new Uint8Array(64);K.set(b.subarray(32),32);const k=new r.SHA512;k.update(K.subarray(32)),k.update(A);const le=k.digest();k.clean(),B(le),_(u,le),X(K,u),k.reset(),k.update(K.subarray(0,32)),k.update(T.subarray(32)),k.update(A);const _e=k.digest();B(_e);for(let de=0;de<32;de++)O[de]=le[de];for(let de=0;de<32;de++)for(let we=0;we<32;we++)O[de+we]+=_e[de]*b[we];return j(K.subarray(32),O),K}t.sign=Q;function z(T,A){const O=n(),u=n(),b=n(),K=n(),k=n(),le=n(),_e=n();return v(T[2],c),y(T[1],A),d(b,T[1]),a(K,b,l),E(b,b,T[2]),D(K,T[2],K),d(k,K),d(le,k),a(_e,le,k),a(O,_e,b),a(O,O,K),q(O,O),a(O,O,b),a(O,O,K),a(O,O,K),a(T[0],O,K),d(u,T[0]),a(u,u,K),x(u,b)&&a(T[0],T[0],w),d(u,T[0]),a(u,u,K),x(u,b)?-1:(P(T[0])===A[31]>>7&&E(T[0],o,T[0]),a(T[3],T[0],T[1]),0)}function ee(T,A,O){const u=new Uint8Array(32),b=[n(),n(),n(),n()],K=[n(),n(),n(),n()];if(O.length!==t.SIGNATURE_LENGTH)throw new Error(`ed25519: signature must be ${t.SIGNATURE_LENGTH} bytes`);if(z(K,T))return!1;const k=new r.SHA512;k.update(O.subarray(0,32)),k.update(T),k.update(A);const le=k.digest();return B(le),g(b,K,le),_(K,O.subarray(32)),G(b,K),X(u,b),!H(O,u)}t.verify=ee;function Y(T){let A=[n(),n(),n(),n()];if(z(A,T))throw new Error(\"Ed25519: invalid public key\");let O=n(),u=n(),b=A[1];D(O,c,b),E(u,c,b),M(u,u),a(O,O,u);let K=new Uint8Array(32);return F(K,O),K}t.convertPublicKeyToX25519=Y;function ae(T){const A=(0,r.hash)(T.subarray(0,32));A[0]&=248,A[31]&=127,A[31]|=64;const O=new Uint8Array(A.subarray(0,32));return(0,i.wipe)(A),O}t.convertSecretKeyToX25519=ae}(Ji);const _l=\"EdDSA\",bl=\"JWT\",Gs=\".\",ks=\"base64url\",vl=\"utf8\",wl=\"utf8\",ml=\":\",El=\"did\",Dl=\"key\",Ws=\"base58btc\",Sl=\"z\",xl=\"K36\",Ol=32;function Ys(t=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}function tn(t,e){e||(e=t.reduce((n,s)=>n+s.length,0));const r=Ys(e);let i=0;for(const n of t)r.set(n,i),i+=n.length;return r}function Il(t,e){if(t.length>=255)throw new TypeError(\"Alphabet too long\");for(var r=new Uint8Array(256),i=0;i<r.length;i++)r[i]=255;for(var n=0;n<t.length;n++){var s=t.charAt(n),o=s.charCodeAt(0);if(r[o]!==255)throw new TypeError(s+\" is ambiguous\");r[o]=n}var c=t.length,l=t.charAt(0),h=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function S(m){if(m instanceof Uint8Array||(ArrayBuffer.isView(m)?m=new Uint8Array(m.buffer,m.byteOffset,m.byteLength):Array.isArray(m)&&(m=Uint8Array.from(m))),!(m instanceof Uint8Array))throw new TypeError(\"Expected Uint8Array\");if(m.length===0)return\"\";for(var R=0,F=0,H=0,x=m.length;H!==x&&m[H]===0;)H++,R++;for(var P=(x-H)*f+1>>>0,y=new Uint8Array(P);H!==x;){for(var D=m[H],E=0,a=P-1;(D!==0||E<F)&&a!==-1;a--,E++)D+=256*y[a]>>>0,y[a]=D%c>>>0,D=D/c>>>0;if(D!==0)throw new Error(\"Non-zero carry\");F=E,H++}for(var d=P-F;d!==P&&y[d]===0;)d++;for(var M=l.repeat(R);d<P;++d)M+=t.charAt(y[d]);return M}function w(m){if(typeof m!=\"string\")throw new TypeError(\"Expected String\");if(m.length===0)return new Uint8Array;var R=0;if(m[R]!==\" \"){for(var F=0,H=0;m[R]===l;)F++,R++;for(var x=(m.length-R)*h+1>>>0,P=new Uint8Array(x);m[R];){var y=r[m.charCodeAt(R)];if(y===255)return;for(var D=0,E=x-1;(y!==0||D<H)&&E!==-1;E--,D++)y+=c*P[E]>>>0,P[E]=y%256>>>0,y=y/256>>>0;if(y!==0)throw new Error(\"Non-zero carry\");H=D,R++}if(m[R]!==\" \"){for(var a=x-H;a!==x&&P[a]===0;)a++;for(var d=new Uint8Array(F+(x-a)),M=F;a!==x;)d[M++]=P[a++];return d}}}function v(m){var R=w(m);if(R)return R;throw new Error(`Non-${e} character`)}return{encode:S,decodeUnsafe:w,decode:v}}var Pl=Il,Al=Pl;const Js=t=>{if(t instanceof Uint8Array&&t.constructor.name===\"Uint8Array\")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error(\"Unknown type, must be binary type\")},Tl=t=>new TextEncoder().encode(t),Cl=t=>new TextDecoder().decode(t);class Nl{constructor(e,r,i){this.name=e,this.prefix=r,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error(\"Unknown type, must be binary type\")}}class Rl{constructor(e,r,i){if(this.name=e,this.prefix=r,r.codePointAt(0)===void 0)throw new Error(\"Invalid prefix character\");this.prefixCodePoint=r.codePointAt(0),this.baseDecode=i}decode(e){if(typeof e==\"string\"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error(\"Can only multibase decode strings\")}or(e){return Xs(this,e)}}class Fl{constructor(e){this.decoders=e}or(e){return Xs(this,e)}decode(e){const r=e[0],i=this.decoders[r];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const Xs=(t,e)=>new Fl({...t.decoders||{[t.prefix]:t},...e.decoders||{[e.prefix]:e}});class Ll{constructor(e,r,i,n){this.name=e,this.prefix=r,this.baseEncode=i,this.baseDecode=n,this.encoder=new Nl(e,r,i),this.decoder=new Rl(e,r,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const ni=({name:t,prefix:e,encode:r,decode:i})=>new Ll(t,e,r,i),Pr=({prefix:t,name:e,alphabet:r})=>{const{encode:i,decode:n}=Al(r,e);return ni({prefix:t,name:e,encode:i,decode:s=>Js(n(s))})},$l=(t,e,r,i)=>{const n={};for(let f=0;f<e.length;++f)n[e[f]]=f;let s=t.length;for(;t[s-1]===\"=\";)--s;const o=new Uint8Array(s*r/8|0);let c=0,l=0,h=0;for(let f=0;f<s;++f){const S=n[t[f]];if(S===void 0)throw new SyntaxError(`Non-${i} character`);l=l<<r|S,c+=r,c>=8&&(c-=8,o[h++]=255&l>>c)}if(c>=r||255&l<<8-c)throw new SyntaxError(\"Unexpected end of data\");return o},Ul=(t,e,r)=>{const i=e[e.length-1]===\"=\",n=(1<<r)-1;let s=\"\",o=0,c=0;for(let l=0;l<t.length;++l)for(c=c<<8|t[l],o+=8;o>r;)o-=r,s+=e[n&c>>o];if(o&&(s+=e[n&c<<r-o]),i)for(;s.length*r&7;)s+=\"=\";return s},Qe=({name:t,prefix:e,bitsPerChar:r,alphabet:i})=>ni({prefix:e,name:t,encode(n){return Ul(n,i,r)},decode(n){return $l(n,i,r,t)}}),Ml=ni({prefix:\"\\0\",name:\"identity\",encode:t=>Cl(t),decode:t=>Tl(t)});var jl=Object.freeze({__proto__:null,identity:Ml});const Bl=Qe({prefix:\"0\",name:\"base2\",alphabet:\"01\",bitsPerChar:1});var Hl=Object.freeze({__proto__:null,base2:Bl});const ql=Qe({prefix:\"7\",name:\"base8\",alphabet:\"01234567\",bitsPerChar:3});var zl=Object.freeze({__proto__:null,base8:ql});const Kl=Pr({prefix:\"9\",name:\"base10\",alphabet:\"0123456789\"});var Vl=Object.freeze({__proto__:null,base10:Kl});const Gl=Qe({prefix:\"f\",name:\"base16\",alphabet:\"0123456789abcdef\",bitsPerChar:4}),kl=Qe({prefix:\"F\",name:\"base16upper\",alphabet:\"0123456789ABCDEF\",bitsPerChar:4});var Wl=Object.freeze({__proto__:null,base16:Gl,base16upper:kl});const Yl=Qe({prefix:\"b\",name:\"base32\",alphabet:\"abcdefghijklmnopqrstuvwxyz234567\",bitsPerChar:5}),Jl=Qe({prefix:\"B\",name:\"base32upper\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",bitsPerChar:5}),Xl=Qe({prefix:\"c\",name:\"base32pad\",alphabet:\"abcdefghijklmnopqrstuvwxyz234567=\",bitsPerChar:5}),Zl=Qe({prefix:\"C\",name:\"base32padupper\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",bitsPerChar:5}),Ql=Qe({prefix:\"v\",name:\"base32hex\",alphabet:\"0123456789abcdefghijklmnopqrstuv\",bitsPerChar:5}),ef=Qe({prefix:\"V\",name:\"base32hexupper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",bitsPerChar:5}),tf=Qe({prefix:\"t\",name:\"base32hexpad\",alphabet:\"0123456789abcdefghijklmnopqrstuv=\",bitsPerChar:5}),rf=Qe({prefix:\"T\",name:\"base32hexpadupper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",bitsPerChar:5}),nf=Qe({prefix:\"h\",name:\"base32z\",alphabet:\"ybndrfg8ejkmcpqxot1uwisza345h769\",bitsPerChar:5});var sf=Object.freeze({__proto__:null,base32:Yl,base32upper:Jl,base32pad:Xl,base32padupper:Zl,base32hex:Ql,base32hexupper:ef,base32hexpad:tf,base32hexpadupper:rf,base32z:nf});const of=Pr({prefix:\"k\",name:\"base36\",alphabet:\"0123456789abcdefghijklmnopqrstuvwxyz\"}),af=Pr({prefix:\"K\",name:\"base36upper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"});var cf=Object.freeze({__proto__:null,base36:of,base36upper:af});const uf=Pr({name:\"base58btc\",prefix:\"z\",alphabet:\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"}),hf=Pr({name:\"base58flickr\",prefix:\"Z\",alphabet:\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"});var lf=Object.freeze({__proto__:null,base58btc:uf,base58flickr:hf});const ff=Qe({prefix:\"m\",name:\"base64\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",bitsPerChar:6}),df=Qe({prefix:\"M\",name:\"base64pad\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",bitsPerChar:6}),pf=Qe({prefix:\"u\",name:\"base64url\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",bitsPerChar:6}),gf=Qe({prefix:\"U\",name:\"base64urlpad\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",bitsPerChar:6});var yf=Object.freeze({__proto__:null,base64:ff,base64pad:df,base64url:pf,base64urlpad:gf});const Zs=Array.from(\"\\u{1F680}\\u{1FA90}\\u2604\\u{1F6F0}\\u{1F30C}\\u{1F311}\\u{1F312}\\u{1F313}\\u{1F314}\\u{1F315}\\u{1F316}\\u{1F317}\\u{1F318}\\u{1F30D}\\u{1F30F}\\u{1F30E}\\u{1F409}\\u2600\\u{1F4BB}\\u{1F5A5}\\u{1F4BE}\\u{1F4BF}\\u{1F602}\\u2764\\u{1F60D}\\u{1F923}\\u{1F60A}\\u{1F64F}\\u{1F495}\\u{1F62D}\\u{1F618}\\u{1F44D}\\u{1F605}\\u{1F44F}\\u{1F601}\\u{1F525}\\u{1F970}\\u{1F494}\\u{1F496}\\u{1F499}\\u{1F622}\\u{1F914}\\u{1F606}\\u{1F644}\\u{1F4AA}\\u{1F609}\\u263A\\u{1F44C}\\u{1F917}\\u{1F49C}\\u{1F614}\\u{1F60E}\\u{1F607}\\u{1F339}\\u{1F926}\\u{1F389}\\u{1F49E}\\u270C\\u2728\\u{1F937}\\u{1F631}\\u{1F60C}\\u{1F338}\\u{1F64C}\\u{1F60B}\\u{1F497}\\u{1F49A}\\u{1F60F}\\u{1F49B}\\u{1F642}\\u{1F493}\\u{1F929}\\u{1F604}\\u{1F600}\\u{1F5A4}\\u{1F603}\\u{1F4AF}\\u{1F648}\\u{1F447}\\u{1F3B6}\\u{1F612}\\u{1F92D}\\u2763\\u{1F61C}\\u{1F48B}\\u{1F440}\\u{1F62A}\\u{1F611}\\u{1F4A5}\\u{1F64B}\\u{1F61E}\\u{1F629}\\u{1F621}\\u{1F92A}\\u{1F44A}\\u{1F973}\\u{1F625}\\u{1F924}\\u{1F449}\\u{1F483}\\u{1F633}\\u270B\\u{1F61A}\\u{1F61D}\\u{1F634}\\u{1F31F}\\u{1F62C}\\u{1F643}\\u{1F340}\\u{1F337}\\u{1F63B}\\u{1F613}\\u2B50\\u2705\\u{1F97A}\\u{1F308}\\u{1F608}\\u{1F918}\\u{1F4A6}\\u2714\\u{1F623}\\u{1F3C3}\\u{1F490}\\u2639\\u{1F38A}\\u{1F498}\\u{1F620}\\u261D\\u{1F615}\\u{1F33A}\\u{1F382}\\u{1F33B}\\u{1F610}\\u{1F595}\\u{1F49D}\\u{1F64A}\\u{1F639}\\u{1F5E3}\\u{1F4AB}\\u{1F480}\\u{1F451}\\u{1F3B5}\\u{1F91E}\\u{1F61B}\\u{1F534}\\u{1F624}\\u{1F33C}\\u{1F62B}\\u26BD\\u{1F919}\\u2615\\u{1F3C6}\\u{1F92B}\\u{1F448}\\u{1F62E}\\u{1F646}\\u{1F37B}\\u{1F343}\\u{1F436}\\u{1F481}\\u{1F632}\\u{1F33F}\\u{1F9E1}\\u{1F381}\\u26A1\\u{1F31E}\\u{1F388}\\u274C\\u270A\\u{1F44B}\\u{1F630}\\u{1F928}\\u{1F636}\\u{1F91D}\\u{1F6B6}\\u{1F4B0}\\u{1F353}\\u{1F4A2}\\u{1F91F}\\u{1F641}\\u{1F6A8}\\u{1F4A8}\\u{1F92C}\\u2708\\u{1F380}\\u{1F37A}\\u{1F913}\\u{1F619}\\u{1F49F}\\u{1F331}\\u{1F616}\\u{1F476}\\u{1F974}\\u25B6\\u27A1\\u2753\\u{1F48E}\\u{1F4B8}\\u2B07\\u{1F628}\\u{1F31A}\\u{1F98B}\\u{1F637}\\u{1F57A}\\u26A0\\u{1F645}\\u{1F61F}\\u{1F635}\\u{1F44E}\\u{1F932}\\u{1F920}\\u{1F927}\\u{1F4CC}\\u{1F535}\\u{1F485}\\u{1F9D0}\\u{1F43E}\\u{1F352}\\u{1F617}\\u{1F911}\\u{1F30A}\\u{1F92F}\\u{1F437}\\u260E\\u{1F4A7}\\u{1F62F}\\u{1F486}\\u{1F446}\\u{1F3A4}\\u{1F647}\\u{1F351}\\u2744\\u{1F334}\\u{1F4A3}\\u{1F438}\\u{1F48C}\\u{1F4CD}\\u{1F940}\\u{1F922}\\u{1F445}\\u{1F4A1}\\u{1F4A9}\\u{1F450}\\u{1F4F8}\\u{1F47B}\\u{1F910}\\u{1F92E}\\u{1F3BC}\\u{1F975}\\u{1F6A9}\\u{1F34E}\\u{1F34A}\\u{1F47C}\\u{1F48D}\\u{1F4E3}\\u{1F942}\"),_f=Zs.reduce((t,e,r)=>(t[r]=e,t),[]),bf=Zs.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function vf(t){return t.reduce((e,r)=>(e+=_f[r],e),\"\")}function wf(t){const e=[];for(const r of t){const i=bf[r.codePointAt(0)];if(i===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(i)}return new Uint8Array(e)}const mf=ni({prefix:\"\\u{1F680}\",name:\"base256emoji\",encode:vf,decode:wf});var Ef=Object.freeze({__proto__:null,base256emoji:mf}),Df=eo,Qs=128,Sf=127,xf=~Sf,Of=Math.pow(2,31);function eo(t,e,r){e=e||[],r=r||0;for(var i=r;t>=Of;)e[r++]=t&255|Qs,t/=128;for(;t&xf;)e[r++]=t&255|Qs,t>>>=7;return e[r]=t|0,eo.bytes=r-i+1,e}var If=rn,Pf=128,to=127;function rn(t,i){var r=0,i=i||0,n=0,s=i,o,c=t.length;do{if(s>=c)throw rn.bytes=0,new RangeError(\"Could not decode varint\");o=t[s++],r+=n<28?(o&to)<<n:(o&to)*Math.pow(2,n),n+=7}while(o>=Pf);return rn.bytes=s-i,r}var Af=Math.pow(2,7),Tf=Math.pow(2,14),Cf=Math.pow(2,21),Nf=Math.pow(2,28),Rf=Math.pow(2,35),Ff=Math.pow(2,42),Lf=Math.pow(2,49),$f=Math.pow(2,56),Uf=Math.pow(2,63),Mf=function(t){return t<Af?1:t<Tf?2:t<Cf?3:t<Nf?4:t<Rf?5:t<Ff?6:t<Lf?7:t<$f?8:t<Uf?9:10},jf={encode:Df,decode:If,encodingLength:Mf},ro=jf;const io=(t,e,r=0)=>(ro.encode(t,e,r),e),no=t=>ro.encodingLength(t),nn=(t,e)=>{const r=e.byteLength,i=no(t),n=i+no(r),s=new Uint8Array(n+r);return io(t,s,0),io(r,s,i),s.set(e,n),new Bf(t,r,e,s)};class Bf{constructor(e,r,i,n){this.code=e,this.size=r,this.digest=i,this.bytes=n}}const so=({name:t,code:e,encode:r})=>new Hf(t,e,r);class Hf{constructor(e,r,i){this.name=e,this.code=r,this.encode=i}digest(e){if(e instanceof Uint8Array){const r=this.encode(e);return r instanceof Uint8Array?nn(this.code,r):r.then(i=>nn(this.code,i))}else throw Error(\"Unknown type, must be binary type\")}}const oo=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),qf=so({name:\"sha2-256\",code:18,encode:oo(\"SHA-256\")}),zf=so({name:\"sha2-512\",code:19,encode:oo(\"SHA-512\")});var Kf=Object.freeze({__proto__:null,sha256:qf,sha512:zf});const ao=0,Vf=\"identity\",co=Js;var Gf=Object.freeze({__proto__:null,identity:{code:ao,name:Vf,encode:co,digest:t=>nn(ao,co(t))}});new TextEncoder,new TextDecoder;const uo={...jl,...Hl,...zl,...Vl,...Wl,...sf,...cf,...lf,...yf,...Ef};({...Kf,...Gf});function ho(t,e,r,i){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:i}}}const lo=ho(\"utf8\",\"u\",t=>\"u\"+new TextDecoder(\"utf8\").decode(t),t=>new TextEncoder().encode(t.substring(1))),sn=ho(\"ascii\",\"a\",t=>{let e=\"a\";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=Ys(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),fo={utf8:lo,\"utf-8\":lo,hex:uo.base16,latin1:sn,ascii:sn,binary:sn,...uo};function ut(t,e=\"utf8\"){const r=fo[e];if(!r)throw new Error(`Unsupported encoding \"${e}\"`);return(e===\"utf8\"||e===\"utf-8\")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t.buffer,t.byteOffset,t.byteLength).toString(\"utf8\"):r.encoder.encode(t).substring(1)}function ht(t,e=\"utf8\"){const r=fo[e];if(!r)throw new Error(`Unsupported encoding \"${e}\"`);return(e===\"utf8\"||e===\"utf-8\")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t,\"utf8\"):r.decoder.decode(`${r.prefix}${t}`)}function si(t){return ut(ht(Ir(t),vl),ks)}function po(t){const e=ht(xl,Ws),r=Sl+ut(tn([e,t]),Ws);return[El,Dl,r].join(ml)}function kf(t){return ut(t,ks)}function Wf(t){return ht([si(t.header),si(t.payload)].join(Gs),wl)}function Yf(t){return[si(t.header),si(t.payload),kf(t.signature)].join(Gs)}function go(t=cr.randomBytes(Ol)){return Ji.generateKeyPairFromSeed(t)}async function Jf(t,e,r,i,n=Z.fromMiliseconds(Date.now())){const s={alg:_l,typ:bl},o=po(i.publicKey),c=n+r,l={iss:o,sub:t,aud:e,iat:n,exp:c},h=Wf({header:s,payload:l}),f=Ji.sign(i.secretKey,h);return Yf({header:s,payload:l,signature:f})}var on={},oi={};Object.defineProperty(oi,\"__esModule\",{value:!0});var nt=re,an=dt,Xf=20;function Zf(t,e,r){for(var i=1634760805,n=857760878,s=2036477234,o=1797285236,c=r[3]<<24|r[2]<<16|r[1]<<8|r[0],l=r[7]<<24|r[6]<<16|r[5]<<8|r[4],h=r[11]<<24|r[10]<<16|r[9]<<8|r[8],f=r[15]<<24|r[14]<<16|r[13]<<8|r[12],S=r[19]<<24|r[18]<<16|r[17]<<8|r[16],w=r[23]<<24|r[22]<<16|r[21]<<8|r[20],v=r[27]<<24|r[26]<<16|r[25]<<8|r[24],m=r[31]<<24|r[30]<<16|r[29]<<8|r[28],R=e[3]<<24|e[2]<<16|e[1]<<8|e[0],F=e[7]<<24|e[6]<<16|e[5]<<8|e[4],H=e[11]<<24|e[10]<<16|e[9]<<8|e[8],x=e[15]<<24|e[14]<<16|e[13]<<8|e[12],P=i,y=n,D=s,E=o,a=c,d=l,M=h,q=f,G=S,J=w,X=v,g=m,_=R,$=F,U=H,N=x,C=0;C<Xf;C+=2)P=P+a|0,_^=P,_=_>>>32-16|_<<16,G=G+_|0,a^=G,a=a>>>32-12|a<<12,y=y+d|0,$^=y,$=$>>>32-16|$<<16,J=J+$|0,d^=J,d=d>>>32-12|d<<12,D=D+M|0,U^=D,U=U>>>32-16|U<<16,X=X+U|0,M^=X,M=M>>>32-12|M<<12,E=E+q|0,N^=E,N=N>>>32-16|N<<16,g=g+N|0,q^=g,q=q>>>32-12|q<<12,D=D+M|0,U^=D,U=U>>>32-8|U<<8,X=X+U|0,M^=X,M=M>>>32-7|M<<7,E=E+q|0,N^=E,N=N>>>32-8|N<<8,g=g+N|0,q^=g,q=q>>>32-7|q<<7,y=y+d|0,$^=y,$=$>>>32-8|$<<8,J=J+$|0,d^=J,d=d>>>32-7|d<<7,P=P+a|0,_^=P,_=_>>>32-8|_<<8,G=G+_|0,a^=G,a=a>>>32-7|a<<7,P=P+d|0,N^=P,N=N>>>32-16|N<<16,X=X+N|0,d^=X,d=d>>>32-12|d<<12,y=y+M|0,_^=y,_=_>>>32-16|_<<16,g=g+_|0,M^=g,M=M>>>32-12|M<<12,D=D+q|0,$^=D,$=$>>>32-16|$<<16,G=G+$|0,q^=G,q=q>>>32-12|q<<12,E=E+a|0,U^=E,U=U>>>32-16|U<<16,J=J+U|0,a^=J,a=a>>>32-12|a<<12,D=D+q|0,$^=D,$=$>>>32-8|$<<8,G=G+$|0,q^=G,q=q>>>32-7|q<<7,E=E+a|0,U^=E,U=U>>>32-8|U<<8,J=J+U|0,a^=J,a=a>>>32-7|a<<7,y=y+M|0,_^=y,_=_>>>32-8|_<<8,g=g+_|0,M^=g,M=M>>>32-7|M<<7,P=P+d|0,N^=P,N=N>>>32-8|N<<8,X=X+N|0,d^=X,d=d>>>32-7|d<<7;nt.writeUint32LE(P+i|0,t,0),nt.writeUint32LE(y+n|0,t,4),nt.writeUint32LE(D+s|0,t,8),nt.writeUint32LE(E+o|0,t,12),nt.writeUint32LE(a+c|0,t,16),nt.writeUint32LE(d+l|0,t,20),nt.writeUint32LE(M+h|0,t,24),nt.writeUint32LE(q+f|0,t,28),nt.writeUint32LE(G+S|0,t,32),nt.writeUint32LE(J+w|0,t,36),nt.writeUint32LE(X+v|0,t,40),nt.writeUint32LE(g+m|0,t,44),nt.writeUint32LE(_+R|0,t,48),nt.writeUint32LE($+F|0,t,52),nt.writeUint32LE(U+H|0,t,56),nt.writeUint32LE(N+x|0,t,60)}function yo(t,e,r,i,n){if(n===void 0&&(n=0),t.length!==32)throw new Error(\"ChaCha: key size must be 32 bytes\");if(i.length<r.length)throw new Error(\"ChaCha: destination is shorter than source\");var s,o;if(n===0){if(e.length!==8&&e.length!==12)throw new Error(\"ChaCha nonce must be 8 or 12 bytes\");s=new Uint8Array(16),o=s.length-e.length,s.set(e,o)}else{if(e.length!==16)throw new Error(\"ChaCha nonce with counter must be 16 bytes\");s=e,o=n}for(var c=new Uint8Array(64),l=0;l<r.length;l+=64){Zf(c,s,t);for(var h=l;h<l+64&&h<r.length;h++)i[h]=r[h]^c[h-l];ed(s,0,o)}return an.wipe(c),n===0&&an.wipe(s),i}oi.streamXOR=yo;function Qf(t,e,r,i){return i===void 0&&(i=0),an.wipe(r),yo(t,e,r,r,i)}oi.stream=Qf;function ed(t,e,r){for(var i=1;r--;)i=i+(t[e]&255)|0,t[e]=i&255,i>>>=8,e++;if(i>0)throw new Error(\"ChaCha: counter overflow\")}var _o={},Ft={};Object.defineProperty(Ft,\"__esModule\",{value:!0});function td(t,e,r){return~(t-1)&e|t-1&r}Ft.select=td;function rd(t,e){return(t|0)-(e|0)-1>>>31&1}Ft.lessOrEqual=rd;function bo(t,e){if(t.length!==e.length)return 0;for(var r=0,i=0;i<t.length;i++)r|=t[i]^e[i];return 1&r-1>>>8}Ft.compare=bo;function id(t,e){return t.length===0||e.length===0?!1:bo(t,e)!==0}Ft.equal=id,function(t){Object.defineProperty(t,\"__esModule\",{value:!0});var e=Ft,r=dt;t.DIGEST_LENGTH=16;var i=function(){function o(c){this.digestLength=t.DIGEST_LENGTH,this._buffer=new Uint8Array(16),this._r=new Uint16Array(10),this._h=new Uint16Array(10),this._pad=new Uint16Array(8),this._leftover=0,this._fin=0,this._finished=!1;var l=c[0]|c[1]<<8;this._r[0]=l&8191;var h=c[2]|c[3]<<8;this._r[1]=(l>>>13|h<<3)&8191;var f=c[4]|c[5]<<8;this._r[2]=(h>>>10|f<<6)&7939;var S=c[6]|c[7]<<8;this._r[3]=(f>>>7|S<<9)&8191;var w=c[8]|c[9]<<8;this._r[4]=(S>>>4|w<<12)&255,this._r[5]=w>>>1&8190;var v=c[10]|c[11]<<8;this._r[6]=(w>>>14|v<<2)&8191;var m=c[12]|c[13]<<8;this._r[7]=(v>>>11|m<<5)&8065;var R=c[14]|c[15]<<8;this._r[8]=(m>>>8|R<<8)&8191,this._r[9]=R>>>5&127,this._pad[0]=c[16]|c[17]<<8,this._pad[1]=c[18]|c[19]<<8,this._pad[2]=c[20]|c[21]<<8,this._pad[3]=c[22]|c[23]<<8,this._pad[4]=c[24]|c[25]<<8,this._pad[5]=c[26]|c[27]<<8,this._pad[6]=c[28]|c[29]<<8,this._pad[7]=c[30]|c[31]<<8}return o.prototype._blocks=function(c,l,h){for(var f=this._fin?0:2048,S=this._h[0],w=this._h[1],v=this._h[2],m=this._h[3],R=this._h[4],F=this._h[5],H=this._h[6],x=this._h[7],P=this._h[8],y=this._h[9],D=this._r[0],E=this._r[1],a=this._r[2],d=this._r[3],M=this._r[4],q=this._r[5],G=this._r[6],J=this._r[7],X=this._r[8],g=this._r[9];h>=16;){var _=c[l+0]|c[l+1]<<8;S+=_&8191;var $=c[l+2]|c[l+3]<<8;w+=(_>>>13|$<<3)&8191;var U=c[l+4]|c[l+5]<<8;v+=($>>>10|U<<6)&8191;var N=c[l+6]|c[l+7]<<8;m+=(U>>>7|N<<9)&8191;var C=c[l+8]|c[l+9]<<8;R+=(N>>>4|C<<12)&8191,F+=C>>>1&8191;var j=c[l+10]|c[l+11]<<8;H+=(C>>>14|j<<2)&8191;var B=c[l+12]|c[l+13]<<8;x+=(j>>>11|B<<5)&8191;var Q=c[l+14]|c[l+15]<<8;P+=(B>>>8|Q<<8)&8191,y+=Q>>>5|f;var z=0,ee=z;ee+=S*D,ee+=w*(5*g),ee+=v*(5*X),ee+=m*(5*J),ee+=R*(5*G),z=ee>>>13,ee&=8191,ee+=F*(5*q),ee+=H*(5*M),ee+=x*(5*d),ee+=P*(5*a),ee+=y*(5*E),z+=ee>>>13,ee&=8191;var Y=z;Y+=S*E,Y+=w*D,Y+=v*(5*g),Y+=m*(5*X),Y+=R*(5*J),z=Y>>>13,Y&=8191,Y+=F*(5*G),Y+=H*(5*q),Y+=x*(5*M),Y+=P*(5*d),Y+=y*(5*a),z+=Y>>>13,Y&=8191;var ae=z;ae+=S*a,ae+=w*E,ae+=v*D,ae+=m*(5*g),ae+=R*(5*X),z=ae>>>13,ae&=8191,ae+=F*(5*J),ae+=H*(5*G),ae+=x*(5*q),ae+=P*(5*M),ae+=y*(5*d),z+=ae>>>13,ae&=8191;var T=z;T+=S*d,T+=w*a,T+=v*E,T+=m*D,T+=R*(5*g),z=T>>>13,T&=8191,T+=F*(5*X),T+=H*(5*J),T+=x*(5*G),T+=P*(5*q),T+=y*(5*M),z+=T>>>13,T&=8191;var A=z;A+=S*M,A+=w*d,A+=v*a,A+=m*E,A+=R*D,z=A>>>13,A&=8191,A+=F*(5*g),A+=H*(5*X),A+=x*(5*J),A+=P*(5*G),A+=y*(5*q),z+=A>>>13,A&=8191;var O=z;O+=S*q,O+=w*M,O+=v*d,O+=m*a,O+=R*E,z=O>>>13,O&=8191,O+=F*D,O+=H*(5*g),O+=x*(5*X),O+=P*(5*J),O+=y*(5*G),z+=O>>>13,O&=8191;var u=z;u+=S*G,u+=w*q,u+=v*M,u+=m*d,u+=R*a,z=u>>>13,u&=8191,u+=F*E,u+=H*D,u+=x*(5*g),u+=P*(5*X),u+=y*(5*J),z+=u>>>13,u&=8191;var b=z;b+=S*J,b+=w*G,b+=v*q,b+=m*M,b+=R*d,z=b>>>13,b&=8191,b+=F*a,b+=H*E,b+=x*D,b+=P*(5*g),b+=y*(5*X),z+=b>>>13,b&=8191;var K=z;K+=S*X,K+=w*J,K+=v*G,K+=m*q,K+=R*M,z=K>>>13,K&=8191,K+=F*d,K+=H*a,K+=x*E,K+=P*D,K+=y*(5*g),z+=K>>>13,K&=8191;var k=z;k+=S*g,k+=w*X,k+=v*J,k+=m*G,k+=R*q,z=k>>>13,k&=8191,k+=F*M,k+=H*d,k+=x*a,k+=P*E,k+=y*D,z+=k>>>13,k&=8191,z=(z<<2)+z|0,z=z+ee|0,ee=z&8191,z=z>>>13,Y+=z,S=ee,w=Y,v=ae,m=T,R=A,F=O,H=u,x=b,P=K,y=k,l+=16,h-=16}this._h[0]=S,this._h[1]=w,this._h[2]=v,this._h[3]=m,this._h[4]=R,this._h[5]=F,this._h[6]=H,this._h[7]=x,this._h[8]=P,this._h[9]=y},o.prototype.finish=function(c,l){l===void 0&&(l=0);var h=new Uint16Array(10),f,S,w,v;if(this._leftover){for(v=this._leftover,this._buffer[v++]=1;v<16;v++)this._buffer[v]=0;this._fin=1,this._blocks(this._buffer,0,16)}for(f=this._h[1]>>>13,this._h[1]&=8191,v=2;v<10;v++)this._h[v]+=f,f=this._h[v]>>>13,this._h[v]&=8191;for(this._h[0]+=f*5,f=this._h[0]>>>13,this._h[0]&=8191,this._h[1]+=f,f=this._h[1]>>>13,this._h[1]&=8191,this._h[2]+=f,h[0]=this._h[0]+5,f=h[0]>>>13,h[0]&=8191,v=1;v<10;v++)h[v]=this._h[v]+f,f=h[v]>>>13,h[v]&=8191;for(h[9]-=1<<13,S=(f^1)-1,v=0;v<10;v++)h[v]&=S;for(S=~S,v=0;v<10;v++)this._h[v]=this._h[v]&S|h[v];for(this._h[0]=(this._h[0]|this._h[1]<<13)&65535,this._h[1]=(this._h[1]>>>3|this._h[2]<<10)&65535,this._h[2]=(this._h[2]>>>6|this._h[3]<<7)&65535,this._h[3]=(this._h[3]>>>9|this._h[4]<<4)&65535,this._h[4]=(this._h[4]>>>12|this._h[5]<<1|this._h[6]<<14)&65535,this._h[5]=(this._h[6]>>>2|this._h[7]<<11)&65535,this._h[6]=(this._h[7]>>>5|this._h[8]<<8)&65535,this._h[7]=(this._h[8]>>>8|this._h[9]<<5)&65535,w=this._h[0]+this._pad[0],this._h[0]=w&65535,v=1;v<8;v++)w=(this._h[v]+this._pad[v]|0)+(w>>>16)|0,this._h[v]=w&65535;return c[l+0]=this._h[0]>>>0,c[l+1]=this._h[0]>>>8,c[l+2]=this._h[1]>>>0,c[l+3]=this._h[1]>>>8,c[l+4]=this._h[2]>>>0,c[l+5]=this._h[2]>>>8,c[l+6]=this._h[3]>>>0,c[l+7]=this._h[3]>>>8,c[l+8]=this._h[4]>>>0,c[l+9]=this._h[4]>>>8,c[l+10]=this._h[5]>>>0,c[l+11]=this._h[5]>>>8,c[l+12]=this._h[6]>>>0,c[l+13]=this._h[6]>>>8,c[l+14]=this._h[7]>>>0,c[l+15]=this._h[7]>>>8,this._finished=!0,this},o.prototype.update=function(c){var l=0,h=c.length,f;if(this._leftover){f=16-this._leftover,f>h&&(f=h);for(var S=0;S<f;S++)this._buffer[this._leftover+S]=c[l+S];if(h-=f,l+=f,this._leftover+=f,this._leftover<16)return this;this._blocks(this._buffer,0,16),this._leftover=0}if(h>=16&&(f=h-h%16,this._blocks(c,l,f),l+=f,h-=f),h){for(var S=0;S<h;S++)this._buffer[this._leftover+S]=c[l+S];this._leftover+=h}return this},o.prototype.digest=function(){if(this._finished)throw new Error(\"Poly1305 was finished\");var c=new Uint8Array(16);return this.finish(c),c},o.prototype.clean=function(){return r.wipe(this._buffer),r.wipe(this._r),r.wipe(this._h),r.wipe(this._pad),this._leftover=0,this._fin=0,this._finished=!0,this},o}();t.Poly1305=i;function n(o,c){var l=new i(o);l.update(c);var h=l.digest();return l.clean(),h}t.oneTimeAuth=n;function s(o,c){return o.length!==t.DIGEST_LENGTH||c.length!==t.DIGEST_LENGTH?!1:e.equal(o,c)}t.equal=s}(_o),function(t){Object.defineProperty(t,\"__esModule\",{value:!0});var e=oi,r=_o,i=dt,n=re,s=Ft;t.KEY_LENGTH=32,t.NONCE_LENGTH=12,t.TAG_LENGTH=16;var o=new Uint8Array(16),c=function(){function l(h){if(this.nonceLength=t.NONCE_LENGTH,this.tagLength=t.TAG_LENGTH,h.length!==t.KEY_LENGTH)throw new Error(\"ChaCha20Poly1305 needs 32-byte key\");this._key=new Uint8Array(h)}return l.prototype.seal=function(h,f,S,w){if(h.length>16)throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");var v=new Uint8Array(16);v.set(h,v.length-h.length);var m=new Uint8Array(32);e.stream(this._key,v,m,4);var R=f.length+this.tagLength,F;if(w){if(w.length!==R)throw new Error(\"ChaCha20Poly1305: incorrect destination length\");F=w}else F=new Uint8Array(R);return e.streamXOR(this._key,v,f,F,4),this._authenticate(F.subarray(F.length-this.tagLength,F.length),m,F.subarray(0,F.length-this.tagLength),S),i.wipe(v),F},l.prototype.open=function(h,f,S,w){if(h.length>16)throw new Error(\"ChaCha20Poly1305: incorrect nonce length\");if(f.length<this.tagLength)return null;var v=new Uint8Array(16);v.set(h,v.length-h.length);var m=new Uint8Array(32);e.stream(this._key,v,m,4);var R=new Uint8Array(this.tagLength);if(this._authenticate(R,m,f.subarray(0,f.length-this.tagLength),S),!s.equal(R,f.subarray(f.length-this.tagLength,f.length)))return null;var F=f.length-this.tagLength,H;if(w){if(w.length!==F)throw new Error(\"ChaCha20Poly1305: incorrect destination length\");H=w}else H=new Uint8Array(F);return e.streamXOR(this._key,v,f.subarray(0,f.length-this.tagLength),H,4),i.wipe(v),H},l.prototype.clean=function(){return i.wipe(this._key),this},l.prototype._authenticate=function(h,f,S,w){var v=new r.Poly1305(f);w&&(v.update(w),w.length%16>0&&v.update(o.subarray(w.length%16))),v.update(S),S.length%16>0&&v.update(o.subarray(S.length%16));var m=new Uint8Array(8);w&&n.writeUint64LE(w.length,m),v.update(m),n.writeUint64LE(S.length,m),v.update(m);for(var R=v.digest(),F=0;F<R.length;F++)h[F]=R[F];v.clean(),i.wipe(R),i.wipe(m)},l}();t.ChaCha20Poly1305=c}(on);var vo={},Ar={},cn={};Object.defineProperty(cn,\"__esModule\",{value:!0});function nd(t){return typeof t.saveState<\"u\"&&typeof t.restoreState<\"u\"&&typeof t.cleanSavedState<\"u\"}cn.isSerializableHash=nd,Object.defineProperty(Ar,\"__esModule\",{value:!0});var St=cn,sd=Ft,od=dt,wo=function(){function t(e,r){this._finished=!1,this._inner=new e,this._outer=new e,this.blockSize=this._outer.blockSize,this.digestLength=this._outer.digestLength;var i=new Uint8Array(this.blockSize);r.length>this.blockSize?this._inner.update(r).finish(i).clean():i.set(r);for(var n=0;n<i.length;n++)i[n]^=54;this._inner.update(i);for(var n=0;n<i.length;n++)i[n]^=106;this._outer.update(i),St.isSerializableHash(this._inner)&&St.isSerializableHash(this._outer)&&(this._innerKeyedState=this._inner.saveState(),this._outerKeyedState=this._outer.saveState()),od.wipe(i)}return t.prototype.reset=function(){if(!St.isSerializableHash(this._inner)||!St.isSerializableHash(this._outer))throw new Error(\"hmac: can't reset() because hash doesn't implement restoreState()\");return this._inner.restoreState(this._innerKeyedState),this._outer.restoreState(this._outerKeyedState),this._finished=!1,this},t.prototype.clean=function(){St.isSerializableHash(this._inner)&&this._inner.cleanSavedState(this._innerKeyedState),St.isSerializableHash(this._outer)&&this._outer.cleanSavedState(this._outerKeyedState),this._inner.clean(),this._outer.clean()},t.prototype.update=function(e){return this._inner.update(e),this},t.prototype.finish=function(e){return this._finished?(this._outer.finish(e),this):(this._inner.finish(e),this._outer.update(e.subarray(0,this.digestLength)).finish(e),this._finished=!0,this)},t.prototype.digest=function(){var e=new Uint8Array(this.digestLength);return this.finish(e),e},t.prototype.saveState=function(){if(!St.isSerializableHash(this._inner))throw new Error(\"hmac: can't saveState() because hash doesn't implement it\");return this._inner.saveState()},t.prototype.restoreState=function(e){if(!St.isSerializableHash(this._inner)||!St.isSerializableHash(this._outer))throw new Error(\"hmac: can't restoreState() because hash doesn't implement it\");return this._inner.restoreState(e),this._outer.restoreState(this._outerKeyedState),this._finished=!1,this},t.prototype.cleanSavedState=function(e){if(!St.isSerializableHash(this._inner))throw new Error(\"hmac: can't cleanSavedState() because hash doesn't implement it\");this._inner.cleanSavedState(e)},t}();Ar.HMAC=wo;function ad(t,e,r){var i=new wo(t,e);i.update(r);var n=i.digest();return i.clean(),n}Ar.hmac=ad,Ar.equal=sd.equal,Object.defineProperty(vo,\"__esModule\",{value:!0});var mo=Ar,Eo=dt,cd=function(){function t(e,r,i,n){i===void 0&&(i=new Uint8Array(0)),this._counter=new Uint8Array(1),this._hash=e,this._info=n;var s=mo.hmac(this._hash,i,r);this._hmac=new mo.HMAC(e,s),this._buffer=new Uint8Array(this._hmac.digestLength),this._bufpos=this._buffer.length}return t.prototype._fillBuffer=function(){this._counter[0]++;var e=this._counter[0];if(e===0)throw new Error(\"hkdf: cannot expand more\");this._hmac.reset(),e>1&&this._hmac.update(this._buffer),this._info&&this._hmac.update(this._info),this._hmac.update(this._counter),this._hmac.finish(this._buffer),this._bufpos=0},t.prototype.expand=function(e){for(var r=new Uint8Array(e),i=0;i<r.length;i++)this._bufpos===this._buffer.length&&this._fillBuffer(),r[i]=this._buffer[this._bufpos++];return r},t.prototype.clean=function(){this._hmac.clean(),Eo.wipe(this._buffer),Eo.wipe(this._counter),this._bufpos=0},t}(),ud=vo.HKDF=cd,ai={};(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});var e=re,r=dt;t.DIGEST_LENGTH=32,t.BLOCK_SIZE=64;var i=function(){function c(){this.digestLength=t.DIGEST_LENGTH,this.blockSize=t.BLOCK_SIZE,this._state=new Int32Array(8),this._temp=new Int32Array(64),this._buffer=new Uint8Array(128),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this.reset()}return c.prototype._initState=function(){this._state[0]=1779033703,this._state[1]=3144134277,this._state[2]=1013904242,this._state[3]=2773480762,this._state[4]=1359893119,this._state[5]=2600822924,this._state[6]=528734635,this._state[7]=1541459225},c.prototype.reset=function(){return this._initState(),this._bufferLength=0,this._bytesHashed=0,this._finished=!1,this},c.prototype.clean=function(){r.wipe(this._buffer),r.wipe(this._temp),this.reset()},c.prototype.update=function(l,h){if(h===void 0&&(h=l.length),this._finished)throw new Error(\"SHA256: can't update because hash was finished.\");var f=0;if(this._bytesHashed+=h,this._bufferLength>0){for(;this._bufferLength<this.blockSize&&h>0;)this._buffer[this._bufferLength++]=l[f++],h--;this._bufferLength===this.blockSize&&(s(this._temp,this._state,this._buffer,0,this.blockSize),this._bufferLength=0)}for(h>=this.blockSize&&(f=s(this._temp,this._state,l,f,h),h%=this.blockSize);h>0;)this._buffer[this._bufferLength++]=l[f++],h--;return this},c.prototype.finish=function(l){if(!this._finished){var h=this._bytesHashed,f=this._bufferLength,S=h/536870912|0,w=h<<3,v=h%64<56?64:128;this._buffer[f]=128;for(var m=f+1;m<v-8;m++)this._buffer[m]=0;e.writeUint32BE(S,this._buffer,v-8),e.writeUint32BE(w,this._buffer,v-4),s(this._temp,this._state,this._buffer,0,v),this._finished=!0}for(var m=0;m<this.digestLength/4;m++)e.writeUint32BE(this._state[m],l,m*4);return this},c.prototype.digest=function(){var l=new Uint8Array(this.digestLength);return this.finish(l),l},c.prototype.saveState=function(){if(this._finished)throw new Error(\"SHA256: cannot save finished state\");return{state:new Int32Array(this._state),buffer:this._bufferLength>0?new Uint8Array(this._buffer):void 0,bufferLength:this._bufferLength,bytesHashed:this._bytesHashed}},c.prototype.restoreState=function(l){return this._state.set(l.state),this._bufferLength=l.bufferLength,l.buffer&&this._buffer.set(l.buffer),this._bytesHashed=l.bytesHashed,this._finished=!1,this},c.prototype.cleanSavedState=function(l){r.wipe(l.state),l.buffer&&r.wipe(l.buffer),l.bufferLength=0,l.bytesHashed=0},c}();t.SHA256=i;var n=new Int32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]);function s(c,l,h,f,S){for(;S>=64;){for(var w=l[0],v=l[1],m=l[2],R=l[3],F=l[4],H=l[5],x=l[6],P=l[7],y=0;y<16;y++){var D=f+y*4;c[y]=e.readUint32BE(h,D)}for(var y=16;y<64;y++){var E=c[y-2],a=(E>>>17|E<<32-17)^(E>>>19|E<<32-19)^E>>>10;E=c[y-15];var d=(E>>>7|E<<32-7)^(E>>>18|E<<32-18)^E>>>3;c[y]=(a+c[y-7]|0)+(d+c[y-16]|0)}for(var y=0;y<64;y++){var a=(((F>>>6|F<<26)^(F>>>11|F<<21)^(F>>>25|F<<7))+(F&H^~F&x)|0)+(P+(n[y]+c[y]|0)|0)|0,d=((w>>>2|w<<32-2)^(w>>>13|w<<32-13)^(w>>>22|w<<32-22))+(w&v^w&m^v&m)|0;P=x,x=H,H=F,F=R+a|0,R=m,m=v,v=w,w=a+d|0}l[0]+=w,l[1]+=v,l[2]+=m,l[3]+=R,l[4]+=F,l[5]+=H,l[6]+=x,l[7]+=P,f+=64,S-=64}return f}function o(c){var l=new i;l.update(c);var h=l.digest();return l.clean(),h}t.hash=o})(ai);var un={};(function(t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sharedKey=t.generateKeyPair=t.generateKeyPairFromSeed=t.scalarMultBase=t.scalarMult=t.SHARED_KEY_LENGTH=t.SECRET_KEY_LENGTH=t.PUBLIC_KEY_LENGTH=void 0;const e=cr,r=dt;t.PUBLIC_KEY_LENGTH=32,t.SECRET_KEY_LENGTH=32,t.SHARED_KEY_LENGTH=32;function i(y){const D=new Float64Array(16);if(y)for(let E=0;E<y.length;E++)D[E]=y[E];return D}const n=new Uint8Array(32);n[0]=9;const s=i([56129,1]);function o(y){let D=1;for(let E=0;E<16;E++){let a=y[E]+D+65535;D=Math.floor(a/65536),y[E]=a-D*65536}y[0]+=D-1+37*(D-1)}function c(y,D,E){const a=~(E-1);for(let d=0;d<16;d++){const M=a&(y[d]^D[d]);y[d]^=M,D[d]^=M}}function l(y,D){const E=i(),a=i();for(let d=0;d<16;d++)a[d]=D[d];o(a),o(a),o(a);for(let d=0;d<2;d++){E[0]=a[0]-65517;for(let q=1;q<15;q++)E[q]=a[q]-65535-(E[q-1]>>16&1),E[q-1]&=65535;E[15]=a[15]-32767-(E[14]>>16&1);const M=E[15]>>16&1;E[14]&=65535,c(a,E,1-M)}for(let d=0;d<16;d++)y[2*d]=a[d]&255,y[2*d+1]=a[d]>>8}function h(y,D){for(let E=0;E<16;E++)y[E]=D[2*E]+(D[2*E+1]<<8);y[15]&=32767}function f(y,D,E){for(let a=0;a<16;a++)y[a]=D[a]+E[a]}function S(y,D,E){for(let a=0;a<16;a++)y[a]=D[a]-E[a]}function w(y,D,E){let a,d,M=0,q=0,G=0,J=0,X=0,g=0,_=0,$=0,U=0,N=0,C=0,j=0,B=0,Q=0,z=0,ee=0,Y=0,ae=0,T=0,A=0,O=0,u=0,b=0,K=0,k=0,le=0,_e=0,de=0,we=0,Le=0,Te=0,ye=E[0],pe=E[1],fe=E[2],ue=E[3],ce=E[4],oe=E[5],se=E[6],te=E[7],he=E[8],ge=E[9],ie=E[10],be=E[11],ve=E[12],Ee=E[13],De=E[14],me=E[15];a=D[0],M+=a*ye,q+=a*pe,G+=a*fe,J+=a*ue,X+=a*ce,g+=a*oe,_+=a*se,$+=a*te,U+=a*he,N+=a*ge,C+=a*ie,j+=a*be,B+=a*ve,Q+=a*Ee,z+=a*De,ee+=a*me,a=D[1],q+=a*ye,G+=a*pe,J+=a*fe,X+=a*ue,g+=a*ce,_+=a*oe,$+=a*se,U+=a*te,N+=a*he,C+=a*ge,j+=a*ie,B+=a*be,Q+=a*ve,z+=a*Ee,ee+=a*De,Y+=a*me,a=D[2],G+=a*ye,J+=a*pe,X+=a*fe,g+=a*ue,_+=a*ce,$+=a*oe,U+=a*se,N+=a*te,C+=a*he,j+=a*ge,B+=a*ie,Q+=a*be,z+=a*ve,ee+=a*Ee,Y+=a*De,ae+=a*me,a=D[3],J+=a*ye,X+=a*pe,g+=a*fe,_+=a*ue,$+=a*ce,U+=a*oe,N+=a*se,C+=a*te,j+=a*he,B+=a*ge,Q+=a*ie,z+=a*be,ee+=a*ve,Y+=a*Ee,ae+=a*De,T+=a*me,a=D[4],X+=a*ye,g+=a*pe,_+=a*fe,$+=a*ue,U+=a*ce,N+=a*oe,C+=a*se,j+=a*te,B+=a*he,Q+=a*ge,z+=a*ie,ee+=a*be,Y+=a*ve,ae+=a*Ee,T+=a*De,A+=a*me,a=D[5],g+=a*ye,_+=a*pe,$+=a*fe,U+=a*ue,N+=a*ce,C+=a*oe,j+=a*se,B+=a*te,Q+=a*he,z+=a*ge,ee+=a*ie,Y+=a*be,ae+=a*ve,T+=a*Ee,A+=a*De,O+=a*me,a=D[6],_+=a*ye,$+=a*pe,U+=a*fe,N+=a*ue,C+=a*ce,j+=a*oe,B+=a*se,Q+=a*te,z+=a*he,ee+=a*ge,Y+=a*ie,ae+=a*be,T+=a*ve,A+=a*Ee,O+=a*De,u+=a*me,a=D[7],$+=a*ye,U+=a*pe,N+=a*fe,C+=a*ue,j+=a*ce,B+=a*oe,Q+=a*se,z+=a*te,ee+=a*he,Y+=a*ge,ae+=a*ie,T+=a*be,A+=a*ve,O+=a*Ee,u+=a*De,b+=a*me,a=D[8],U+=a*ye,N+=a*pe,C+=a*fe,j+=a*ue,B+=a*ce,Q+=a*oe,z+=a*se,ee+=a*te,Y+=a*he,ae+=a*ge,T+=a*ie,A+=a*be,O+=a*ve,u+=a*Ee,b+=a*De,K+=a*me,a=D[9],N+=a*ye,C+=a*pe,j+=a*fe,B+=a*ue,Q+=a*ce,z+=a*oe,ee+=a*se,Y+=a*te,ae+=a*he,T+=a*ge,A+=a*ie,O+=a*be,u+=a*ve,b+=a*Ee,K+=a*De,k+=a*me,a=D[10],C+=a*ye,j+=a*pe,B+=a*fe,Q+=a*ue,z+=a*ce,ee+=a*oe,Y+=a*se,ae+=a*te,T+=a*he,A+=a*ge,O+=a*ie,u+=a*be,b+=a*ve,K+=a*Ee,k+=a*De,le+=a*me,a=D[11],j+=a*ye,B+=a*pe,Q+=a*fe,z+=a*ue,ee+=a*ce,Y+=a*oe,ae+=a*se,T+=a*te,A+=a*he,O+=a*ge,u+=a*ie,b+=a*be,K+=a*ve,k+=a*Ee,le+=a*De,_e+=a*me,a=D[12],B+=a*ye,Q+=a*pe,z+=a*fe,ee+=a*ue,Y+=a*ce,ae+=a*oe,T+=a*se,A+=a*te,O+=a*he,u+=a*ge,b+=a*ie,K+=a*be,k+=a*ve,le+=a*Ee,_e+=a*De,de+=a*me,a=D[13],Q+=a*ye,z+=a*pe,ee+=a*fe,Y+=a*ue,ae+=a*ce,T+=a*oe,A+=a*se,O+=a*te,u+=a*he,b+=a*ge,K+=a*ie,k+=a*be,le+=a*ve,_e+=a*Ee,de+=a*De,we+=a*me,a=D[14],z+=a*ye,ee+=a*pe,Y+=a*fe,ae+=a*ue,T+=a*ce,A+=a*oe,O+=a*se,u+=a*te,b+=a*he,K+=a*ge,k+=a*ie,le+=a*be,_e+=a*ve,de+=a*Ee,we+=a*De,Le+=a*me,a=D[15],ee+=a*ye,Y+=a*pe,ae+=a*fe,T+=a*ue,A+=a*ce,O+=a*oe,u+=a*se,b+=a*te,K+=a*he,k+=a*ge,le+=a*ie,_e+=a*be,de+=a*ve,we+=a*Ee,Le+=a*De,Te+=a*me,M+=38*Y,q+=38*ae,G+=38*T,J+=38*A,X+=38*O,g+=38*u,_+=38*b,$+=38*K,U+=38*k,N+=38*le,C+=38*_e,j+=38*de,B+=38*we,Q+=38*Le,z+=38*Te,d=1,a=M+d+65535,d=Math.floor(a/65536),M=a-d*65536,a=q+d+65535,d=Math.floor(a/65536),q=a-d*65536,a=G+d+65535,d=Math.floor(a/65536),G=a-d*65536,a=J+d+65535,d=Math.floor(a/65536),J=a-d*65536,a=X+d+65535,d=Math.floor(a/65536),X=a-d*65536,a=g+d+65535,d=Math.floor(a/65536),g=a-d*65536,a=_+d+65535,d=Math.floor(a/65536),_=a-d*65536,a=$+d+65535,d=Math.floor(a/65536),$=a-d*65536,a=U+d+65535,d=Math.floor(a/65536),U=a-d*65536,a=N+d+65535,d=Math.floor(a/65536),N=a-d*65536,a=C+d+65535,d=Math.floor(a/65536),C=a-d*65536,a=j+d+65535,d=Math.floor(a/65536),j=a-d*65536,a=B+d+65535,d=Math.floor(a/65536),B=a-d*65536,a=Q+d+65535,d=Math.floor(a/65536),Q=a-d*65536,a=z+d+65535,d=Math.floor(a/65536),z=a-d*65536,a=ee+d+65535,d=Math.floor(a/65536),ee=a-d*65536,M+=d-1+37*(d-1),d=1,a=M+d+65535,d=Math.floor(a/65536),M=a-d*65536,a=q+d+65535,d=Math.floor(a/65536),q=a-d*65536,a=G+d+65535,d=Math.floor(a/65536),G=a-d*65536,a=J+d+65535,d=Math.floor(a/65536),J=a-d*65536,a=X+d+65535,d=Math.floor(a/65536),X=a-d*65536,a=g+d+65535,d=Math.floor(a/65536),g=a-d*65536,a=_+d+65535,d=Math.floor(a/65536),_=a-d*65536,a=$+d+65535,d=Math.floor(a/65536),$=a-d*65536,a=U+d+65535,d=Math.floor(a/65536),U=a-d*65536,a=N+d+65535,d=Math.floor(a/65536),N=a-d*65536,a=C+d+65535,d=Math.floor(a/65536),C=a-d*65536,a=j+d+65535,d=Math.floor(a/65536),j=a-d*65536,a=B+d+65535,d=Math.floor(a/65536),B=a-d*65536,a=Q+d+65535,d=Math.floor(a/65536),Q=a-d*65536,a=z+d+65535,d=Math.floor(a/65536),z=a-d*65536,a=ee+d+65535,d=Math.floor(a/65536),ee=a-d*65536,M+=d-1+37*(d-1),y[0]=M,y[1]=q,y[2]=G,y[3]=J,y[4]=X,y[5]=g,y[6]=_,y[7]=$,y[8]=U,y[9]=N,y[10]=C,y[11]=j,y[12]=B,y[13]=Q,y[14]=z,y[15]=ee}function v(y,D){w(y,D,D)}function m(y,D){const E=i();for(let a=0;a<16;a++)E[a]=D[a];for(let a=253;a>=0;a--)v(E,E),a!==2&&a!==4&&w(E,E,D);for(let a=0;a<16;a++)y[a]=E[a]}function R(y,D){const E=new Uint8Array(32),a=new Float64Array(80),d=i(),M=i(),q=i(),G=i(),J=i(),X=i();for(let U=0;U<31;U++)E[U]=y[U];E[31]=y[31]&127|64,E[0]&=248,h(a,D);for(let U=0;U<16;U++)M[U]=a[U];d[0]=G[0]=1;for(let U=254;U>=0;--U){const N=E[U>>>3]>>>(U&7)&1;c(d,M,N),c(q,G,N),f(J,d,q),S(d,d,q),f(q,M,G),S(M,M,G),v(G,J),v(X,d),w(d,q,d),w(q,M,J),f(J,d,q),S(d,d,q),v(M,d),S(q,G,X),w(d,q,s),f(d,d,G),w(q,q,d),w(d,G,X),w(G,M,a),v(M,J),c(d,M,N),c(q,G,N)}for(let U=0;U<16;U++)a[U+16]=d[U],a[U+32]=q[U],a[U+48]=M[U],a[U+64]=G[U];const g=a.subarray(32),_=a.subarray(16);m(g,g),w(_,_,g);const $=new Uint8Array(32);return l($,_),$}t.scalarMult=R;function F(y){return R(y,n)}t.scalarMultBase=F;function H(y){if(y.length!==t.SECRET_KEY_LENGTH)throw new Error(`x25519: seed must be ${t.SECRET_KEY_LENGTH} bytes`);const D=new Uint8Array(y);return{publicKey:F(D),secretKey:D}}t.generateKeyPairFromSeed=H;function x(y){const D=(0,e.randomBytes)(32,y),E=H(D);return(0,r.wipe)(D),E}t.generateKeyPair=x;function P(y,D,E=!1){if(y.length!==t.PUBLIC_KEY_LENGTH)throw new Error(\"X25519: incorrect secret key length\");if(D.length!==t.PUBLIC_KEY_LENGTH)throw new Error(\"X25519: incorrect public key length\");const a=R(y,D);if(E){let d=0;for(let M=0;M<a.length;M++)d|=a[M];if(d===0)throw new Error(\"X25519: invalid shared key\")}return a}t.sharedKey=P})(un);var Do=function(t,e,r){if(r||arguments.length===2)for(var i=0,n=e.length,s;i<n;i++)(s||!(i in e))&&(s||(s=Array.prototype.slice.call(e,0,i)),s[i]=e[i]);return t.concat(s||Array.prototype.slice.call(e))},hd=function(){function t(e,r,i){this.name=e,this.version=r,this.os=i,this.type=\"browser\"}return t}(),ld=function(){function t(e){this.version=e,this.type=\"node\",this.name=\"node\",this.os=process.platform}return t}(),fd=function(){function t(e,r,i,n){this.name=e,this.version=r,this.os=i,this.bot=n,this.type=\"bot-device\"}return t}(),dd=function(){function t(){this.type=\"bot\",this.bot=!0,this.name=\"bot\",this.version=null,this.os=null}return t}(),pd=function(){function t(){this.type=\"react-native\",this.name=\"react-native\",this.version=null,this.os=null}return t}(),gd=/alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/,yd=/(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/,So=3,_d=[[\"aol\",/AOLShield\\/([0-9\\._]+)/],[\"edge\",/Edge\\/([0-9\\._]+)/],[\"edge-ios\",/EdgiOS\\/([0-9\\._]+)/],[\"yandexbrowser\",/YaBrowser\\/([0-9\\._]+)/],[\"kakaotalk\",/KAKAOTALK\\s([0-9\\.]+)/],[\"samsung\",/SamsungBrowser\\/([0-9\\.]+)/],[\"silk\",/\\bSilk\\/([0-9._-]+)\\b/],[\"miui\",/MiuiBrowser\\/([0-9\\.]+)$/],[\"beaker\",/BeakerBrowser\\/([0-9\\.]+)/],[\"edge-chromium\",/EdgA?\\/([0-9\\.]+)/],[\"chromium-webview\",/(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],[\"chrome\",/(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],[\"phantomjs\",/PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],[\"crios\",/CriOS\\/([0-9\\.]+)(:?\\s|$)/],[\"firefox\",/Firefox\\/([0-9\\.]+)(?:\\s|$)/],[\"fxios\",/FxiOS\\/([0-9\\.]+)/],[\"opera-mini\",/Opera Mini.*Version\\/([0-9\\.]+)/],[\"opera\",/Opera\\/([0-9\\.]+)(?:\\s|$)/],[\"opera\",/OPR\\/([0-9\\.]+)(:?\\s|$)/],[\"pie\",/^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],[\"pie\",/^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],[\"netfront\",/^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],[\"ie\",/Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],[\"ie\",/MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],[\"ie\",/MSIE\\s(7\\.0)/],[\"bb10\",/BB10;\\sTouch.*Version\\/([0-9\\.]+)/],[\"android\",/Android\\s([0-9\\.]+)/],[\"ios\",/Version\\/([0-9\\._]+).*Mobile.*Safari.*/],[\"safari\",/Version\\/([0-9\\._]+).*Safari/],[\"facebook\",/FB[AS]V\\/([0-9\\.]+)/],[\"instagram\",/Instagram\\s([0-9\\.]+)/],[\"ios-webview\",/AppleWebKit\\/([0-9\\.]+).*Mobile/],[\"ios-webview\",/AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],[\"curl\",/^curl\\/([0-9\\.]+)$/],[\"searchbot\",gd]],xo=[[\"iOS\",/iP(hone|od|ad)/],[\"Android OS\",/Android/],[\"BlackBerry OS\",/BlackBerry|BB10/],[\"Windows Mobile\",/IEMobile/],[\"Amazon OS\",/Kindle/],[\"Windows 3.11\",/Win16/],[\"Windows 95\",/(Windows 95)|(Win95)|(Windows_95)/],[\"Windows 98\",/(Windows 98)|(Win98)/],[\"Windows 2000\",/(Windows NT 5.0)|(Windows 2000)/],[\"Windows XP\",/(Windows NT 5.1)|(Windows XP)/],[\"Windows Server 2003\",/(Windows NT 5.2)/],[\"Windows Vista\",/(Windows NT 6.0)/],[\"Windows 7\",/(Windows NT 6.1)/],[\"Windows 8\",/(Windows NT 6.2)/],[\"Windows 8.1\",/(Windows NT 6.3)/],[\"Windows 10\",/(Windows NT 10.0)/],[\"Windows ME\",/Windows ME/],[\"Windows CE\",/Windows CE|WinCE|Microsoft Pocket Internet Explorer/],[\"Open BSD\",/OpenBSD/],[\"Sun OS\",/SunOS/],[\"Chrome OS\",/CrOS/],[\"Linux\",/(Linux)|(X11)/],[\"Mac OS\",/(Mac_PowerPC)|(Macintosh)/],[\"QNX\",/QNX/],[\"BeOS\",/BeOS/],[\"OS/2\",/OS\\/2/]];function bd(t){return t?Oo(t):typeof document>\"u\"&&typeof navigator<\"u\"&&navigator.product===\"ReactNative\"?new pd:typeof navigator<\"u\"?Oo(navigator.userAgent):md()}function vd(t){return t!==\"\"&&_d.reduce(function(e,r){var i=r[0],n=r[1];if(e)return e;var s=n.exec(t);return!!s&&[i,s]},!1)}function Oo(t){var e=vd(t);if(!e)return null;var r=e[0],i=e[1];if(r===\"searchbot\")return new dd;var n=i[1]&&i[1].split(\".\").join(\"_\").split(\"_\").slice(0,3);n?n.length<So&&(n=Do(Do([],n,!0),Ed(So-n.length),!0)):n=[];var s=n.join(\".\"),o=wd(t),c=yd.exec(t);return c&&c[1]?new fd(r,s,o,c[1]):new hd(r,s,o)}function wd(t){for(var e=0,r=xo.length;e<r;e++){var i=xo[e],n=i[0],s=i[1],o=s.exec(t);if(o)return n}return null}function md(){var t=typeof process<\"u\"&&process.version;return t?new ld(process.version.slice(1)):null}function Ed(t){for(var e=[],r=0;r<t;r++)e.push(\"0\");return e}var Oe={};Object.defineProperty(Oe,\"__esModule\",{value:!0}),Oe.getLocalStorage=Oe.getLocalStorageOrThrow=Oe.getCrypto=Oe.getCryptoOrThrow=Po=Oe.getLocation=Oe.getLocationOrThrow=hn=Oe.getNavigator=Oe.getNavigatorOrThrow=Io=Oe.getDocument=Oe.getDocumentOrThrow=Oe.getFromWindowOrThrow=Oe.getFromWindow=void 0;function Jt(t){let e;return typeof window<\"u\"&&typeof window[t]<\"u\"&&(e=window[t]),e}Oe.getFromWindow=Jt;function ur(t){const e=Jt(t);if(!e)throw new Error(`${t} is not defined in Window`);return e}Oe.getFromWindowOrThrow=ur;function Dd(){return ur(\"document\")}Oe.getDocumentOrThrow=Dd;function Sd(){return Jt(\"document\")}var Io=Oe.getDocument=Sd;function xd(){return ur(\"navigator\")}Oe.getNavigatorOrThrow=xd;function Od(){return Jt(\"navigator\")}var hn=Oe.getNavigator=Od;function Id(){return ur(\"location\")}Oe.getLocationOrThrow=Id;function Pd(){return Jt(\"location\")}var Po=Oe.getLocation=Pd;function Ad(){return ur(\"crypto\")}Oe.getCryptoOrThrow=Ad;function Td(){return Jt(\"crypto\")}Oe.getCrypto=Td;function Cd(){return ur(\"localStorage\")}Oe.getLocalStorageOrThrow=Cd;function Nd(){return Jt(\"localStorage\")}Oe.getLocalStorage=Nd;var ln={};Object.defineProperty(ln,\"__esModule\",{value:!0});var Ao=ln.getWindowMetadata=void 0;const To=Oe;function Rd(){let t,e;try{t=To.getDocumentOrThrow(),e=To.getLocationOrThrow()}catch{return null}function r(){const S=t.getElementsByTagName(\"link\"),w=[];for(let v=0;v<S.length;v++){const m=S[v],R=m.getAttribute(\"rel\");if(R&&R.toLowerCase().indexOf(\"icon\")>-1){const F=m.getAttribute(\"href\");if(F)if(F.toLowerCase().indexOf(\"https:\")===-1&&F.toLowerCase().indexOf(\"http:\")===-1&&F.indexOf(\"//\")!==0){let H=e.protocol+\"//\"+e.host;if(F.indexOf(\"/\")===0)H+=F;else{const x=e.pathname.split(\"/\");x.pop();const P=x.join(\"/\");H+=P+\"/\"+F}w.push(H)}else if(F.indexOf(\"//\")===0){const H=e.protocol+F;w.push(H)}else w.push(F)}}return w}function i(...S){const w=t.getElementsByTagName(\"meta\");for(let v=0;v<w.length;v++){const m=w[v],R=[\"itemprop\",\"property\",\"name\"].map(F=>m.getAttribute(F)).filter(F=>F?S.includes(F):!1);if(R.length&&R){const F=m.getAttribute(\"content\");if(F)return F}}return\"\"}function n(){let S=i(\"name\",\"og:site_name\",\"og:title\",\"twitter:title\");return S||(S=t.title),S}function s(){return i(\"description\",\"og:description\",\"twitter:description\",\"keywords\")}const o=n(),c=s(),l=e.origin,h=r();return{description:c,url:l,icons:h,name:o}}Ao=ln.getWindowMetadata=Rd;var Tr={},Fd=t=>encodeURIComponent(t).replace(/[!'()*]/g,e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`),Co=\"%[a-f0-9]{2}\",No=new RegExp(\"(\"+Co+\")|([^%]+?)\",\"gi\"),Ro=new RegExp(\"(\"+Co+\")+\",\"gi\");function fn(t,e){try{return[decodeURIComponent(t.join(\"\"))]}catch{}if(t.length===1)return t;e=e||1;var r=t.slice(0,e),i=t.slice(e);return Array.prototype.concat.call([],fn(r),fn(i))}function Ld(t){try{return decodeURIComponent(t)}catch{for(var e=t.match(No)||[],r=1;r<e.length;r++)t=fn(e,r).join(\"\"),e=t.match(No)||[];return t}}function $d(t){for(var e={\"%FE%FF\":\"\\uFFFD\\uFFFD\",\"%FF%FE\":\"\\uFFFD\\uFFFD\"},r=Ro.exec(t);r;){try{e[r[0]]=decodeURIComponent(r[0])}catch{var i=Ld(r[0]);i!==r[0]&&(e[r[0]]=i)}r=Ro.exec(t)}e[\"%C2\"]=\"\\uFFFD\";for(var n=Object.keys(e),s=0;s<n.length;s++){var o=n[s];t=t.replace(new RegExp(o,\"g\"),e[o])}return t}var Ud=function(t){if(typeof t!=\"string\")throw new TypeError(\"Expected `encodedURI` to be of type `string`, got `\"+typeof t+\"`\");try{return t=t.replace(/\\+/g,\" \"),decodeURIComponent(t)}catch{return $d(t)}},Md=(t,e)=>{if(!(typeof t==\"string\"&&typeof e==\"string\"))throw new TypeError(\"Expected the arguments to be of type `string`\");if(e===\"\")return[t];const r=t.indexOf(e);return r===-1?[t]:[t.slice(0,r),t.slice(r+e.length)]},jd=function(t,e){for(var r={},i=Object.keys(t),n=Array.isArray(e),s=0;s<i.length;s++){var o=i[s],c=t[o];(n?e.indexOf(o)!==-1:e(o,c,t))&&(r[o]=c)}return r};(function(t){const e=Fd,r=Ud,i=Md,n=jd,s=x=>x==null,o=Symbol(\"encodeFragmentIdentifier\");function c(x){switch(x.arrayFormat){case\"index\":return P=>(y,D)=>{const E=y.length;return D===void 0||x.skipNull&&D===null||x.skipEmptyString&&D===\"\"?y:D===null?[...y,[f(P,x),\"[\",E,\"]\"].join(\"\")]:[...y,[f(P,x),\"[\",f(E,x),\"]=\",f(D,x)].join(\"\")]};case\"bracket\":return P=>(y,D)=>D===void 0||x.skipNull&&D===null||x.skipEmptyString&&D===\"\"?y:D===null?[...y,[f(P,x),\"[]\"].join(\"\")]:[...y,[f(P,x),\"[]=\",f(D,x)].join(\"\")];case\"colon-list-separator\":return P=>(y,D)=>D===void 0||x.skipNull&&D===null||x.skipEmptyString&&D===\"\"?y:D===null?[...y,[f(P,x),\":list=\"].join(\"\")]:[...y,[f(P,x),\":list=\",f(D,x)].join(\"\")];case\"comma\":case\"separator\":case\"bracket-separator\":{const P=x.arrayFormat===\"bracket-separator\"?\"[]=\":\"=\";return y=>(D,E)=>E===void 0||x.skipNull&&E===null||x.skipEmptyString&&E===\"\"?D:(E=E===null?\"\":E,D.length===0?[[f(y,x),P,f(E,x)].join(\"\")]:[[D,f(E,x)].join(x.arrayFormatSeparator)])}default:return P=>(y,D)=>D===void 0||x.skipNull&&D===null||x.skipEmptyString&&D===\"\"?y:D===null?[...y,f(P,x)]:[...y,[f(P,x),\"=\",f(D,x)].join(\"\")]}}function l(x){let P;switch(x.arrayFormat){case\"index\":return(y,D,E)=>{if(P=/\\[(\\d*)\\]$/.exec(y),y=y.replace(/\\[\\d*\\]$/,\"\"),!P){E[y]=D;return}E[y]===void 0&&(E[y]={}),E[y][P[1]]=D};case\"bracket\":return(y,D,E)=>{if(P=/(\\[\\])$/.exec(y),y=y.replace(/\\[\\]$/,\"\"),!P){E[y]=D;return}if(E[y]===void 0){E[y]=[D];return}E[y]=[].concat(E[y],D)};case\"colon-list-separator\":return(y,D,E)=>{if(P=/(:list)$/.exec(y),y=y.replace(/:list$/,\"\"),!P){E[y]=D;return}if(E[y]===void 0){E[y]=[D];return}E[y]=[].concat(E[y],D)};case\"comma\":case\"separator\":return(y,D,E)=>{const a=typeof D==\"string\"&&D.includes(x.arrayFormatSeparator),d=typeof D==\"string\"&&!a&&S(D,x).includes(x.arrayFormatSeparator);D=d?S(D,x):D;const M=a||d?D.split(x.arrayFormatSeparator).map(q=>S(q,x)):D===null?D:S(D,x);E[y]=M};case\"bracket-separator\":return(y,D,E)=>{const a=/(\\[\\])$/.test(y);if(y=y.replace(/\\[\\]$/,\"\"),!a){E[y]=D&&S(D,x);return}const d=D===null?[]:D.split(x.arrayFormatSeparator).map(M=>S(M,x));if(E[y]===void 0){E[y]=d;return}E[y]=[].concat(E[y],d)};default:return(y,D,E)=>{if(E[y]===void 0){E[y]=D;return}E[y]=[].concat(E[y],D)}}}function h(x){if(typeof x!=\"string\"||x.length!==1)throw new TypeError(\"arrayFormatSeparator must be single character string\")}function f(x,P){return P.encode?P.strict?e(x):encodeURIComponent(x):x}function S(x,P){return P.decode?r(x):x}function w(x){return Array.isArray(x)?x.sort():typeof x==\"object\"?w(Object.keys(x)).sort((P,y)=>Number(P)-Number(y)).map(P=>x[P]):x}function v(x){const P=x.indexOf(\"#\");return P!==-1&&(x=x.slice(0,P)),x}function m(x){let P=\"\";const y=x.indexOf(\"#\");return y!==-1&&(P=x.slice(y)),P}function R(x){x=v(x);const P=x.indexOf(\"?\");return P===-1?\"\":x.slice(P+1)}function F(x,P){return P.parseNumbers&&!Number.isNaN(Number(x))&&typeof x==\"string\"&&x.trim()!==\"\"?x=Number(x):P.parseBooleans&&x!==null&&(x.toLowerCase()===\"true\"||x.toLowerCase()===\"false\")&&(x=x.toLowerCase()===\"true\"),x}function H(x,P){P=Object.assign({decode:!0,sort:!0,arrayFormat:\"none\",arrayFormatSeparator:\",\",parseNumbers:!1,parseBooleans:!1},P),h(P.arrayFormatSeparator);const y=l(P),D=Object.create(null);if(typeof x!=\"string\"||(x=x.trim().replace(/^[?#&]/,\"\"),!x))return D;for(const E of x.split(\"&\")){if(E===\"\")continue;let[a,d]=i(P.decode?E.replace(/\\+/g,\" \"):E,\"=\");d=d===void 0?null:[\"comma\",\"separator\",\"bracket-separator\"].includes(P.arrayFormat)?d:S(d,P),y(S(a,P),d,D)}for(const E of Object.keys(D)){const a=D[E];if(typeof a==\"object\"&&a!==null)for(const d of Object.keys(a))a[d]=F(a[d],P);else D[E]=F(a,P)}return P.sort===!1?D:(P.sort===!0?Object.keys(D).sort():Object.keys(D).sort(P.sort)).reduce((E,a)=>{const d=D[a];return Boolean(d)&&typeof d==\"object\"&&!Array.isArray(d)?E[a]=w(d):E[a]=d,E},Object.create(null))}t.extract=R,t.parse=H,t.stringify=(x,P)=>{if(!x)return\"\";P=Object.assign({encode:!0,strict:!0,arrayFormat:\"none\",arrayFormatSeparator:\",\"},P),h(P.arrayFormatSeparator);const y=d=>P.skipNull&&s(x[d])||P.skipEmptyString&&x[d]===\"\",D=c(P),E={};for(const d of Object.keys(x))y(d)||(E[d]=x[d]);const a=Object.keys(E);return P.sort!==!1&&a.sort(P.sort),a.map(d=>{const M=x[d];return M===void 0?\"\":M===null?f(d,P):Array.isArray(M)?M.length===0&&P.arrayFormat===\"bracket-separator\"?f(d,P)+\"[]\":M.reduce(D(d),[]).join(\"&\"):f(d,P)+\"=\"+f(M,P)}).filter(d=>d.length>0).join(\"&\")},t.parseUrl=(x,P)=>{P=Object.assign({decode:!0},P);const[y,D]=i(x,\"#\");return Object.assign({url:y.split(\"?\")[0]||\"\",query:H(R(x),P)},P&&P.parseFragmentIdentifier&&D?{fragmentIdentifier:S(D,P)}:{})},t.stringifyUrl=(x,P)=>{P=Object.assign({encode:!0,strict:!0,[o]:!0},P);const y=v(x.url).split(\"?\")[0]||\"\",D=t.extract(x.url),E=t.parse(D,{sort:!1}),a=Object.assign(E,x.query);let d=t.stringify(a,P);d&&(d=`?${d}`);let M=m(x.url);return x.fragmentIdentifier&&(M=`#${P[o]?f(x.fragmentIdentifier,P):x.fragmentIdentifier}`),`${y}${d}${M}`},t.pick=(x,P,y)=>{y=Object.assign({parseFragmentIdentifier:!0,[o]:!1},y);const{url:D,query:E,fragmentIdentifier:a}=t.parseUrl(x,y);return t.stringifyUrl({url:D,query:n(E,P),fragmentIdentifier:a},y)},t.exclude=(x,P,y)=>{const D=Array.isArray(P)?E=>!P.includes(E):(E,a)=>!P(E,a);return t.pick(x,D,y)}})(Tr);const Bd={waku:{publish:\"waku_publish\",subscribe:\"waku_subscribe\",subscription:\"waku_subscription\",unsubscribe:\"waku_unsubscribe\"},irn:{publish:\"irn_publish\",subscribe:\"irn_subscribe\",subscription:\"irn_subscription\",unsubscribe:\"irn_unsubscribe\"},iridium:{publish:\"iridium_publish\",subscribe:\"iridium_subscribe\",subscription:\"iridium_subscription\",unsubscribe:\"iridium_unsubscribe\"}};function dn(t,e){return t.includes(\":\")?[t]:e.chains||[]}const Fo=\"base10\",lt=\"base16\",pn=\"base64pad\",gn=\"utf8\",Lo=0,Xt=1,Hd=0,$o=1,yn=12,_n=32;function qd(){const t=un.generateKeyPair();return{privateKey:ut(t.secretKey,lt),publicKey:ut(t.publicKey,lt)}}function bn(){const t=cr.randomBytes(_n);return ut(t,lt)}function zd(t,e){const r=un.sharedKey(ht(t,lt),ht(e,lt)),i=new ud(ai.SHA256,r).expand(_n);return ut(i,lt)}function Kd(t){const e=ai.hash(ht(t,lt));return ut(e,lt)}function ci(t){const e=ai.hash(ht(t,gn));return ut(e,lt)}function Vd(t){return ht(`${t}`,Fo)}function Cr(t){return Number(ut(t,Fo))}function Gd(t){const e=Vd(typeof t.type<\"u\"?t.type:Lo);if(Cr(e)===Xt&&typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");const r=typeof t.senderPublicKey<\"u\"?ht(t.senderPublicKey,lt):void 0,i=typeof t.iv<\"u\"?ht(t.iv,lt):cr.randomBytes(yn),n=new on.ChaCha20Poly1305(ht(t.symKey,lt)).seal(i,ht(t.message,gn));return Wd({type:e,sealed:n,iv:i,senderPublicKey:r})}function kd(t){const e=new on.ChaCha20Poly1305(ht(t.symKey,lt)),{sealed:r,iv:i}=vn(t.encoded),n=e.open(i,r);if(n===null)throw new Error(\"Failed to decrypt\");return ut(n,gn)}function Wd(t){if(Cr(t.type)===Xt){if(typeof t.senderPublicKey>\"u\")throw new Error(\"Missing sender public key for type 1 envelope\");return ut(tn([t.type,t.senderPublicKey,t.iv,t.sealed]),pn)}return ut(tn([t.type,t.iv,t.sealed]),pn)}function vn(t){const e=ht(t,pn),r=e.slice(Hd,$o),i=$o;if(Cr(r)===Xt){const c=i+_n,l=c+yn,h=e.slice(i,c),f=e.slice(c,l),S=e.slice(l);return{type:r,sealed:S,iv:f,senderPublicKey:h}}const n=i+yn,s=e.slice(i,n),o=e.slice(n);return{type:r,sealed:o,iv:s}}function Yd(t,e){const r=vn(t);return Uo({type:Cr(r.type),senderPublicKey:typeof r.senderPublicKey<\"u\"?ut(r.senderPublicKey,lt):void 0,receiverPublicKey:e?.receiverPublicKey})}function Uo(t){const e=t?.type||Lo;if(e===Xt){if(typeof t?.senderPublicKey>\"u\")throw new Error(\"missing sender public key\");if(typeof t?.receiverPublicKey>\"u\")throw new Error(\"missing receiver public key\")}return{type:e,senderPublicKey:t?.senderPublicKey,receiverPublicKey:t?.receiverPublicKey}}function Mo(t){return t.type===Xt&&typeof t.senderPublicKey==\"string\"&&typeof t.receiverPublicKey==\"string\"}var Jd=Object.defineProperty,jo=Object.getOwnPropertySymbols,Xd=Object.prototype.hasOwnProperty,Zd=Object.prototype.propertyIsEnumerable,Bo=(t,e,r)=>e in t?Jd(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,Ho=(t,e)=>{for(var r in e||(e={}))Xd.call(e,r)&&Bo(t,r,e[r]);if(jo)for(var r of jo(e))Zd.call(e,r)&&Bo(t,r,e[r]);return t};const Qd=\"ReactNative\",Nr={reactNative:\"react-native\",node:\"node\",browser:\"browser\",unknown:\"unknown\"},ep=\"js\";function qo(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}function tp(){return!Io()&&!!hn()&&navigator.product===Qd}function rp(){return!qo()&&!!hn()}function ip(){return tp()?Nr.reactNative:qo()?Nr.node:rp()?Nr.browser:Nr.unknown}function np(t,e){let r=Tr.parse(t);return r=Ho(Ho({},r),e),t=Tr.stringify(r),t}function sp(){return Ao()||{name:\"\",description:\"\",url:\"\",icons:[\"\"]}}function op(){const t=bd();if(t===null)return\"unknown\";const e=t.os?t.os.replace(\" \",\"\").toLowerCase():\"unknown\";return t.type===\"browser\"?[e,t.name,t.version].join(\"-\"):[e,t.version].join(\"-\")}function ap(){var t;const e=ip();return e===Nr.browser?[e,((t=Po())==null?void 0:t.host)||\"unknown\"].join(\":\"):e}function cp(t,e,r){const i=op(),n=ap();return[[t,e].join(\"-\"),[ep,r].join(\"-\"),i,n].join(\"/\")}function up({protocol:t,version:e,relayUrl:r,sdkVersion:i,auth:n,projectId:s}){const o=r.split(\"?\"),c=cp(t,e,i),l={auth:n,ua:c,projectId:s},h=np(o[1]||\"\",l);return o[0]+\"?\"+h}function Lt(t,e){return t.filter(r=>e.includes(r)).length===t.length}function zo(t){return Object.fromEntries(t.entries())}function Ko(t){return new Map(Object.entries(t))}function Zt(t){const e=Z.toMiliseconds(t||Z.FIVE_MINUTES);let r,i,n;return{resolve:s=>{n&&r&&(clearTimeout(n),r(s))},reject:s=>{n&&i&&(clearTimeout(n),i(s))},done:()=>new Promise((s,o)=>{n=setTimeout(o,e),r=s,i=o})}}function Vo(t,e){return new Promise(async(r,i)=>{const n=setTimeout(()=>i(),e),s=await t;clearTimeout(n),r(s)})}function Go(t,e){if(typeof e==\"string\"&&e.startsWith(`${t}:`))return e;if(t.toLowerCase()===\"topic\"){if(typeof e!=\"string\")throw new Error('Value must be \"string\" for expirer target type: topic');return`topic:${e}`}else if(t.toLowerCase()===\"id\"){if(typeof e!=\"number\")throw new Error('Value must be \"number\" for expirer target type: id');return`id:${e}`}throw new Error(`Unknown expirer target type: ${t}`)}function hp(t){return Go(\"topic\",t)}function lp(t){return Go(\"id\",t)}function ko(t){const[e,r]=t.split(\":\"),i={id:void 0,topic:void 0};if(e===\"topic\"&&typeof r==\"string\")i.topic=r;else if(e===\"id\"&&Number.isInteger(Number(r)))i.id=Number(r);else throw new Error(`Invalid target, expected id:number or topic:string, got ${e}:${r}`);return i}function xt(t,e){return Z.fromMiliseconds((e||Date.now())+Z.toMiliseconds(t))}function $t(t){return Date.now()>=Z.toMiliseconds(t)}function Fe(t,e){return`${t}${e?`:${e}`:\"\"}`}const fp=\"irn\";function wn(t){return t?.relay||{protocol:fp}}function mn(t){const e=Bd[t];if(typeof e>\"u\")throw new Error(`Relay Protocol not supported: ${t}`);return e}var dp=Object.defineProperty,Wo=Object.getOwnPropertySymbols,pp=Object.prototype.hasOwnProperty,gp=Object.prototype.propertyIsEnumerable,Yo=(t,e,r)=>e in t?dp(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,yp=(t,e)=>{for(var r in e||(e={}))pp.call(e,r)&&Yo(t,r,e[r]);if(Wo)for(var r of Wo(e))gp.call(e,r)&&Yo(t,r,e[r]);return t};function _p(t,e=\"-\"){const r={},i=\"relay\"+e;return Object.keys(t).forEach(n=>{if(n.startsWith(i)){const s=n.replace(i,\"\"),o=t[n];r[s]=o}}),r}function bp(t){const e=t.indexOf(\":\"),r=t.indexOf(\"?\")!==-1?t.indexOf(\"?\"):void 0,i=t.substring(0,e),n=t.substring(e+1,r).split(\"@\"),s=typeof r<\"u\"?t.substring(r):\"\",o=Tr.parse(s);return{protocol:i,topic:n[0],version:parseInt(n[1],10),symKey:o.symKey,relay:_p(o)}}function vp(t,e=\"-\"){const r=\"relay\",i={};return Object.keys(t).forEach(n=>{const s=r+e+n;t[n]&&(i[s]=t[n])}),i}function wp(t){return`${t.protocol}:${t.topic}@${t.version}?`+Tr.stringify(yp({symKey:t.symKey},vp(t.relay)))}function Rr(t){const e=[];return t.forEach(r=>{const[i,n]=r.split(\":\");e.push(`${i}:${n}`)}),e}function mp(t){const e=[];return Object.values(t).forEach(r=>{e.push(...Rr(r.accounts))}),e}function Ep(t,e){const r=[];return Object.values(t).forEach(i=>{Rr(i.accounts).includes(e)&&r.push(...i.methods)}),r}function Dp(t,e){const r=[];return Object.values(t).forEach(i=>{Rr(i.accounts).includes(e)&&r.push(...i.events)}),r}function Sp(t,e){const r=ui(t,e);if(r)throw new Error(r.message);const i={};for(const[n,s]of Object.entries(t))i[n]={methods:s.methods,events:s.events,chains:s.accounts.map(o=>`${o.split(\":\")[0]}:${o.split(\":\")[1]}`)};return i}const xp={INVALID_METHOD:{message:\"Invalid method.\",code:1001},INVALID_EVENT:{message:\"Invalid event.\",code:1002},INVALID_UPDATE_REQUEST:{message:\"Invalid update request.\",code:1003},INVALID_EXTEND_REQUEST:{message:\"Invalid extend request.\",code:1004},INVALID_SESSION_SETTLE_REQUEST:{message:\"Invalid session settle request.\",code:1005},UNAUTHORIZED_METHOD:{message:\"Unauthorized method.\",code:3001},UNAUTHORIZED_EVENT:{message:\"Unauthorized event.\",code:3002},UNAUTHORIZED_UPDATE_REQUEST:{message:\"Unauthorized update request.\",code:3003},UNAUTHORIZED_EXTEND_REQUEST:{message:\"Unauthorized extend request.\",code:3004},USER_REJECTED:{message:\"User rejected.\",code:5e3},USER_REJECTED_CHAINS:{message:\"User rejected chains.\",code:5001},USER_REJECTED_METHODS:{message:\"User rejected methods.\",code:5002},USER_REJECTED_EVENTS:{message:\"User rejected events.\",code:5003},UNSUPPORTED_CHAINS:{message:\"Unsupported chains.\",code:5100},UNSUPPORTED_METHODS:{message:\"Unsupported methods.\",code:5101},UNSUPPORTED_EVENTS:{message:\"Unsupported events.\",code:5102},UNSUPPORTED_ACCOUNTS:{message:\"Unsupported accounts.\",code:5103},UNSUPPORTED_NAMESPACE_KEY:{message:\"Unsupported namespace key.\",code:5104},USER_DISCONNECTED:{message:\"User disconnected.\",code:6e3},SESSION_SETTLEMENT_FAILED:{message:\"Session settlement failed.\",code:7e3},WC_METHOD_UNSUPPORTED:{message:\"Unsupported wc_ method.\",code:10001}},Op={NOT_INITIALIZED:{message:\"Not initialized.\",code:1},NO_MATCHING_KEY:{message:\"No matching key.\",code:2},RESTORE_WILL_OVERRIDE:{message:\"Restore will override.\",code:3},RESUBSCRIBED:{message:\"Resubscribed.\",code:4},MISSING_OR_INVALID:{message:\"Missing or invalid.\",code:5},EXPIRED:{message:\"Expired.\",code:6},UNKNOWN_TYPE:{message:\"Unknown type.\",code:7},MISMATCHED_TOPIC:{message:\"Mismatched topic.\",code:8},NON_CONFORMING_NAMESPACES:{message:\"Non conforming namespaces.\",code:9}};function V(t,e){const{message:r,code:i}=Op[t];return{message:e?`${r} ${e}`:r,code:i}}function $e(t,e){const{message:r,code:i}=xp[t];return{message:e?`${r} ${e}`:r,code:i}}function Fr(t,e){return Array.isArray(t)?typeof e<\"u\"&&t.length?t.every(e):!0:!1}function Lr(t){return Object.getPrototypeOf(t)===Object.prototype&&Object.keys(t).length}function at(t){return typeof t>\"u\"}function Ke(t,e){return e&&at(t)?!0:typeof t==\"string\"&&Boolean(t.trim().length)}function En(t,e){return e&&at(t)?!0:typeof t==\"number\"&&!isNaN(t)}function Ip(t,e){const{requiredNamespaces:r}=e,i=Object.keys(t.namespaces),n=Object.keys(r);let s=!0;return Lt(n,i)?(i.forEach(o=>{const{accounts:c,methods:l,events:h}=t.namespaces[o],f=Rr(c),S=r[o];(!Lt(dn(o,S),f)||!Lt(S.methods,l)||!Lt(S.events,h))&&(s=!1)}),s):!1}function Dn(t){return Ke(t,!1)&&t.includes(\":\")?t.split(\":\").length===2:!1}function Pp(t){if(Ke(t,!1)&&t.includes(\":\")){const e=t.split(\":\");if(e.length===3){const r=e[0]+\":\"+e[1];return!!e[2]&&Dn(r)}}return!1}function Ap(t){if(Ke(t,!1))try{return typeof new URL(t)<\"u\"}catch{return!1}return!1}function Tp(t){var e;return(e=t?.proposer)==null?void 0:e.publicKey}function Cp(t){return t?.topic}function Np(t,e){let r=null;return Ke(t?.publicKey,!1)||(r=V(\"MISSING_OR_INVALID\",`${e} controller public key should be a string`)),r}function Jo(t){let e=!0;return Fr(t)?t.length&&(e=t.every(r=>Ke(r,!1))):e=!1,e}function Rp(t,e,r){let i=null;return Fr(e)?e.forEach(n=>{i||(!Dn(n)||!n.includes(t))&&(i=$e(\"UNSUPPORTED_CHAINS\",`${r}, chain ${n} should be a string and conform to \"namespace:chainId\" format`))}):i=$e(\"UNSUPPORTED_CHAINS\",`${r}, chains ${e} should be an array of strings conforming to \"namespace:chainId\" format`),i}function Fp(t,e){let r=null;return Object.entries(t).forEach(([i,n])=>{if(r)return;const s=Rp(i,dn(i,n),`${e} requiredNamespace`);s&&(r=s)}),r}function Lp(t,e){let r=null;return Fr(t)?t.forEach(i=>{r||Pp(i)||(r=$e(\"UNSUPPORTED_ACCOUNTS\",`${e}, account ${i} should be a string and conform to \"namespace:chainId:address\" format`))}):r=$e(\"UNSUPPORTED_ACCOUNTS\",`${e}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`),r}function $p(t,e){let r=null;return Object.values(t).forEach(i=>{if(r)return;const n=Lp(i?.accounts,`${e} namespace`);n&&(r=n)}),r}function Up(t,e){let r=null;return Jo(t?.methods)?Jo(t?.events)||(r=$e(\"UNSUPPORTED_EVENTS\",`${e}, events should be an array of strings or empty array for no events`)):r=$e(\"UNSUPPORTED_METHODS\",`${e}, methods should be an array of strings or empty array for no methods`),r}function Xo(t,e){let r=null;return Object.values(t).forEach(i=>{if(r)return;const n=Up(i,`${e}, namespace`);n&&(r=n)}),r}function Mp(t,e,r){let i=null;if(t&&Lr(t)){const n=Xo(t,e);n&&(i=n);const s=Fp(t,e);s&&(i=s)}else i=V(\"MISSING_OR_INVALID\",`${e}, ${r} should be an object with data`);return i}function ui(t,e){let r=null;if(t&&Lr(t)){const i=Xo(t,e);i&&(r=i);const n=$p(t,e);n&&(r=n)}else r=V(\"MISSING_OR_INVALID\",`${e}, namespaces should be an object with data`);return r}function Zo(t){return Ke(t.protocol,!0)}function jp(t,e){let r=!1;return e&&!t?r=!0:t&&Fr(t)&&t.length&&t.forEach(i=>{r=Zo(i)}),r}function Bp(t){return typeof t==\"number\"}function ft(t){return typeof t<\"u\"&&typeof t!==null}function Hp(t){return!(!t||typeof t!=\"object\"||!t.code||!En(t.code,!1)||!t.message||!Ke(t.message,!1))}function qp(t){return!(at(t)||!Ke(t.method,!1))}function zp(t){return!(at(t)||at(t.result)&&at(t.error)||!En(t.id,!1)||!Ke(t.jsonrpc,!1))}function Kp(t){return!(at(t)||!Ke(t.name,!1))}function Qo(t,e){return!(!Dn(e)||!mp(t).includes(e))}function Vp(t,e,r){return Ke(r,!1)?Ep(t,e).includes(r):!1}function Gp(t,e,r){return Ke(r,!1)?Dp(t,e).includes(r):!1}function Sn(t,e,r,i){let n=null;const s=Object.keys(t),o=Object.keys(e);return Lt(s,o)?s.forEach(c=>{if(n)return;const l=Rr(e[c].accounts);Lt(dn(c,t[c]),l)?Lt(t[c].methods,e[c].methods)?Lt(t[c].events,e[c].events)||(n=V(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces events don't satisfy namespace events for ${c}`)):n=V(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces methods don't satisfy namespace methods for ${c}`):n=V(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces accounts don't satisfy namespace chains for ${c}`)}):n=V(\"NON_CONFORMING_NAMESPACES\",`${r} namespaces keys don't satisfy ${i}`),n}function kp(t,e){return En(t,!1)&&t<=e.max&&t>=e.min}const Wp=\"PARSE_ERROR\",Yp=\"INVALID_REQUEST\",Jp=\"METHOD_NOT_FOUND\",Xp=\"INVALID_PARAMS\",ea=\"INTERNAL_ERROR\",xn=\"SERVER_ERROR\",Zp=[-32700,-32600,-32601,-32602,-32603],$r={[Wp]:{code:-32700,message:\"Parse error\"},[Yp]:{code:-32600,message:\"Invalid Request\"},[Jp]:{code:-32601,message:\"Method not found\"},[Xp]:{code:-32602,message:\"Invalid params\"},[ea]:{code:-32603,message:\"Internal error\"},[xn]:{code:-32e3,message:\"Server error\"}},ta=xn;function Qp(t){return Zp.includes(t)}function ra(t){return Object.keys($r).includes(t)?$r[t]:$r[ta]}function eg(t){const e=Object.values($r).find(r=>r.code===t);return e||$r[ta]}function ia(t,e,r){return t.message.includes(\"getaddrinfo ENOTFOUND\")||t.message.includes(\"connect ECONNREFUSED\")?new Error(`Unavailable ${r} RPC url at ${e}`):t}var na={};/*! *****************************************************************************\n\tCopyright (c) Microsoft Corporation.\n\n\tPermission to use, copy, modify, and/or distribute this software for any\n\tpurpose with or without fee is hereby granted.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n\tREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n\tAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n\tINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n\tLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n\tOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n\tPERFORMANCE OF THIS SOFTWARE.\n\t***************************************************************************** */var On=function(t,e){return On=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,i){r.__proto__=i}||function(r,i){for(var n in i)i.hasOwnProperty(n)&&(r[n]=i[n])},On(t,e)};function tg(t,e){On(t,e);function r(){this.constructor=t}t.prototype=e===null?Object.create(e):(r.prototype=e.prototype,new r)}var In=function(){return In=Object.assign||function(e){for(var r,i=1,n=arguments.length;i<n;i++){r=arguments[i];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},In.apply(this,arguments)};function rg(t,e){var r={};for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&e.indexOf(i)<0&&(r[i]=t[i]);if(t!=null&&typeof Object.getOwnPropertySymbols==\"function\")for(var n=0,i=Object.getOwnPropertySymbols(t);n<i.length;n++)e.indexOf(i[n])<0&&Object.prototype.propertyIsEnumerable.call(t,i[n])&&(r[i[n]]=t[i[n]]);return r}function ig(t,e,r,i){var n=arguments.length,s=n<3?e:i===null?i=Object.getOwnPropertyDescriptor(e,r):i,o;if(typeof Reflect==\"object\"&&typeof Reflect.decorate==\"function\")s=Reflect.decorate(t,e,r,i);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(s=(n<3?o(s):n>3?o(e,r,s):o(e,r))||s);return n>3&&s&&Object.defineProperty(e,r,s),s}function ng(t,e){return function(r,i){e(r,i,t)}}function sg(t,e){if(typeof Reflect==\"object\"&&typeof Reflect.metadata==\"function\")return Reflect.metadata(t,e)}function og(t,e,r,i){function n(s){return s instanceof r?s:new r(function(o){o(s)})}return new(r||(r=Promise))(function(s,o){function c(f){try{h(i.next(f))}catch(S){o(S)}}function l(f){try{h(i.throw(f))}catch(S){o(S)}}function h(f){f.done?s(f.value):n(f.value).then(c,l)}h((i=i.apply(t,e||[])).next())})}function ag(t,e){var r={label:0,sent:function(){if(s[0]&1)throw s[1];return s[1]},trys:[],ops:[]},i,n,s,o;return o={next:c(0),throw:c(1),return:c(2)},typeof Symbol==\"function\"&&(o[Symbol.iterator]=function(){return this}),o;function c(h){return function(f){return l([h,f])}}function l(h){if(i)throw new TypeError(\"Generator is already executing.\");for(;r;)try{if(i=1,n&&(s=h[0]&2?n.return:h[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,h[1])).done)return s;switch(n=0,s&&(h=[h[0]&2,s.value]),h[0]){case 0:case 1:s=h;break;case 4:return r.label++,{value:h[1],done:!1};case 5:r.label++,n=h[1],h=[0];continue;case 7:h=r.ops.pop(),r.trys.pop();continue;default:if(s=r.trys,!(s=s.length>0&&s[s.length-1])&&(h[0]===6||h[0]===2)){r=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){r.label=h[1];break}if(h[0]===6&&r.label<s[1]){r.label=s[1],s=h;break}if(s&&r.label<s[2]){r.label=s[2],r.ops.push(h);break}s[2]&&r.ops.pop(),r.trys.pop();continue}h=e.call(t,r)}catch(f){h=[6,f],n=0}finally{i=s=0}if(h[0]&5)throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}}function cg(t,e,r,i){i===void 0&&(i=r),t[i]=e[r]}function ug(t,e){for(var r in t)r!==\"default\"&&!e.hasOwnProperty(r)&&(e[r]=t[r])}function Pn(t){var e=typeof Symbol==\"function\"&&Symbol.iterator,r=e&&t[e],i=0;if(r)return r.call(t);if(t&&typeof t.length==\"number\")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")}function sa(t,e){var r=typeof Symbol==\"function\"&&t[Symbol.iterator];if(!r)return t;var i=r.call(t),n,s=[],o;try{for(;(e===void 0||e-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(c){o={error:c}}finally{try{n&&!n.done&&(r=i.return)&&r.call(i)}finally{if(o)throw o.error}}return s}function hg(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(sa(arguments[e]));return t}function lg(){for(var t=0,e=0,r=arguments.length;e<r;e++)t+=arguments[e].length;for(var i=Array(t),n=0,e=0;e<r;e++)for(var s=arguments[e],o=0,c=s.length;o<c;o++,n++)i[n]=s[o];return i}function Ur(t){return this instanceof Ur?(this.v=t,this):new Ur(t)}function fg(t,e,r){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var i=r.apply(t,e||[]),n,s=[];return n={},o(\"next\"),o(\"throw\"),o(\"return\"),n[Symbol.asyncIterator]=function(){return this},n;function o(w){i[w]&&(n[w]=function(v){return new Promise(function(m,R){s.push([w,v,m,R])>1||c(w,v)})})}function c(w,v){try{l(i[w](v))}catch(m){S(s[0][3],m)}}function l(w){w.value instanceof Ur?Promise.resolve(w.value.v).then(h,f):S(s[0][2],w)}function h(w){c(\"next\",w)}function f(w){c(\"throw\",w)}function S(w,v){w(v),s.shift(),s.length&&c(s[0][0],s[0][1])}}function dg(t){var e,r;return e={},i(\"next\"),i(\"throw\",function(n){throw n}),i(\"return\"),e[Symbol.iterator]=function(){return this},e;function i(n,s){e[n]=t[n]?function(o){return(r=!r)?{value:Ur(t[n](o)),done:n===\"return\"}:s?s(o):o}:s}}function pg(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e=t[Symbol.asyncIterator],r;return e?e.call(t):(t=typeof Pn==\"function\"?Pn(t):t[Symbol.iterator](),r={},i(\"next\"),i(\"throw\"),i(\"return\"),r[Symbol.asyncIterator]=function(){return this},r);function i(s){r[s]=t[s]&&function(o){return new Promise(function(c,l){o=t[s](o),n(c,l,o.done,o.value)})}}function n(s,o,c,l){Promise.resolve(l).then(function(h){s({value:h,done:c})},o)}}function gg(t,e){return Object.defineProperty?Object.defineProperty(t,\"raw\",{value:e}):t.raw=e,t}function yg(t){if(t&&t.__esModule)return t;var e={};if(t!=null)for(var r in t)Object.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e.default=t,e}function _g(t){return t&&t.__esModule?t:{default:t}}function bg(t,e){if(!e.has(t))throw new TypeError(\"attempted to get private field on non-instance\");return e.get(t)}function vg(t,e,r){if(!e.has(t))throw new TypeError(\"attempted to set private field on non-instance\");return e.set(t,r),r}var wg=Object.freeze({__proto__:null,__extends:tg,get __assign(){return In},__rest:rg,__decorate:ig,__param:ng,__metadata:sg,__awaiter:og,__generator:ag,__createBinding:cg,__exportStar:ug,__values:Pn,__read:sa,__spread:hg,__spreadArrays:lg,__await:Ur,__asyncGenerator:fg,__asyncDelegator:dg,__asyncValues:pg,__makeTemplateObject:gg,__importStar:yg,__importDefault:_g,__classPrivateFieldGet:bg,__classPrivateFieldSet:vg}),mg=Kt(wg),At={},oa;function Eg(){if(oa)return At;oa=1,Object.defineProperty(At,\"__esModule\",{value:!0}),At.isBrowserCryptoAvailable=At.getSubtleCrypto=At.getBrowerCrypto=void 0;function t(){return ze?.crypto||ze?.msCrypto||{}}At.getBrowerCrypto=t;function e(){const i=t();return i.subtle||i.webkitSubtle}At.getSubtleCrypto=e;function r(){return!!t()&&!!e()}return At.isBrowserCryptoAvailable=r,At}var Tt={},aa;function Dg(){if(aa)return Tt;aa=1,Object.defineProperty(Tt,\"__esModule\",{value:!0}),Tt.isBrowser=Tt.isNode=Tt.isReactNative=void 0;function t(){return typeof document>\"u\"&&typeof navigator<\"u\"&&navigator.product===\"ReactNative\"}Tt.isReactNative=t;function e(){return typeof process<\"u\"&&typeof process.versions<\"u\"&&typeof process.versions.node<\"u\"}Tt.isNode=e;function r(){return!t()&&!e()}return Tt.isBrowser=r,Tt}(function(t){Object.defineProperty(t,\"__esModule\",{value:!0});const e=mg;e.__exportStar(Eg(),t),e.__exportStar(Dg(),t)})(na);function Sg(){const t=Date.now()*Math.pow(10,3),e=Math.floor(Math.random()*Math.pow(10,3));return t+e}function hi(t,e,r){return{id:r||Sg(),jsonrpc:\"2.0\",method:t,params:e}}function An(t,e){return{id:t,jsonrpc:\"2.0\",result:e}}function li(t,e,r){return{id:t,jsonrpc:\"2.0\",error:xg(e,r)}}function xg(t,e){return typeof t>\"u\"?ra(ea):(typeof t==\"string\"&&(t=Object.assign(Object.assign({},ra(xn)),{message:t})),typeof e<\"u\"&&(t.data=e),Qp(t.code)&&(t=eg(t.code)),t)}class Og{}class Ig extends Og{constructor(){super()}}class Pg extends Ig{constructor(e){super()}}const Ag=\"^https?:\",Tg=\"^wss?:\";function Cg(t){const e=t.match(new RegExp(/^\\w+:/,\"gi\"));if(!(!e||!e.length))return e[0]}function ca(t,e){const r=Cg(t);return typeof r>\"u\"?!1:new RegExp(e).test(r)}function ua(t){return ca(t,Ag)}function ha(t){return ca(t,Tg)}function Ng(t){return new RegExp(\"wss?://localhost(:d{2,5})?\").test(t)}function la(t){return typeof t==\"object\"&&\"id\"in t&&\"jsonrpc\"in t&&t.jsonrpc===\"2.0\"}function Tn(t){return la(t)&&\"method\"in t}function Cn(t){return la(t)&&(Ct(t)||wt(t))}function Ct(t){return\"result\"in t}function wt(t){return\"error\"in t}class Mr extends Pg{constructor(e){super(e),this.events=new it.exports.EventEmitter,this.hasRegisteredEventListeners=!1,this.connection=this.setConnection(e),this.connection.connected&&this.registerEventListeners()}async connect(e=this.connection){await this.open(e)}async disconnect(){await this.close()}on(e,r){this.events.on(e,r)}once(e,r){this.events.once(e,r)}off(e,r){this.events.off(e,r)}removeListener(e,r){this.events.removeListener(e,r)}async request(e,r){return this.requestStrict(hi(e.method,e.params||[]),r)}async requestStrict(e,r){return new Promise(async(i,n)=>{if(!this.connection.connected)try{await this.open()}catch(s){n(s)}this.events.on(`${e.id}`,s=>{wt(s)?n(s.error):i(s.result)});try{await this.connection.send(e,r)}catch(s){n(s)}})}setConnection(e=this.connection){return e}onPayload(e){this.events.emit(\"payload\",e),Cn(e)?this.events.emit(`${e.id}`,e):this.events.emit(\"message\",{type:e.method,data:e.params})}async open(e=this.connection){this.connection===e&&this.connection.connected||(this.connection.connected&&this.close(),typeof e==\"string\"&&(await this.connection.open(e),e=this.connection),this.connection=this.setConnection(e),await this.connection.open(),this.registerEventListeners(),this.events.emit(\"connect\"))}async close(){await this.connection.close()}registerEventListeners(){this.hasRegisteredEventListeners||(this.connection.on(\"payload\",e=>this.onPayload(e)),this.connection.on(\"close\",()=>this.events.emit(\"disconnect\")),this.connection.on(\"error\",e=>this.events.emit(\"error\",e)),this.hasRegisteredEventListeners=!0)}}const fa=10,Rg=()=>typeof __webpack_require__.g<\"u\"&&typeof __webpack_require__.g.WebSocket<\"u\"?__webpack_require__.g.WebSocket:typeof window<\"u\"&&typeof window.WebSocket<\"u\"?window.WebSocket:__webpack_require__(7026),Fg=()=>typeof window<\"u\",Lg=Rg();class $g{constructor(e){if(this.url=e,this.events=new it.exports.EventEmitter,this.registering=!1,!ha(e))throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);this.url=e}get connected(){return typeof this.socket<\"u\"}get connecting(){return this.registering}on(e,r){this.events.on(e,r)}once(e,r){this.events.once(e,r)}off(e,r){this.events.off(e,r)}removeListener(e,r){this.events.removeListener(e,r)}async open(e=this.url){await this.register(e)}async close(){return new Promise((e,r)=>{if(typeof this.socket>\"u\"){r(new Error(\"Connection already closed\"));return}this.socket.onclose=()=>{this.onClose(),e()},this.socket.close()})}async send(e,r){typeof this.socket>\"u\"&&(this.socket=await this.register());try{this.socket.send(Ir(e))}catch(i){this.onError(e.id,i)}}register(e=this.url){if(!ha(e))throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);if(this.registering){const r=this.events.getMaxListeners();return(this.events.listenerCount(\"register_error\")>=r||this.events.listenerCount(\"open\")>=r)&&this.events.setMaxListeners(r+1),new Promise((i,n)=>{this.events.once(\"register_error\",s=>{this.resetMaxListeners(),n(s)}),this.events.once(\"open\",()=>{if(this.resetMaxListeners(),typeof this.socket>\"u\")return n(new Error(\"WebSocket connection is missing or invalid\"));i(this.socket)})})}return this.url=e,this.registering=!0,new Promise((r,i)=>{const n=na.isReactNative()?void 0:{rejectUnauthorized:!Ng(e)},s=new Lg(e,[],n);Fg()?s.onerror=o=>{const c=o;i(this.emitError(c.error))}:s.on(\"error\",o=>{i(this.emitError(o))}),s.onopen=()=>{this.onOpen(s),r(s)}})}onOpen(e){e.onmessage=r=>this.onPayload(r),e.onclose=()=>this.onClose(),this.socket=e,this.registering=!1,this.events.emit(\"open\")}onClose(){this.socket=void 0,this.registering=!1,this.events.emit(\"close\")}onPayload(e){if(typeof e.data>\"u\")return;const r=typeof e.data==\"string\"?Yi(e.data):e.data;this.events.emit(\"payload\",r)}onError(e,r){const i=this.parseError(r),n=i.message||i.toString(),s=li(e,n);this.events.emit(\"payload\",s)}parseError(e,r=this.url){return ia(e,r,\"WS\")}resetMaxListeners(){this.events.getMaxListeners()>fa&&this.events.setMaxListeners(fa)}emitError(e){const r=this.parseError(new Error(e?.message||`WebSocket connection failed for URL: ${this.url}`));return this.events.emit(\"register_error\",r),r}}var Nn={exports:{}};(function(t,e){var r=200,i=\"__lodash_hash_undefined__\",n=1,s=2,o=9007199254740991,c=\"[object Arguments]\",l=\"[object Array]\",h=\"[object AsyncFunction]\",f=\"[object Boolean]\",S=\"[object Date]\",w=\"[object Error]\",v=\"[object Function]\",m=\"[object GeneratorFunction]\",R=\"[object Map]\",F=\"[object Number]\",H=\"[object Null]\",x=\"[object Object]\",P=\"[object Promise]\",y=\"[object Proxy]\",D=\"[object RegExp]\",E=\"[object Set]\",a=\"[object String]\",d=\"[object Symbol]\",M=\"[object Undefined]\",q=\"[object WeakMap]\",G=\"[object ArrayBuffer]\",J=\"[object DataView]\",X=\"[object Float32Array]\",g=\"[object Float64Array]\",_=\"[object Int8Array]\",$=\"[object Int16Array]\",U=\"[object Int32Array]\",N=\"[object Uint8Array]\",C=\"[object Uint8ClampedArray]\",j=\"[object Uint16Array]\",B=\"[object Uint32Array]\",Q=/[\\\\^$.*+?()[\\]{}|]/g,z=/^\\[object .+?Constructor\\]$/,ee=/^(?:0|[1-9]\\d*)$/,Y={};Y[X]=Y[g]=Y[_]=Y[$]=Y[U]=Y[N]=Y[C]=Y[j]=Y[B]=!0,Y[c]=Y[l]=Y[G]=Y[f]=Y[J]=Y[S]=Y[w]=Y[v]=Y[R]=Y[F]=Y[x]=Y[D]=Y[E]=Y[a]=Y[q]=!1;var ae=typeof ze==\"object\"&&ze&&ze.Object===Object&&ze,T=typeof self==\"object\"&&self&&self.Object===Object&&self,A=ae||T||Function(\"return this\")(),O=e&&!e.nodeType&&e,u=O&&!0&&t&&!t.nodeType&&t,b=u&&u.exports===O,K=b&&ae.process,k=function(){try{return K&&K.binding&&K.binding(\"util\")}catch{}}(),le=k&&k.isTypedArray;function _e(p,I){for(var L=-1,W=p==null?0:p.length,Ie=0,ne=[];++L<W;){var Re=p[L];I(Re,L,p)&&(ne[Ie++]=Re)}return ne}function de(p,I){for(var L=-1,W=I.length,Ie=p.length;++L<W;)p[Ie+L]=I[L];return p}function we(p,I){for(var L=-1,W=p==null?0:p.length;++L<W;)if(I(p[L],L,p))return!0;return!1}function Le(p,I){for(var L=-1,W=Array(p);++L<p;)W[L]=I(L);return W}function Te(p){return function(I){return p(I)}}function ye(p,I){return p.has(I)}function pe(p,I){return p?.[I]}function fe(p){var I=-1,L=Array(p.size);return p.forEach(function(W,Ie){L[++I]=[Ie,W]}),L}function ue(p,I){return function(L){return p(I(L))}}function ce(p){var I=-1,L=Array(p.size);return p.forEach(function(W){L[++I]=W}),L}var oe=Array.prototype,se=Function.prototype,te=Object.prototype,he=A[\"__core-js_shared__\"],ge=se.toString,ie=te.hasOwnProperty,be=function(){var p=/[^.]+$/.exec(he&&he.keys&&he.keys.IE_PROTO||\"\");return p?\"Symbol(src)_1.\"+p:\"\"}(),ve=te.toString,Ee=RegExp(\"^\"+ge.call(ie).replace(Q,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),De=b?A.Buffer:void 0,me=A.Symbol,mt=A.Uint8Array,Pt=te.propertyIsEnumerable,jt=oe.splice,pt=me?me.toStringTag:void 0,Qt=Object.getOwnPropertySymbols,zr=De?De.isBuffer:void 0,mi=ue(Object.keys,Object),Ue=hr(A,\"DataView\"),Ce=hr(A,\"Map\"),Me=hr(A,\"Promise\"),je=hr(A,\"Set\"),Be=hr(A,\"WeakMap\"),Ne=hr(Object,\"create\"),Ve=tr(Ue),Ge=tr(Ce),ke=tr(Me),We=tr(je),Ye=tr(Be),qe=me?me.prototype:void 0,He=qe?qe.valueOf:void 0;function Pe(p){var I=-1,L=p==null?0:p.length;for(this.clear();++I<L;){var W=p[I];this.set(W[0],W[1])}}function Je(){this.__data__=Ne?Ne(null):{},this.size=0}function Xe(p){var I=this.has(p)&&delete this.__data__[p];return this.size-=I?1:0,I}function $_(p){var I=this.__data__;if(Ne){var L=I[p];return L===i?void 0:L}return ie.call(I,p)?I[p]:void 0}function U_(p){var I=this.__data__;return Ne?I[p]!==void 0:ie.call(I,p)}function M_(p,I){var L=this.__data__;return this.size+=this.has(p)?0:1,L[p]=Ne&&I===void 0?i:I,this}Pe.prototype.clear=Je,Pe.prototype.delete=Xe,Pe.prototype.get=$_,Pe.prototype.has=U_,Pe.prototype.set=M_;function Nt(p){var I=-1,L=p==null?0:p.length;for(this.clear();++I<L;){var W=p[I];this.set(W[0],W[1])}}function j_(){this.__data__=[],this.size=0}function B_(p){var I=this.__data__,L=Di(I,p);if(L<0)return!1;var W=I.length-1;return L==W?I.pop():jt.call(I,L,1),--this.size,!0}function H_(p){var I=this.__data__,L=Di(I,p);return L<0?void 0:I[L][1]}function q_(p){return Di(this.__data__,p)>-1}function z_(p,I){var L=this.__data__,W=Di(L,p);return W<0?(++this.size,L.push([p,I])):L[W][1]=I,this}Nt.prototype.clear=j_,Nt.prototype.delete=B_,Nt.prototype.get=H_,Nt.prototype.has=q_,Nt.prototype.set=z_;function er(p){var I=-1,L=p==null?0:p.length;for(this.clear();++I<L;){var W=p[I];this.set(W[0],W[1])}}function K_(){this.size=0,this.__data__={hash:new Pe,map:new(Ce||Nt),string:new Pe}}function V_(p){var I=Si(this,p).delete(p);return this.size-=I?1:0,I}function G_(p){return Si(this,p).get(p)}function k_(p){return Si(this,p).has(p)}function W_(p,I){var L=Si(this,p),W=L.size;return L.set(p,I),this.size+=L.size==W?0:1,this}er.prototype.clear=K_,er.prototype.delete=V_,er.prototype.get=G_,er.prototype.has=k_,er.prototype.set=W_;function Ei(p){var I=-1,L=p==null?0:p.length;for(this.__data__=new er;++I<L;)this.add(p[I])}function Y_(p){return this.__data__.set(p,i),this}function J_(p){return this.__data__.has(p)}Ei.prototype.add=Ei.prototype.push=Y_,Ei.prototype.has=J_;function Bt(p){var I=this.__data__=new Nt(p);this.size=I.size}function X_(){this.__data__=new Nt,this.size=0}function Z_(p){var I=this.__data__,L=I.delete(p);return this.size=I.size,L}function Q_(p){return this.__data__.get(p)}function e1(p){return this.__data__.has(p)}function t1(p,I){var L=this.__data__;if(L instanceof Nt){var W=L.__data__;if(!Ce||W.length<r-1)return W.push([p,I]),this.size=++L.size,this;L=this.__data__=new er(W)}return L.set(p,I),this.size=L.size,this}Bt.prototype.clear=X_,Bt.prototype.delete=Z_,Bt.prototype.get=Q_,Bt.prototype.has=e1,Bt.prototype.set=t1;function r1(p,I){var L=xi(p),W=!L&&_1(p),Ie=!L&&!W&&kn(p),ne=!L&&!W&&!Ie&&fc(p),Re=L||W||Ie||ne,Ze=Re?Le(p.length,String):[],rt=Ze.length;for(var Ae in p)(I||ie.call(p,Ae))&&!(Re&&(Ae==\"length\"||Ie&&(Ae==\"offset\"||Ae==\"parent\")||ne&&(Ae==\"buffer\"||Ae==\"byteLength\"||Ae==\"byteOffset\")||f1(Ae,rt)))&&Ze.push(Ae);return Ze}function Di(p,I){for(var L=p.length;L--;)if(cc(p[L][0],I))return L;return-1}function i1(p,I,L){var W=I(p);return xi(p)?W:de(W,L(p))}function Kr(p){return p==null?p===void 0?M:H:pt&&pt in Object(p)?h1(p):y1(p)}function nc(p){return Vr(p)&&Kr(p)==c}function sc(p,I,L,W,Ie){return p===I?!0:p==null||I==null||!Vr(p)&&!Vr(I)?p!==p&&I!==I:n1(p,I,L,W,sc,Ie)}function n1(p,I,L,W,Ie,ne){var Re=xi(p),Ze=xi(I),rt=Re?l:Ht(p),Ae=Ze?l:Ht(I);rt=rt==c?x:rt,Ae=Ae==c?x:Ae;var gt=rt==x,Et=Ae==x,st=rt==Ae;if(st&&kn(p)){if(!kn(I))return!1;Re=!0,gt=!1}if(st&&!gt)return ne||(ne=new Bt),Re||fc(p)?oc(p,I,L,W,Ie,ne):c1(p,I,rt,L,W,Ie,ne);if(!(L&n)){var bt=gt&&ie.call(p,\"__wrapped__\"),vt=Et&&ie.call(I,\"__wrapped__\");if(bt||vt){var qt=bt?p.value():p,Rt=vt?I.value():I;return ne||(ne=new Bt),Ie(qt,Rt,L,W,ne)}}return st?(ne||(ne=new Bt),u1(p,I,L,W,Ie,ne)):!1}function s1(p){if(!lc(p)||p1(p))return!1;var I=uc(p)?Ee:z;return I.test(tr(p))}function o1(p){return Vr(p)&&hc(p.length)&&!!Y[Kr(p)]}function a1(p){if(!g1(p))return mi(p);var I=[];for(var L in Object(p))ie.call(p,L)&&L!=\"constructor\"&&I.push(L);return I}function oc(p,I,L,W,Ie,ne){var Re=L&n,Ze=p.length,rt=I.length;if(Ze!=rt&&!(Re&&rt>Ze))return!1;var Ae=ne.get(p);if(Ae&&ne.get(I))return Ae==I;var gt=-1,Et=!0,st=L&s?new Ei:void 0;for(ne.set(p,I),ne.set(I,p);++gt<Ze;){var bt=p[gt],vt=I[gt];if(W)var qt=Re?W(vt,bt,gt,I,p,ne):W(bt,vt,gt,p,I,ne);if(qt!==void 0){if(qt)continue;Et=!1;break}if(st){if(!we(I,function(Rt,rr){if(!ye(st,rr)&&(bt===Rt||Ie(bt,Rt,L,W,ne)))return st.push(rr)})){Et=!1;break}}else if(!(bt===vt||Ie(bt,vt,L,W,ne))){Et=!1;break}}return ne.delete(p),ne.delete(I),Et}function c1(p,I,L,W,Ie,ne,Re){switch(L){case J:if(p.byteLength!=I.byteLength||p.byteOffset!=I.byteOffset)return!1;p=p.buffer,I=I.buffer;case G:return!(p.byteLength!=I.byteLength||!ne(new mt(p),new mt(I)));case f:case S:case F:return cc(+p,+I);case w:return p.name==I.name&&p.message==I.message;case D:case a:return p==I+\"\";case R:var Ze=fe;case E:var rt=W&n;if(Ze||(Ze=ce),p.size!=I.size&&!rt)return!1;var Ae=Re.get(p);if(Ae)return Ae==I;W|=s,Re.set(p,I);var gt=oc(Ze(p),Ze(I),W,Ie,ne,Re);return Re.delete(p),gt;case d:if(He)return He.call(p)==He.call(I)}return!1}function u1(p,I,L,W,Ie,ne){var Re=L&n,Ze=ac(p),rt=Ze.length,Ae=ac(I),gt=Ae.length;if(rt!=gt&&!Re)return!1;for(var Et=rt;Et--;){var st=Ze[Et];if(!(Re?st in I:ie.call(I,st)))return!1}var bt=ne.get(p);if(bt&&ne.get(I))return bt==I;var vt=!0;ne.set(p,I),ne.set(I,p);for(var qt=Re;++Et<rt;){st=Ze[Et];var Rt=p[st],rr=I[st];if(W)var dc=Re?W(rr,Rt,st,I,p,ne):W(Rt,rr,st,p,I,ne);if(!(dc===void 0?Rt===rr||Ie(Rt,rr,L,W,ne):dc)){vt=!1;break}qt||(qt=st==\"constructor\")}if(vt&&!qt){var Oi=p.constructor,Ii=I.constructor;Oi!=Ii&&\"constructor\"in p&&\"constructor\"in I&&!(typeof Oi==\"function\"&&Oi instanceof Oi&&typeof Ii==\"function\"&&Ii instanceof Ii)&&(vt=!1)}return ne.delete(p),ne.delete(I),vt}function ac(p){return i1(p,w1,l1)}function Si(p,I){var L=p.__data__;return d1(I)?L[typeof I==\"string\"?\"string\":\"hash\"]:L.map}function hr(p,I){var L=pe(p,I);return s1(L)?L:void 0}function h1(p){var I=ie.call(p,pt),L=p[pt];try{p[pt]=void 0;var W=!0}catch{}var Ie=ve.call(p);return W&&(I?p[pt]=L:delete p[pt]),Ie}var l1=Qt?function(p){return p==null?[]:(p=Object(p),_e(Qt(p),function(I){return Pt.call(p,I)}))}:m1,Ht=Kr;(Ue&&Ht(new Ue(new ArrayBuffer(1)))!=J||Ce&&Ht(new Ce)!=R||Me&&Ht(Me.resolve())!=P||je&&Ht(new je)!=E||Be&&Ht(new Be)!=q)&&(Ht=function(p){var I=Kr(p),L=I==x?p.constructor:void 0,W=L?tr(L):\"\";if(W)switch(W){case Ve:return J;case Ge:return R;case ke:return P;case We:return E;case Ye:return q}return I});function f1(p,I){return I=I??o,!!I&&(typeof p==\"number\"||ee.test(p))&&p>-1&&p%1==0&&p<I}function d1(p){var I=typeof p;return I==\"string\"||I==\"number\"||I==\"symbol\"||I==\"boolean\"?p!==\"__proto__\":p===null}function p1(p){return!!be&&be in p}function g1(p){var I=p&&p.constructor,L=typeof I==\"function\"&&I.prototype||te;return p===L}function y1(p){return ve.call(p)}function tr(p){if(p!=null){try{return ge.call(p)}catch{}try{return p+\"\"}catch{}}return\"\"}function cc(p,I){return p===I||p!==p&&I!==I}var _1=nc(function(){return arguments}())?nc:function(p){return Vr(p)&&ie.call(p,\"callee\")&&!Pt.call(p,\"callee\")},xi=Array.isArray;function b1(p){return p!=null&&hc(p.length)&&!uc(p)}var kn=zr||E1;function v1(p,I){return sc(p,I)}function uc(p){if(!lc(p))return!1;var I=Kr(p);return I==v||I==m||I==h||I==y}function hc(p){return typeof p==\"number\"&&p>-1&&p%1==0&&p<=o}function lc(p){var I=typeof p;return p!=null&&(I==\"object\"||I==\"function\")}function Vr(p){return p!=null&&typeof p==\"object\"}var fc=le?Te(le):o1;function w1(p){return b1(p)?r1(p):a1(p)}function m1(){return[]}function E1(){return!1}t.exports=v1})(Nn,Nn.exports);var Ug=Nn.exports,Mg=Object.defineProperty,da=Object.getOwnPropertySymbols,jg=Object.prototype.hasOwnProperty,Bg=Object.prototype.propertyIsEnumerable,pa=(t,e,r)=>e in t?Mg(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,ct=(t,e)=>{for(var r in e||(e={}))jg.call(e,r)&&pa(t,r,e[r]);if(da)for(var r of da(e))Bg.call(e,r)&&pa(t,r,e[r]);return t};function Hg(t,e){if(t.length>=255)throw new TypeError(\"Alphabet too long\");for(var r=new Uint8Array(256),i=0;i<r.length;i++)r[i]=255;for(var n=0;n<t.length;n++){var s=t.charAt(n),o=s.charCodeAt(0);if(r[o]!==255)throw new TypeError(s+\" is ambiguous\");r[o]=n}var c=t.length,l=t.charAt(0),h=Math.log(c)/Math.log(256),f=Math.log(256)/Math.log(c);function S(m){if(m instanceof Uint8Array||(ArrayBuffer.isView(m)?m=new Uint8Array(m.buffer,m.byteOffset,m.byteLength):Array.isArray(m)&&(m=Uint8Array.from(m))),!(m instanceof Uint8Array))throw new TypeError(\"Expected Uint8Array\");if(m.length===0)return\"\";for(var R=0,F=0,H=0,x=m.length;H!==x&&m[H]===0;)H++,R++;for(var P=(x-H)*f+1>>>0,y=new Uint8Array(P);H!==x;){for(var D=m[H],E=0,a=P-1;(D!==0||E<F)&&a!==-1;a--,E++)D+=256*y[a]>>>0,y[a]=D%c>>>0,D=D/c>>>0;if(D!==0)throw new Error(\"Non-zero carry\");F=E,H++}for(var d=P-F;d!==P&&y[d]===0;)d++;for(var M=l.repeat(R);d<P;++d)M+=t.charAt(y[d]);return M}function w(m){if(typeof m!=\"string\")throw new TypeError(\"Expected String\");if(m.length===0)return new Uint8Array;var R=0;if(m[R]!==\" \"){for(var F=0,H=0;m[R]===l;)F++,R++;for(var x=(m.length-R)*h+1>>>0,P=new Uint8Array(x);m[R];){var y=r[m.charCodeAt(R)];if(y===255)return;for(var D=0,E=x-1;(y!==0||D<H)&&E!==-1;E--,D++)y+=c*P[E]>>>0,P[E]=y%256>>>0,y=y/256>>>0;if(y!==0)throw new Error(\"Non-zero carry\");H=D,R++}if(m[R]!==\" \"){for(var a=x-H;a!==x&&P[a]===0;)a++;for(var d=new Uint8Array(F+(x-a)),M=F;a!==x;)d[M++]=P[a++];return d}}}function v(m){var R=w(m);if(R)return R;throw new Error(`Non-${e} character`)}return{encode:S,decodeUnsafe:w,decode:v}}var qg=Hg,zg=qg;const ga=t=>{if(t instanceof Uint8Array&&t.constructor.name===\"Uint8Array\")return t;if(t instanceof ArrayBuffer)return new Uint8Array(t);if(ArrayBuffer.isView(t))return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw new Error(\"Unknown type, must be binary type\")},Kg=t=>new TextEncoder().encode(t),Vg=t=>new TextDecoder().decode(t);class Gg{constructor(e,r,i){this.name=e,this.prefix=r,this.baseEncode=i}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error(\"Unknown type, must be binary type\")}}class kg{constructor(e,r,i){if(this.name=e,this.prefix=r,r.codePointAt(0)===void 0)throw new Error(\"Invalid prefix character\");this.prefixCodePoint=r.codePointAt(0),this.baseDecode=i}decode(e){if(typeof e==\"string\"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error(\"Can only multibase decode strings\")}or(e){return ya(this,e)}}class Wg{constructor(e){this.decoders=e}or(e){return ya(this,e)}decode(e){const r=e[0],i=this.decoders[r];if(i)return i.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}}const ya=(t,e)=>new Wg(ct(ct({},t.decoders||{[t.prefix]:t}),e.decoders||{[e.prefix]:e}));class Yg{constructor(e,r,i,n){this.name=e,this.prefix=r,this.baseEncode=i,this.baseDecode=n,this.encoder=new Gg(e,r,i),this.decoder=new kg(e,r,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}}const fi=({name:t,prefix:e,encode:r,decode:i})=>new Yg(t,e,r,i),jr=({prefix:t,name:e,alphabet:r})=>{const{encode:i,decode:n}=zg(r,e);return fi({prefix:t,name:e,encode:i,decode:s=>ga(n(s))})},Jg=(t,e,r,i)=>{const n={};for(let f=0;f<e.length;++f)n[e[f]]=f;let s=t.length;for(;t[s-1]===\"=\";)--s;const o=new Uint8Array(s*r/8|0);let c=0,l=0,h=0;for(let f=0;f<s;++f){const S=n[t[f]];if(S===void 0)throw new SyntaxError(`Non-${i} character`);l=l<<r|S,c+=r,c>=8&&(c-=8,o[h++]=255&l>>c)}if(c>=r||255&l<<8-c)throw new SyntaxError(\"Unexpected end of data\");return o},Xg=(t,e,r)=>{const i=e[e.length-1]===\"=\",n=(1<<r)-1;let s=\"\",o=0,c=0;for(let l=0;l<t.length;++l)for(c=c<<8|t[l],o+=8;o>r;)o-=r,s+=e[n&c>>o];if(o&&(s+=e[n&c<<r-o]),i)for(;s.length*r&7;)s+=\"=\";return s},et=({name:t,prefix:e,bitsPerChar:r,alphabet:i})=>fi({prefix:e,name:t,encode(n){return Xg(n,i,r)},decode(n){return Jg(n,i,r,t)}}),Zg=fi({prefix:\"\\0\",name:\"identity\",encode:t=>Vg(t),decode:t=>Kg(t)});var Qg=Object.freeze({__proto__:null,identity:Zg});const ey=et({prefix:\"0\",name:\"base2\",alphabet:\"01\",bitsPerChar:1});var ty=Object.freeze({__proto__:null,base2:ey});const ry=et({prefix:\"7\",name:\"base8\",alphabet:\"01234567\",bitsPerChar:3});var iy=Object.freeze({__proto__:null,base8:ry});const ny=jr({prefix:\"9\",name:\"base10\",alphabet:\"0123456789\"});var sy=Object.freeze({__proto__:null,base10:ny});const oy=et({prefix:\"f\",name:\"base16\",alphabet:\"0123456789abcdef\",bitsPerChar:4}),ay=et({prefix:\"F\",name:\"base16upper\",alphabet:\"0123456789ABCDEF\",bitsPerChar:4});var cy=Object.freeze({__proto__:null,base16:oy,base16upper:ay});const uy=et({prefix:\"b\",name:\"base32\",alphabet:\"abcdefghijklmnopqrstuvwxyz234567\",bitsPerChar:5}),hy=et({prefix:\"B\",name:\"base32upper\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",bitsPerChar:5}),ly=et({prefix:\"c\",name:\"base32pad\",alphabet:\"abcdefghijklmnopqrstuvwxyz234567=\",bitsPerChar:5}),fy=et({prefix:\"C\",name:\"base32padupper\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",bitsPerChar:5}),dy=et({prefix:\"v\",name:\"base32hex\",alphabet:\"0123456789abcdefghijklmnopqrstuv\",bitsPerChar:5}),py=et({prefix:\"V\",name:\"base32hexupper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",bitsPerChar:5}),gy=et({prefix:\"t\",name:\"base32hexpad\",alphabet:\"0123456789abcdefghijklmnopqrstuv=\",bitsPerChar:5}),yy=et({prefix:\"T\",name:\"base32hexpadupper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",bitsPerChar:5}),_y=et({prefix:\"h\",name:\"base32z\",alphabet:\"ybndrfg8ejkmcpqxot1uwisza345h769\",bitsPerChar:5});var by=Object.freeze({__proto__:null,base32:uy,base32upper:hy,base32pad:ly,base32padupper:fy,base32hex:dy,base32hexupper:py,base32hexpad:gy,base32hexpadupper:yy,base32z:_y});const vy=jr({prefix:\"k\",name:\"base36\",alphabet:\"0123456789abcdefghijklmnopqrstuvwxyz\"}),wy=jr({prefix:\"K\",name:\"base36upper\",alphabet:\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"});var my=Object.freeze({__proto__:null,base36:vy,base36upper:wy});const Ey=jr({name:\"base58btc\",prefix:\"z\",alphabet:\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"}),Dy=jr({name:\"base58flickr\",prefix:\"Z\",alphabet:\"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"});var Sy=Object.freeze({__proto__:null,base58btc:Ey,base58flickr:Dy});const xy=et({prefix:\"m\",name:\"base64\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",bitsPerChar:6}),Oy=et({prefix:\"M\",name:\"base64pad\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",bitsPerChar:6}),Iy=et({prefix:\"u\",name:\"base64url\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",bitsPerChar:6}),Py=et({prefix:\"U\",name:\"base64urlpad\",alphabet:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",bitsPerChar:6});var Ay=Object.freeze({__proto__:null,base64:xy,base64pad:Oy,base64url:Iy,base64urlpad:Py});const _a=Array.from(\"\\u{1F680}\\u{1FA90}\\u2604\\u{1F6F0}\\u{1F30C}\\u{1F311}\\u{1F312}\\u{1F313}\\u{1F314}\\u{1F315}\\u{1F316}\\u{1F317}\\u{1F318}\\u{1F30D}\\u{1F30F}\\u{1F30E}\\u{1F409}\\u2600\\u{1F4BB}\\u{1F5A5}\\u{1F4BE}\\u{1F4BF}\\u{1F602}\\u2764\\u{1F60D}\\u{1F923}\\u{1F60A}\\u{1F64F}\\u{1F495}\\u{1F62D}\\u{1F618}\\u{1F44D}\\u{1F605}\\u{1F44F}\\u{1F601}\\u{1F525}\\u{1F970}\\u{1F494}\\u{1F496}\\u{1F499}\\u{1F622}\\u{1F914}\\u{1F606}\\u{1F644}\\u{1F4AA}\\u{1F609}\\u263A\\u{1F44C}\\u{1F917}\\u{1F49C}\\u{1F614}\\u{1F60E}\\u{1F607}\\u{1F339}\\u{1F926}\\u{1F389}\\u{1F49E}\\u270C\\u2728\\u{1F937}\\u{1F631}\\u{1F60C}\\u{1F338}\\u{1F64C}\\u{1F60B}\\u{1F497}\\u{1F49A}\\u{1F60F}\\u{1F49B}\\u{1F642}\\u{1F493}\\u{1F929}\\u{1F604}\\u{1F600}\\u{1F5A4}\\u{1F603}\\u{1F4AF}\\u{1F648}\\u{1F447}\\u{1F3B6}\\u{1F612}\\u{1F92D}\\u2763\\u{1F61C}\\u{1F48B}\\u{1F440}\\u{1F62A}\\u{1F611}\\u{1F4A5}\\u{1F64B}\\u{1F61E}\\u{1F629}\\u{1F621}\\u{1F92A}\\u{1F44A}\\u{1F973}\\u{1F625}\\u{1F924}\\u{1F449}\\u{1F483}\\u{1F633}\\u270B\\u{1F61A}\\u{1F61D}\\u{1F634}\\u{1F31F}\\u{1F62C}\\u{1F643}\\u{1F340}\\u{1F337}\\u{1F63B}\\u{1F613}\\u2B50\\u2705\\u{1F97A}\\u{1F308}\\u{1F608}\\u{1F918}\\u{1F4A6}\\u2714\\u{1F623}\\u{1F3C3}\\u{1F490}\\u2639\\u{1F38A}\\u{1F498}\\u{1F620}\\u261D\\u{1F615}\\u{1F33A}\\u{1F382}\\u{1F33B}\\u{1F610}\\u{1F595}\\u{1F49D}\\u{1F64A}\\u{1F639}\\u{1F5E3}\\u{1F4AB}\\u{1F480}\\u{1F451}\\u{1F3B5}\\u{1F91E}\\u{1F61B}\\u{1F534}\\u{1F624}\\u{1F33C}\\u{1F62B}\\u26BD\\u{1F919}\\u2615\\u{1F3C6}\\u{1F92B}\\u{1F448}\\u{1F62E}\\u{1F646}\\u{1F37B}\\u{1F343}\\u{1F436}\\u{1F481}\\u{1F632}\\u{1F33F}\\u{1F9E1}\\u{1F381}\\u26A1\\u{1F31E}\\u{1F388}\\u274C\\u270A\\u{1F44B}\\u{1F630}\\u{1F928}\\u{1F636}\\u{1F91D}\\u{1F6B6}\\u{1F4B0}\\u{1F353}\\u{1F4A2}\\u{1F91F}\\u{1F641}\\u{1F6A8}\\u{1F4A8}\\u{1F92C}\\u2708\\u{1F380}\\u{1F37A}\\u{1F913}\\u{1F619}\\u{1F49F}\\u{1F331}\\u{1F616}\\u{1F476}\\u{1F974}\\u25B6\\u27A1\\u2753\\u{1F48E}\\u{1F4B8}\\u2B07\\u{1F628}\\u{1F31A}\\u{1F98B}\\u{1F637}\\u{1F57A}\\u26A0\\u{1F645}\\u{1F61F}\\u{1F635}\\u{1F44E}\\u{1F932}\\u{1F920}\\u{1F927}\\u{1F4CC}\\u{1F535}\\u{1F485}\\u{1F9D0}\\u{1F43E}\\u{1F352}\\u{1F617}\\u{1F911}\\u{1F30A}\\u{1F92F}\\u{1F437}\\u260E\\u{1F4A7}\\u{1F62F}\\u{1F486}\\u{1F446}\\u{1F3A4}\\u{1F647}\\u{1F351}\\u2744\\u{1F334}\\u{1F4A3}\\u{1F438}\\u{1F48C}\\u{1F4CD}\\u{1F940}\\u{1F922}\\u{1F445}\\u{1F4A1}\\u{1F4A9}\\u{1F450}\\u{1F4F8}\\u{1F47B}\\u{1F910}\\u{1F92E}\\u{1F3BC}\\u{1F975}\\u{1F6A9}\\u{1F34E}\\u{1F34A}\\u{1F47C}\\u{1F48D}\\u{1F4E3}\\u{1F942}\"),Ty=_a.reduce((t,e,r)=>(t[r]=e,t),[]),Cy=_a.reduce((t,e,r)=>(t[e.codePointAt(0)]=r,t),[]);function Ny(t){return t.reduce((e,r)=>(e+=Ty[r],e),\"\")}function Ry(t){const e=[];for(const r of t){const i=Cy[r.codePointAt(0)];if(i===void 0)throw new Error(`Non-base256emoji character: ${r}`);e.push(i)}return new Uint8Array(e)}const Fy=fi({prefix:\"\\u{1F680}\",name:\"base256emoji\",encode:Ny,decode:Ry});var Ly=Object.freeze({__proto__:null,base256emoji:Fy}),$y=va,ba=128,Uy=127,My=~Uy,jy=Math.pow(2,31);function va(t,e,r){e=e||[],r=r||0;for(var i=r;t>=jy;)e[r++]=t&255|ba,t/=128;for(;t&My;)e[r++]=t&255|ba,t>>>=7;return e[r]=t|0,va.bytes=r-i+1,e}var By=Rn,Hy=128,wa=127;function Rn(t,i){var r=0,i=i||0,n=0,s=i,o,c=t.length;do{if(s>=c)throw Rn.bytes=0,new RangeError(\"Could not decode varint\");o=t[s++],r+=n<28?(o&wa)<<n:(o&wa)*Math.pow(2,n),n+=7}while(o>=Hy);return Rn.bytes=s-i,r}var qy=Math.pow(2,7),zy=Math.pow(2,14),Ky=Math.pow(2,21),Vy=Math.pow(2,28),Gy=Math.pow(2,35),ky=Math.pow(2,42),Wy=Math.pow(2,49),Yy=Math.pow(2,56),Jy=Math.pow(2,63),Xy=function(t){return t<qy?1:t<zy?2:t<Ky?3:t<Vy?4:t<Gy?5:t<ky?6:t<Wy?7:t<Yy?8:t<Jy?9:10},Zy={encode:$y,decode:By,encodingLength:Xy},ma=Zy;const Ea=(t,e,r=0)=>(ma.encode(t,e,r),e),Da=t=>ma.encodingLength(t),Fn=(t,e)=>{const r=e.byteLength,i=Da(t),n=i+Da(r),s=new Uint8Array(n+r);return Ea(t,s,0),Ea(r,s,i),s.set(e,n),new Qy(t,r,e,s)};class Qy{constructor(e,r,i,n){this.code=e,this.size=r,this.digest=i,this.bytes=n}}const Sa=({name:t,code:e,encode:r})=>new e0(t,e,r);class e0{constructor(e,r,i){this.name=e,this.code=r,this.encode=i}digest(e){if(e instanceof Uint8Array){const r=this.encode(e);return r instanceof Uint8Array?Fn(this.code,r):r.then(i=>Fn(this.code,i))}else throw Error(\"Unknown type, must be binary type\")}}const xa=t=>async e=>new Uint8Array(await crypto.subtle.digest(t,e)),t0=Sa({name:\"sha2-256\",code:18,encode:xa(\"SHA-256\")}),r0=Sa({name:\"sha2-512\",code:19,encode:xa(\"SHA-512\")});var i0=Object.freeze({__proto__:null,sha256:t0,sha512:r0});const Oa=0,n0=\"identity\",Ia=ga;var s0=Object.freeze({__proto__:null,identity:{code:Oa,name:n0,encode:Ia,digest:t=>Fn(Oa,Ia(t))}});new TextEncoder,new TextDecoder;const Pa=ct(ct(ct(ct(ct(ct(ct(ct(ct(ct({},Qg),ty),iy),sy),cy),by),my),Sy),Ay),Ly);ct(ct({},i0),s0);function o0(t=0){return globalThis.Buffer!=null&&globalThis.Buffer.allocUnsafe!=null?globalThis.Buffer.allocUnsafe(t):new Uint8Array(t)}function Aa(t,e,r,i){return{name:t,prefix:e,encoder:{name:t,prefix:e,encode:r},decoder:{decode:i}}}const Ta=Aa(\"utf8\",\"u\",t=>\"u\"+new TextDecoder(\"utf8\").decode(t),t=>new TextEncoder().encode(t.substring(1))),Ln=Aa(\"ascii\",\"a\",t=>{let e=\"a\";for(let r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},t=>{t=t.substring(1);const e=o0(t.length);for(let r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}),a0=ct({utf8:Ta,\"utf-8\":Ta,hex:Pa.base16,latin1:Ln,ascii:Ln,binary:Ln},Pa);function c0(t,e=\"utf8\"){const r=a0[e];if(!r)throw new Error(`Unsupported encoding \"${e}\"`);return(e===\"utf8\"||e===\"utf-8\")&&globalThis.Buffer!=null&&globalThis.Buffer.from!=null?globalThis.Buffer.from(t,\"utf8\"):r.decoder.decode(`${r.prefix}${t}`)}const Ca=\"wc\",u0=2,$n=\"core\",Ut=`${Ca}@${2}:${$n}:`,h0={name:$n,logger:\"error\"},l0={database:\":memory:\"},f0=\"crypto\",Na=\"client_ed25519_seed\",d0=Z.ONE_DAY,p0=\"keychain\",g0=\"0.3\",y0=\"messages\",_0=\"0.3\",b0=Z.SIX_HOURS,v0=\"publisher\",Ra=\"irn\",w0=\"error\",Fa=\"wss://relay.walletconnect.com\",m0=\"relayer\",tt={message:\"relayer_message\",connect:\"relayer_connect\",disconnect:\"relayer_disconnect\",error:\"relayer_error\",connection_stalled:\"relayer_connection_stalled\",transport_closed:\"relayer_transport_closed\",publish:\"relayer_publish\"},E0=\"_subscription\",di={payload:\"payload\",connect:\"connect\",disconnect:\"disconnect\",error:\"error\"},La=Z.ONE_SECOND,D0=\"2.4.5\",S0=\"0.3\",Ot={created:\"subscription_created\",deleted:\"subscription_deleted\",expired:\"subscription_expired\",disabled:\"subscription_disabled\",sync:\"subscription_sync\",resubscribed:\"subscription_resubscribed\"},x0=\"subscription\",O0=\"0.3\",I0=Z.FIVE_SECONDS*1e3,P0=\"pairing\",A0=\"0.3\",Br={wc_pairingDelete:{req:{ttl:Z.ONE_DAY,prompt:!1,tag:1e3},res:{ttl:Z.ONE_DAY,prompt:!1,tag:1001}},wc_pairingPing:{req:{ttl:Z.THIRTY_SECONDS,prompt:!1,tag:1002},res:{ttl:Z.THIRTY_SECONDS,prompt:!1,tag:1003}},unregistered_method:{req:{ttl:Z.ONE_DAY,prompt:!1,tag:0},res:{ttl:Z.ONE_DAY,prompt:!1,tag:0}}},It={created:\"history_created\",updated:\"history_updated\",deleted:\"history_deleted\",sync:\"history_sync\"},T0=\"history\",C0=\"0.3\",N0=\"expirer\",yt={created:\"expirer_created\",deleted:\"expirer_deleted\",expired:\"expirer_expired\",sync:\"expirer_sync\"},R0=\"0.3\";class F0{constructor(e,r){this.core=e,this.logger=r,this.keychain=new Map,this.name=p0,this.version=g0,this.initialized=!1,this.storagePrefix=Ut,this.init=async()=>{if(!this.initialized){const i=await this.getKeyChain();typeof i<\"u\"&&(this.keychain=i),this.initialized=!0}},this.has=i=>(this.isInitialized(),this.keychain.has(i)),this.set=async(i,n)=>{this.isInitialized(),this.keychain.set(i,n),await this.persist()},this.get=i=>{this.isInitialized();const n=this.keychain.get(i);if(typeof n>\"u\"){const{message:s}=V(\"NO_MATCHING_KEY\",`${this.name}: ${i}`);throw new Error(s)}return n},this.del=async i=>{this.isInitialized(),this.keychain.delete(i),await this.persist()},this.core=e,this.logger=Se.generateChildLogger(r,this.name)}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}async setKeyChain(e){await this.core.storage.setItem(this.storageKey,zo(e))}async getKeyChain(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<\"u\"?Ko(e):void 0}async persist(){await this.setKeyChain(this.keychain)}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}class L0{constructor(e,r,i){this.core=e,this.logger=r,this.name=f0,this.initialized=!1,this.init=async()=>{this.initialized||(await this.keychain.init(),this.initialized=!0)},this.hasKeys=n=>(this.isInitialized(),this.keychain.has(n)),this.getClientId=async()=>{this.isInitialized();const n=await this.getClientSeed(),s=go(n);return po(s.publicKey)},this.generateKeyPair=()=>{this.isInitialized();const n=qd();return this.setPrivateKey(n.publicKey,n.privateKey)},this.signJWT=async n=>{this.isInitialized();const s=await this.getClientSeed(),o=go(s),c=bn();return await Jf(c,n,d0,o)},this.generateSharedKey=(n,s,o)=>{this.isInitialized();const c=this.getPrivateKey(n),l=zd(c,s);return this.setSymKey(l,o)},this.setSymKey=async(n,s)=>{this.isInitialized();const o=s||Kd(n);return await this.keychain.set(o,n),o},this.deleteKeyPair=async n=>{this.isInitialized(),await this.keychain.del(n)},this.deleteSymKey=async n=>{this.isInitialized(),await this.keychain.del(n)},this.encode=async(n,s,o)=>{this.isInitialized();const c=Uo(o),l=Ir(s);if(Mo(c)){const w=c.senderPublicKey,v=c.receiverPublicKey;n=await this.generateSharedKey(w,v)}const h=this.getSymKey(n),{type:f,senderPublicKey:S}=c;return Gd({type:f,symKey:h,message:l,senderPublicKey:S})},this.decode=async(n,s,o)=>{this.isInitialized();const c=Yd(s,o);if(Mo(c)){const f=c.receiverPublicKey,S=c.senderPublicKey;n=await this.generateSharedKey(f,S)}const l=this.getSymKey(n),h=kd({symKey:l,encoded:s});return Yi(h)},this.core=e,this.logger=Se.generateChildLogger(r,this.name),this.keychain=i||new F0(this.core,this.logger)}get context(){return Se.getLoggerContext(this.logger)}getPayloadType(e){const r=vn(e);return Cr(r.type)}async setPrivateKey(e,r){return await this.keychain.set(e,r),e}getPrivateKey(e){return this.keychain.get(e)}async getClientSeed(){let e=\"\";try{e=this.keychain.get(Na)}catch{e=bn(),await this.keychain.set(Na,e)}return c0(e,\"base16\")}getSymKey(e){return this.keychain.get(e)}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}class $0 extends Nh{constructor(e,r){super(e,r),this.logger=e,this.core=r,this.messages=new Map,this.name=y0,this.version=_0,this.initialized=!1,this.storagePrefix=Ut,this.init=async()=>{if(!this.initialized){this.logger.trace(\"Initialized\");try{const i=await this.getRelayerMessages();typeof i<\"u\"&&(this.messages=i),this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:\"method\",method:\"restore\",size:this.messages.size})}catch(i){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(i)}finally{this.initialized=!0}}},this.set=async(i,n)=>{this.isInitialized();const s=ci(n);let o=this.messages.get(i);return typeof o>\"u\"&&(o={}),typeof o[s]<\"u\"||(o[s]=n,this.messages.set(i,o),await this.persist()),s},this.get=i=>{this.isInitialized();let n=this.messages.get(i);return typeof n>\"u\"&&(n={}),n},this.has=(i,n)=>{this.isInitialized();const s=this.get(i),o=ci(n);return typeof s[o]<\"u\"},this.del=async i=>{this.isInitialized(),this.messages.delete(i),await this.persist()},this.logger=Se.generateChildLogger(e,this.name),this.core=r}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}async setRelayerMessages(e){await this.core.storage.setItem(this.storageKey,zo(e))}async getRelayerMessages(){const e=await this.core.storage.getItem(this.storageKey);return typeof e<\"u\"?Ko(e):void 0}async persist(){await this.setRelayerMessages(this.messages)}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}class U0 extends Rh{constructor(e,r){super(e,r),this.relayer=e,this.logger=r,this.events=new it.exports.EventEmitter,this.name=v0,this.queue=new Map,this.publishTimeout=1e4,this.publish=async(i,n,s)=>{this.logger.debug(\"Publishing Payload\"),this.logger.trace({type:\"method\",method:\"publish\",params:{topic:i,message:n,opts:s}});try{const o=s?.ttl||b0,c=wn(s),l=s?.prompt||!1,h=s?.tag||0,f={topic:i,message:n,opts:{ttl:o,relay:c,prompt:l,tag:h}},S=ci(n);this.queue.set(S,f);try{await await Vo(this.rpcPublish(i,n,o,c,l,h),this.publishTimeout),this.relayer.events.emit(tt.publish,f)}catch{this.logger.debug(\"Publishing Payload stalled\"),this.relayer.events.emit(tt.connection_stalled);return}this.onPublish(S,f),this.logger.debug(\"Successfully Published Payload\"),this.logger.trace({type:\"method\",method:\"publish\",params:{topic:i,message:n,opts:s}})}catch(o){throw this.logger.debug(\"Failed to Publish Payload\"),this.logger.error(o),o}},this.on=(i,n)=>{this.events.on(i,n)},this.once=(i,n)=>{this.events.once(i,n)},this.off=(i,n)=>{this.events.off(i,n)},this.removeListener=(i,n)=>{this.events.removeListener(i,n)},this.relayer=e,this.logger=Se.generateChildLogger(r,this.name),this.registerEventListeners()}get context(){return Se.getLoggerContext(this.logger)}rpcPublish(e,r,i,n,s,o){var c,l,h,f;const S={method:mn(n.protocol).publish,params:{topic:e,message:r,ttl:i,prompt:s,tag:o}};return at((c=S.params)==null?void 0:c.prompt)&&((l=S.params)==null||delete l.prompt),at((h=S.params)==null?void 0:h.tag)&&((f=S.params)==null||delete f.tag),this.logger.debug(\"Outgoing Relay Payload\"),this.logger.trace({type:\"message\",direction:\"outgoing\",request:S}),this.relayer.provider.request(S)}onPublish(e,r){this.queue.delete(e)}checkQueue(){this.queue.forEach(async e=>{const{topic:r,message:i,opts:n}=e;await this.publish(r,i,n)})}registerEventListeners(){this.relayer.core.heartbeat.on(vr.HEARTBEAT_EVENTS.pulse,()=>{this.checkQueue()})}}class M0{constructor(){this.map=new Map,this.set=(e,r)=>{const i=this.get(e);this.exists(e,r)||this.map.set(e,[...i,r])},this.get=e=>this.map.get(e)||[],this.exists=(e,r)=>this.get(e).includes(r),this.delete=(e,r)=>{if(typeof r>\"u\"){this.map.delete(e);return}if(!this.map.has(e))return;const i=this.get(e);if(!this.exists(e,r))return;const n=i.filter(s=>s!==r);if(!n.length){this.map.delete(e);return}this.map.set(e,n)},this.clear=()=>{this.map.clear()}}get topics(){return Array.from(this.map.keys())}}var j0=Object.defineProperty,B0=Object.defineProperties,H0=Object.getOwnPropertyDescriptors,$a=Object.getOwnPropertySymbols,q0=Object.prototype.hasOwnProperty,z0=Object.prototype.propertyIsEnumerable,Ua=(t,e,r)=>e in t?j0(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,pi=(t,e)=>{for(var r in e||(e={}))q0.call(e,r)&&Ua(t,r,e[r]);if($a)for(var r of $a(e))z0.call(e,r)&&Ua(t,r,e[r]);return t},Un=(t,e)=>B0(t,H0(e));class K0 extends $h{constructor(e,r){super(e,r),this.relayer=e,this.logger=r,this.subscriptions=new Map,this.topicMap=new M0,this.events=new it.exports.EventEmitter,this.name=x0,this.version=O0,this.pending=new Map,this.cached=[],this.initialized=!1,this.pendingSubscriptionWatchLabel=\"pending_sub_watch_label\",this.pollingInterval=20,this.storagePrefix=Ut,this.subscribeTimeout=1e4,this.restartInProgress=!1,this.init=async()=>{this.initialized||(this.logger.trace(\"Initialized\"),await this.restart(),this.registerEventListeners(),this.onEnable(),this.clientId=await this.relayer.core.crypto.getClientId())},this.subscribe=async(i,n)=>{await this.restartToComplete(),this.isInitialized(),this.logger.debug(\"Subscribing Topic\"),this.logger.trace({type:\"method\",method:\"subscribe\",params:{topic:i,opts:n}});try{const s=wn(n),o={topic:i,relay:s};this.pending.set(i,o);const c=await this.rpcSubscribe(i,s);return this.onSubscribe(c,o),this.logger.debug(\"Successfully Subscribed Topic\"),this.logger.trace({type:\"method\",method:\"subscribe\",params:{topic:i,opts:n}}),c}catch(s){throw this.logger.debug(\"Failed to Subscribe Topic\"),this.logger.error(s),s}},this.unsubscribe=async(i,n)=>{await this.restartToComplete(),this.isInitialized(),typeof n?.id<\"u\"?await this.unsubscribeById(i,n.id,n):await this.unsubscribeByTopic(i,n)},this.isSubscribed=async i=>this.topics.includes(i)?!0:await new Promise((n,s)=>{const o=new Z.Watch;o.start(this.pendingSubscriptionWatchLabel);const c=setInterval(()=>{!this.pending.has(i)&&this.topics.includes(i)&&(clearInterval(c),o.stop(this.pendingSubscriptionWatchLabel),n(!0)),o.elapsed(this.pendingSubscriptionWatchLabel)>=I0&&(clearInterval(c),o.stop(this.pendingSubscriptionWatchLabel),s(!1))},this.pollingInterval)}),this.on=(i,n)=>{this.events.on(i,n)},this.once=(i,n)=>{this.events.once(i,n)},this.off=(i,n)=>{this.events.off(i,n)},this.removeListener=(i,n)=>{this.events.removeListener(i,n)},this.restart=async()=>{this.restartInProgress=!0,await this.restore(),await this.reset(),this.restartInProgress=!1},this.relayer=e,this.logger=Se.generateChildLogger(r,this.name),this.clientId=\"\"}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}get length(){return this.subscriptions.size}get ids(){return Array.from(this.subscriptions.keys())}get values(){return Array.from(this.subscriptions.values())}get topics(){return this.topicMap.topics}hasSubscription(e,r){let i=!1;try{i=this.getSubscription(e).topic===r}catch{}return i}onEnable(){this.cached=[],this.initialized=!0}onDisable(){this.cached=this.values,this.subscriptions.clear(),this.topicMap.clear(),this.initialized=!1}async unsubscribeByTopic(e,r){const i=this.topicMap.get(e);await Promise.all(i.map(async n=>await this.unsubscribeById(e,n,r)))}async unsubscribeById(e,r,i){this.logger.debug(\"Unsubscribing Topic\"),this.logger.trace({type:\"method\",method:\"unsubscribe\",params:{topic:e,id:r,opts:i}});try{const n=wn(i);await this.rpcUnsubscribe(e,r,n);const s=$e(\"USER_DISCONNECTED\",`${this.name}, ${e}`);await this.onUnsubscribe(e,r,s),this.logger.debug(\"Successfully Unsubscribed Topic\"),this.logger.trace({type:\"method\",method:\"unsubscribe\",params:{topic:e,id:r,opts:i}})}catch(n){throw this.logger.debug(\"Failed to Unsubscribe Topic\"),this.logger.error(n),n}}async rpcSubscribe(e,r){const i={method:mn(r.protocol).subscribe,params:{topic:e}};this.logger.debug(\"Outgoing Relay Payload\"),this.logger.trace({type:\"payload\",direction:\"outgoing\",request:i});try{await await Vo(this.relayer.provider.request(i),this.subscribeTimeout)}catch{this.logger.debug(\"Outgoing Relay Payload stalled\"),this.relayer.events.emit(tt.connection_stalled)}return ci(e+this.clientId)}rpcUnsubscribe(e,r,i){const n={method:mn(i.protocol).unsubscribe,params:{topic:e,id:r}};return this.logger.debug(\"Outgoing Relay Payload\"),this.logger.trace({type:\"payload\",direction:\"outgoing\",request:n}),this.relayer.provider.request(n)}onSubscribe(e,r){this.setSubscription(e,Un(pi({},r),{id:e})),this.pending.delete(r.topic)}onResubscribe(e,r){this.addSubscription(e,Un(pi({},r),{id:e})),this.pending.delete(r.topic)}async onUnsubscribe(e,r,i){this.events.removeAllListeners(r),this.hasSubscription(r,e)&&this.deleteSubscription(r,i),await this.relayer.messages.del(e)}async setRelayerSubscriptions(e){await this.relayer.core.storage.setItem(this.storageKey,e)}async getRelayerSubscriptions(){return await this.relayer.core.storage.getItem(this.storageKey)}setSubscription(e,r){this.subscriptions.has(e)||(this.logger.debug(\"Setting subscription\"),this.logger.trace({type:\"method\",method:\"setSubscription\",id:e,subscription:r}),this.addSubscription(e,r))}addSubscription(e,r){this.subscriptions.set(e,pi({},r)),this.topicMap.set(r.topic,e),this.events.emit(Ot.created,r)}getSubscription(e){this.logger.debug(\"Getting subscription\"),this.logger.trace({type:\"method\",method:\"getSubscription\",id:e});const r=this.subscriptions.get(e);if(!r){const{message:i}=V(\"NO_MATCHING_KEY\",`${this.name}: ${e}`);throw new Error(i)}return r}deleteSubscription(e,r){this.logger.debug(\"Deleting subscription\"),this.logger.trace({type:\"method\",method:\"deleteSubscription\",id:e,reason:r});const i=this.getSubscription(e);this.subscriptions.delete(e),this.topicMap.delete(i.topic,e),this.events.emit(Ot.deleted,Un(pi({},i),{reason:r}))}async persist(){await this.setRelayerSubscriptions(this.values),this.events.emit(Ot.sync)}async reset(){this.cached.length&&await Promise.all(this.cached.map(async e=>await this.resubscribe(e))),this.events.emit(Ot.resubscribed)}async restore(){try{const e=await this.getRelayerSubscriptions();if(typeof e>\"u\"||!e.length)return;if(this.subscriptions.size){const{message:r}=V(\"RESTORE_WILL_OVERRIDE\",this.name);throw this.logger.error(r),this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`),new Error(r)}this.cached=e,this.logger.debug(`Successfully Restored subscriptions for ${this.name}`),this.logger.trace({type:\"method\",method:\"restore\",subscriptions:this.values})}catch(e){this.logger.debug(`Failed to Restore subscriptions for ${this.name}`),this.logger.error(e)}}async resubscribe(e){if(!this.ids.includes(e.id)){const{topic:r,relay:i}=e,n={topic:r,relay:i};this.pending.set(n.topic,n);const s=await this.rpcSubscribe(n.topic,n.relay);this.onResubscribe(s,n)}}async onConnect(){this.restartInProgress||(await this.restart(),this.onEnable())}onDisconnect(){this.onDisable()}checkPending(){this.relayer.transportExplicitlyClosed||this.pending.forEach(async e=>{const r=await this.rpcSubscribe(e.topic,e.relay);this.onSubscribe(r,e)})}registerEventListeners(){this.relayer.core.heartbeat.on(vr.HEARTBEAT_EVENTS.pulse,()=>{this.checkPending()}),this.relayer.on(tt.connect,async()=>{await this.onConnect()}),this.relayer.on(tt.disconnect,()=>{this.onDisconnect()}),this.events.on(Ot.created,async e=>{const r=Ot.created;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,data:e}),await this.persist()}),this.events.on(Ot.deleted,async e=>{const r=Ot.deleted;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,data:e}),await this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}async restartToComplete(){this.restartInProgress&&await new Promise(e=>{const r=setInterval(()=>{this.restartInProgress||(clearInterval(r),e())},this.pollingInterval)})}}var V0=Object.defineProperty,Ma=Object.getOwnPropertySymbols,G0=Object.prototype.hasOwnProperty,k0=Object.prototype.propertyIsEnumerable,ja=(t,e,r)=>e in t?V0(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,W0=(t,e)=>{for(var r in e||(e={}))G0.call(e,r)&&ja(t,r,e[r]);if(Ma)for(var r of Ma(e))k0.call(e,r)&&ja(t,r,e[r]);return t};class Y0 extends Fh{constructor(e){super(e),this.protocol=\"wc\",this.version=2,this.events=new it.exports.EventEmitter,this.name=m0,this.transportExplicitlyClosed=!1,this.initialized=!1,this.reconnecting=!1,this.core=e.core,this.logger=typeof e.logger<\"u\"&&typeof e.logger!=\"string\"?Se.generateChildLogger(e.logger,this.name):lr(Se.getDefaultLoggerOptions({level:e.logger||w0})),this.messages=new $0(this.logger,e.core),this.subscriber=new K0(this,this.logger),this.publisher=new U0(this,this.logger),this.relayUrl=e?.relayUrl||Fa,this.projectId=e.projectId,this.provider={}}async init(){this.logger.trace(\"Initialized\"),this.provider=await this.createProvider(),await Promise.all([this.messages.init(),this.transportOpen(),this.subscriber.init()]),this.registerEventListeners(),this.initialized=!0}get context(){return Se.getLoggerContext(this.logger)}get connected(){return this.provider.connection.connected}get connecting(){return this.provider.connection.connecting}async publish(e,r,i){this.isInitialized(),await this.publisher.publish(e,r,i),await this.recordMessageEvent({topic:e,message:r})}async subscribe(e,r){this.isInitialized();let i=\"\";return await Promise.all([new Promise(n=>{this.subscriber.once(Ot.created,s=>{s.topic===e&&n()})}),new Promise(async n=>{i=await this.subscriber.subscribe(e,r),n()})]),i}async unsubscribe(e,r){this.isInitialized(),await this.subscriber.unsubscribe(e,r)}on(e,r){this.events.on(e,r)}once(e,r){this.events.once(e,r)}off(e,r){this.events.off(e,r)}removeListener(e,r){this.events.removeListener(e,r)}async transportClose(){this.transportExplicitlyClosed=!0,this.connected&&(await this.provider.disconnect(),this.events.emit(tt.transport_closed))}async transportOpen(e){if(!this.reconnecting){this.relayUrl=e||this.relayUrl,this.transportExplicitlyClosed=!1,this.reconnecting=!0;try{await Promise.all([new Promise(r=>{this.initialized||r(),this.subscriber.once(Ot.resubscribed,()=>{r()})}),await Promise.race([new Promise(async r=>{await this.provider.connect(),this.removeListener(tt.transport_closed,this.rejectTransportOpen),r()}),new Promise(r=>this.once(tt.transport_closed,this.rejectTransportOpen))])])}catch(r){const i=r;if(!/socket hang up/i.test(i.message))throw r;this.logger.error(r),this.events.emit(tt.transport_closed)}finally{this.reconnecting=!1}}}async restartTransport(e){this.transportExplicitlyClosed||(await this.transportClose(),await new Promise(r=>setTimeout(r,La)),await this.transportOpen(e))}rejectTransportOpen(){throw new Error(\"closeTransport called before connection was established\")}async createProvider(){const e=await this.core.crypto.signJWT(this.relayUrl);return new Mr(new $g(up({sdkVersion:D0,protocol:this.protocol,version:this.version,relayUrl:this.relayUrl,projectId:this.projectId,auth:e})))}async recordMessageEvent(e){const{topic:r,message:i}=e;await this.messages.set(r,i)}async shouldIgnoreMessageEvent(e){const{topic:r,message:i}=e;return await this.subscriber.isSubscribed(r)?this.messages.has(r,i):!0}async onProviderPayload(e){if(this.logger.debug(\"Incoming Relay Payload\"),this.logger.trace({type:\"payload\",direction:\"incoming\",payload:e}),Tn(e)){if(!e.method.endsWith(E0))return;const r=e.params,{topic:i,message:n}=r.data,s={topic:i,message:n};this.logger.debug(\"Emitting Relayer Payload\"),this.logger.trace(W0({type:\"event\",event:r.id},s)),this.events.emit(r.id,s),await this.acknowledgePayload(e),await this.onMessageEvent(s)}}async onMessageEvent(e){await this.shouldIgnoreMessageEvent(e)||(this.events.emit(tt.message,e),await this.recordMessageEvent(e))}async acknowledgePayload(e){const r=An(e.id,!0);await this.provider.connection.send(r)}registerEventListeners(){this.provider.on(di.payload,e=>this.onProviderPayload(e)),this.provider.on(di.connect,()=>{this.events.emit(tt.connect)}),this.provider.on(di.disconnect,()=>{this.events.emit(tt.disconnect),this.attemptToReconnect()}),this.provider.on(di.error,e=>this.events.emit(tt.error,e)),this.events.on(tt.connection_stalled,async()=>{await this.restartTransport()})}attemptToReconnect(){this.transportExplicitlyClosed||setTimeout(async()=>{await this.transportOpen()},Z.toMiliseconds(La))}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}var J0=Object.defineProperty,Ba=Object.getOwnPropertySymbols,X0=Object.prototype.hasOwnProperty,Z0=Object.prototype.propertyIsEnumerable,Ha=(t,e,r)=>e in t?J0(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,qa=(t,e)=>{for(var r in e||(e={}))X0.call(e,r)&&Ha(t,r,e[r]);if(Ba)for(var r of Ba(e))Z0.call(e,r)&&Ha(t,r,e[r]);return t};class gi extends Lh{constructor(e,r,i,n=Ut,s=void 0){super(e,r,i,n),this.core=e,this.logger=r,this.name=i,this.map=new Map,this.version=S0,this.cached=[],this.initialized=!1,this.storagePrefix=Ut,this.init=async()=>{this.initialized||(this.logger.trace(\"Initialized\"),await this.restore(),this.cached.forEach(o=>{Tp(o)?this.map.set(o.id,o):Cp(o)?this.map.set(o.topic,o):this.getKey&&o!==null&&!at(o)&&this.map.set(this.getKey(o),o)}),this.cached=[],this.initialized=!0)},this.set=async(o,c)=>{this.isInitialized(),this.map.has(o)?await this.update(o,c):(this.logger.debug(\"Setting value\"),this.logger.trace({type:\"method\",method:\"set\",key:o,value:c}),this.map.set(o,c),await this.persist())},this.get=o=>(this.isInitialized(),this.logger.debug(\"Getting value\"),this.logger.trace({type:\"method\",method:\"get\",key:o}),this.getData(o)),this.getAll=o=>(this.isInitialized(),o?this.values.filter(c=>Object.keys(o).every(l=>Ug(c[l],o[l]))):this.values),this.update=async(o,c)=>{this.isInitialized(),this.logger.debug(\"Updating value\"),this.logger.trace({type:\"method\",method:\"update\",key:o,update:c});const l=qa(qa({},this.getData(o)),c);this.map.set(o,l),await this.persist()},this.delete=async(o,c)=>{this.isInitialized(),this.map.has(o)&&(this.logger.debug(\"Deleting value\"),this.logger.trace({type:\"method\",method:\"delete\",key:o,reason:c}),this.map.delete(o),await this.persist())},this.logger=Se.generateChildLogger(r,this.name),this.storagePrefix=n,this.getKey=s}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}get length(){return this.map.size}get keys(){return Array.from(this.map.keys())}get values(){return Array.from(this.map.values())}async setDataStore(e){await this.core.storage.setItem(this.storageKey,e)}async getDataStore(){return await this.core.storage.getItem(this.storageKey)}getData(e){const r=this.map.get(e);if(!r){const{message:i}=V(\"NO_MATCHING_KEY\",`${this.name}: ${e}`);throw this.logger.error(i),new Error(i)}return r}async persist(){await this.setDataStore(this.values)}async restore(){try{const e=await this.getDataStore();if(typeof e>\"u\"||!e.length)return;if(this.map.size){const{message:r}=V(\"RESTORE_WILL_OVERRIDE\",this.name);throw this.logger.error(r),new Error(r)}this.cached=e,this.logger.debug(`Successfully Restored value for ${this.name}`),this.logger.trace({type:\"method\",method:\"restore\",value:this.values})}catch(e){this.logger.debug(`Failed to Restore value for ${this.name}`),this.logger.error(e)}}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}class Q0{constructor(e,r){this.core=e,this.logger=r,this.name=P0,this.version=A0,this.events=new it.exports,this.initialized=!1,this.storagePrefix=Ut,this.ignoredPayloadTypes=[Xt],this.registeredMethods=[],this.init=async()=>{this.initialized||(await this.pairings.init(),await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.initialized=!0,this.logger.trace(\"Initialized\"))},this.register=({methods:i})=>{this.isInitialized(),this.registeredMethods=[...new Set([...this.registeredMethods,...i])]},this.create=async()=>{this.isInitialized();const i=bn(),n=await this.core.crypto.setSymKey(i),s=xt(Z.FIVE_MINUTES),o={protocol:Ra},c={topic:n,expiry:s,relay:o,active:!1},l=wp({protocol:this.core.protocol,version:this.core.version,topic:n,symKey:i,relay:o});return await this.pairings.set(n,c),await this.core.relayer.subscribe(n),this.core.expirer.set(n,s),{topic:n,uri:l}},this.pair=async i=>{this.isInitialized(),this.isValidPair(i);const{topic:n,symKey:s,relay:o}=bp(i.uri),c=xt(Z.FIVE_MINUTES),l={topic:n,relay:o,expiry:c,active:!1};return await this.pairings.set(n,l),await this.core.crypto.setSymKey(s,n),await this.core.relayer.subscribe(n,{relay:o}),this.core.expirer.set(n,c),i.activatePairing&&await this.activate({topic:n}),l},this.activate=async({topic:i})=>{this.isInitialized();const n=xt(Z.THIRTY_DAYS);await this.pairings.update(i,{active:!0,expiry:n}),this.core.expirer.set(i,n)},this.ping=async i=>{this.isInitialized(),await this.isValidPing(i);const{topic:n}=i;if(this.pairings.keys.includes(n)){const s=await this.sendRequest(n,\"wc_pairingPing\",{}),{done:o,resolve:c,reject:l}=Zt();this.events.once(Fe(\"pairing_ping\",s),({error:h})=>{h?l(h):c()}),await o()}},this.updateExpiry=async({topic:i,expiry:n})=>{this.isInitialized(),await this.pairings.update(i,{expiry:n})},this.updateMetadata=async({topic:i,metadata:n})=>{this.isInitialized(),await this.pairings.update(i,{peerMetadata:n})},this.getPairings=()=>(this.isInitialized(),this.pairings.values),this.disconnect=async i=>{this.isInitialized(),await this.isValidDisconnect(i);const{topic:n}=i;this.pairings.keys.includes(n)&&(await this.sendRequest(n,\"wc_pairingDelete\",$e(\"USER_DISCONNECTED\")),await this.deletePairing(n))},this.sendRequest=async(i,n,s)=>{const o=hi(n,s),c=await this.core.crypto.encode(i,o),l=Br[n].req;return this.core.history.set(i,o),await this.core.relayer.publish(i,c,l),o.id},this.sendResult=async(i,n,s)=>{const o=An(i,s),c=await this.core.crypto.encode(n,o),l=await this.core.history.get(n,i),h=Br[l.request.method].res;await this.core.relayer.publish(n,c,h),await this.core.history.resolve(o)},this.sendError=async(i,n,s)=>{const o=li(i,s),c=await this.core.crypto.encode(n,o),l=await this.core.history.get(n,i),h=Br[l.request.method]?Br[l.request.method].res:Br.unregistered_method.res;await this.core.relayer.publish(n,c,h),await this.core.history.resolve(o)},this.deletePairing=async(i,n)=>{await this.core.relayer.unsubscribe(i),await Promise.all([this.pairings.delete(i,$e(\"USER_DISCONNECTED\")),this.core.crypto.deleteSymKey(i),n?Promise.resolve():this.core.expirer.del(i)])},this.cleanup=async()=>{const i=this.pairings.getAll().filter(n=>$t(n.expiry));await Promise.all(i.map(n=>this.deletePairing(n.topic)))},this.onRelayEventRequest=i=>{const{topic:n,payload:s}=i,o=s.method;if(this.pairings.keys.includes(n))switch(o){case\"wc_pairingPing\":return this.onPairingPingRequest(n,s);case\"wc_pairingDelete\":return this.onPairingDeleteRequest(n,s);default:return this.onUnknownRpcMethodRequest(n,s)}},this.onRelayEventResponse=async i=>{const{topic:n,payload:s}=i,o=(await this.core.history.get(n,s.id)).request.method;if(this.pairings.keys.includes(n))switch(o){case\"wc_pairingPing\":return this.onPairingPingResponse(n,s);default:return this.onUnknownRpcMethodResponse(o)}},this.onPairingPingRequest=async(i,n)=>{const{id:s}=n;try{this.isValidPing({topic:i}),await this.sendResult(s,i,!0),this.events.emit(\"pairing_ping\",{id:s,topic:i})}catch(o){await this.sendError(s,i,o),this.logger.error(o)}},this.onPairingPingResponse=(i,n)=>{const{id:s}=n;setTimeout(()=>{Ct(n)?this.events.emit(Fe(\"pairing_ping\",s),{}):wt(n)&&this.events.emit(Fe(\"pairing_ping\",s),{error:n.error})},500)},this.onPairingDeleteRequest=async(i,n)=>{const{id:s}=n;try{this.isValidDisconnect({topic:i}),await this.deletePairing(i),this.events.emit(\"pairing_delete\",{id:s,topic:i})}catch(o){await this.sendError(s,i,o),this.logger.error(o)}},this.onUnknownRpcMethodRequest=async(i,n)=>{const{id:s,method:o}=n;try{if(this.registeredMethods.includes(o))return;const c=$e(\"WC_METHOD_UNSUPPORTED\",o);await this.sendError(s,i,c),this.logger.error(c)}catch(c){await this.sendError(s,i,c),this.logger.error(c)}},this.onUnknownRpcMethodResponse=i=>{this.registeredMethods.includes(i)||this.logger.error($e(\"WC_METHOD_UNSUPPORTED\",i))},this.isValidPair=i=>{if(!ft(i)){const{message:n}=V(\"MISSING_OR_INVALID\",`pair() params: ${i}`);throw new Error(n)}if(!Ap(i.uri)){const{message:n}=V(\"MISSING_OR_INVALID\",`pair() uri: ${i.uri}`);throw new Error(n)}},this.isValidPing=async i=>{if(!ft(i)){const{message:s}=V(\"MISSING_OR_INVALID\",`ping() params: ${i}`);throw new Error(s)}const{topic:n}=i;await this.isValidPairingTopic(n)},this.isValidDisconnect=async i=>{if(!ft(i)){const{message:s}=V(\"MISSING_OR_INVALID\",`disconnect() params: ${i}`);throw new Error(s)}const{topic:n}=i;await this.isValidPairingTopic(n)},this.isValidPairingTopic=async i=>{if(!Ke(i,!1)){const{message:n}=V(\"MISSING_OR_INVALID\",`pairing topic should be a string: ${i}`);throw new Error(n)}if(!this.pairings.keys.includes(i)){const{message:n}=V(\"NO_MATCHING_KEY\",`pairing topic doesn't exist: ${i}`);throw new Error(n)}if($t(this.pairings.get(i).expiry)){await this.deletePairing(i);const{message:n}=V(\"EXPIRED\",`pairing topic: ${i}`);throw new Error(n)}},this.core=e,this.logger=Se.generateChildLogger(r,this.name),this.pairings=new gi(this.core,this.logger,this.name,this.storagePrefix)}get context(){return Se.getLoggerContext(this.logger)}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}registerRelayerEvents(){this.core.relayer.on(tt.message,async e=>{const{topic:r,message:i}=e;if(this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i)))return;const n=await this.core.crypto.decode(r,i);Tn(n)?(this.core.history.set(r,n),this.onRelayEventRequest({topic:r,payload:n})):Cn(n)&&(await this.core.history.resolve(n),this.onRelayEventResponse({topic:r,payload:n}))})}registerExpirerEvents(){this.core.expirer.on(yt.expired,async e=>{const{topic:r}=ko(e.target);r&&this.pairings.keys.includes(r)&&(await this.deletePairing(r,!0),this.events.emit(\"pairing_expire\",{topic:r}))})}}class e_ extends Ch{constructor(e,r){super(e,r),this.core=e,this.logger=r,this.records=new Map,this.events=new it.exports.EventEmitter,this.name=T0,this.version=C0,this.cached=[],this.initialized=!1,this.storagePrefix=Ut,this.init=async()=>{this.initialized||(this.logger.trace(\"Initialized\"),await this.restore(),this.cached.forEach(i=>this.records.set(i.id,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)},this.set=(i,n,s)=>{if(this.isInitialized(),this.logger.debug(\"Setting JSON-RPC request history record\"),this.logger.trace({type:\"method\",method:\"set\",topic:i,request:n,chainId:s}),this.records.has(n.id))return;const o={id:n.id,topic:i,request:{method:n.method,params:n.params||null},chainId:s};this.records.set(o.id,o),this.events.emit(It.created,o)},this.resolve=async i=>{if(this.isInitialized(),this.logger.debug(\"Updating JSON-RPC response history record\"),this.logger.trace({type:\"method\",method:\"update\",response:i}),!this.records.has(i.id))return;const n=await this.getRecord(i.id);typeof n.response>\"u\"&&(n.response=wt(i)?{error:i.error}:{result:i.result},this.records.set(n.id,n),this.events.emit(It.updated,n))},this.get=async(i,n)=>(this.isInitialized(),this.logger.debug(\"Getting record\"),this.logger.trace({type:\"method\",method:\"get\",topic:i,id:n}),await this.getRecord(n)),this.delete=(i,n)=>{this.isInitialized(),this.logger.debug(\"Deleting record\"),this.logger.trace({type:\"method\",method:\"delete\",id:n}),this.values.forEach(s=>{if(s.topic===i){if(typeof n<\"u\"&&s.id!==n)return;this.records.delete(s.id),this.events.emit(It.deleted,s)}})},this.exists=async(i,n)=>(this.isInitialized(),this.records.has(n)?(await this.getRecord(n)).topic===i:!1),this.on=(i,n)=>{this.events.on(i,n)},this.once=(i,n)=>{this.events.once(i,n)},this.off=(i,n)=>{this.events.off(i,n)},this.removeListener=(i,n)=>{this.events.removeListener(i,n)},this.logger=Se.generateChildLogger(r,this.name)}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}get size(){return this.records.size}get keys(){return Array.from(this.records.keys())}get values(){return Array.from(this.records.values())}get pending(){const e=[];return this.values.forEach(r=>{if(typeof r.response<\"u\")return;const i={topic:r.topic,request:hi(r.request.method,r.request.params,r.id),chainId:r.chainId};return e.push(i)}),e}async setJsonRpcRecords(e){await this.core.storage.setItem(this.storageKey,e)}async getJsonRpcRecords(){return await this.core.storage.getItem(this.storageKey)}getRecord(e){this.isInitialized();const r=this.records.get(e);if(!r){const{message:i}=V(\"NO_MATCHING_KEY\",`${this.name}: ${e}`);throw new Error(i)}return r}async persist(){await this.setJsonRpcRecords(this.values),this.events.emit(It.sync)}async restore(){try{const e=await this.getJsonRpcRecords();if(typeof e>\"u\"||!e.length)return;if(this.records.size){const{message:r}=V(\"RESTORE_WILL_OVERRIDE\",this.name);throw this.logger.error(r),new Error(r)}this.cached=e,this.logger.debug(`Successfully Restored records for ${this.name}`),this.logger.trace({type:\"method\",method:\"restore\",records:this.values})}catch(e){this.logger.debug(`Failed to Restore records for ${this.name}`),this.logger.error(e)}}registerEventListeners(){this.events.on(It.created,e=>{const r=It.created;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,record:e}),this.persist()}),this.events.on(It.updated,e=>{const r=It.updated;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,record:e}),this.persist()}),this.events.on(It.deleted,e=>{const r=It.deleted;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,record:e}),this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}class t_ extends Uh{constructor(e,r){super(e,r),this.core=e,this.logger=r,this.expirations=new Map,this.events=new it.exports.EventEmitter,this.name=N0,this.version=R0,this.cached=[],this.initialized=!1,this.storagePrefix=Ut,this.init=async()=>{this.initialized||(this.logger.trace(\"Initialized\"),await this.restore(),this.cached.forEach(i=>this.expirations.set(i.target,i)),this.cached=[],this.registerEventListeners(),this.initialized=!0)},this.has=i=>{try{const n=this.formatTarget(i);return typeof this.getExpiration(n)<\"u\"}catch{return!1}},this.set=(i,n)=>{this.isInitialized();const s=this.formatTarget(i),o={target:s,expiry:n};this.expirations.set(s,o),this.checkExpiry(s,o),this.events.emit(yt.created,{target:s,expiration:o})},this.get=i=>{this.isInitialized();const n=this.formatTarget(i);return this.getExpiration(n)},this.del=i=>{if(this.isInitialized(),this.has(i)){const n=this.formatTarget(i),s=this.getExpiration(n);this.expirations.delete(n),this.events.emit(yt.deleted,{target:n,expiration:s})}},this.on=(i,n)=>{this.events.on(i,n)},this.once=(i,n)=>{this.events.once(i,n)},this.off=(i,n)=>{this.events.off(i,n)},this.removeListener=(i,n)=>{this.events.removeListener(i,n)},this.logger=Se.generateChildLogger(r,this.name)}get context(){return Se.getLoggerContext(this.logger)}get storageKey(){return this.storagePrefix+this.version+\"//\"+this.name}get length(){return this.expirations.size}get keys(){return Array.from(this.expirations.keys())}get values(){return Array.from(this.expirations.values())}formatTarget(e){if(typeof e==\"string\")return hp(e);if(typeof e==\"number\")return lp(e);const{message:r}=V(\"UNKNOWN_TYPE\",`Target type: ${typeof e}`);throw new Error(r)}async setExpirations(e){await this.core.storage.setItem(this.storageKey,e)}async getExpirations(){return await this.core.storage.getItem(this.storageKey)}async persist(){await this.setExpirations(this.values),this.events.emit(yt.sync)}async restore(){try{const e=await this.getExpirations();if(typeof e>\"u\"||!e.length)return;if(this.expirations.size){const{message:r}=V(\"RESTORE_WILL_OVERRIDE\",this.name);throw this.logger.error(r),new Error(r)}this.cached=e,this.logger.debug(`Successfully Restored expirations for ${this.name}`),this.logger.trace({type:\"method\",method:\"restore\",expirations:this.values})}catch(e){this.logger.debug(`Failed to Restore expirations for ${this.name}`),this.logger.error(e)}}getExpiration(e){const r=this.expirations.get(e);if(!r){const{message:i}=V(\"NO_MATCHING_KEY\",`${this.name}: ${e}`);throw this.logger.error(i),new Error(i)}return r}checkExpiry(e,r){const{expiry:i}=r;Z.toMiliseconds(i)-Date.now()<=0&&this.expire(e,r)}expire(e,r){this.expirations.delete(e),this.events.emit(yt.expired,{target:e,expiration:r})}checkExpirations(){this.core.relayer.connected&&this.expirations.forEach((e,r)=>this.checkExpiry(r,e))}registerEventListeners(){this.core.heartbeat.on(vr.HEARTBEAT_EVENTS.pulse,()=>this.checkExpirations()),this.events.on(yt.created,e=>{const r=yt.created;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,data:e}),this.persist()}),this.events.on(yt.expired,e=>{const r=yt.expired;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,data:e}),this.persist()}),this.events.on(yt.deleted,e=>{const r=yt.deleted;this.logger.info(`Emitting ${r}`),this.logger.debug({type:\"event\",event:r,data:e}),this.persist()})}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}}var r_=Object.defineProperty,za=Object.getOwnPropertySymbols,i_=Object.prototype.hasOwnProperty,n_=Object.prototype.propertyIsEnumerable,Ka=(t,e,r)=>e in t?r_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,Va=(t,e)=>{for(var r in e||(e={}))i_.call(e,r)&&Ka(t,r,e[r]);if(za)for(var r of za(e))n_.call(e,r)&&Ka(t,r,e[r]);return t};class Mn extends Th{constructor(e){super(e),this.protocol=Ca,this.version=u0,this.name=$n,this.events=new it.exports.EventEmitter,this.initialized=!1,this.on=(i,n)=>this.events.on(i,n),this.once=(i,n)=>this.events.once(i,n),this.off=(i,n)=>this.events.off(i,n),this.removeListener=(i,n)=>this.events.removeListener(i,n),this.projectId=e?.projectId,this.relayUrl=e?.relayUrl||Fa;const r=typeof e?.logger<\"u\"&&typeof e?.logger!=\"string\"?e.logger:lr(Se.getDefaultLoggerOptions({level:e?.logger||h0.logger}));this.logger=Se.generateChildLogger(r,this.name),this.heartbeat=new vr.HeartBeat,this.crypto=new L0(this,this.logger,e?.keychain),this.history=new e_(this,this.logger),this.expirer=new t_(this,this.logger),this.storage=e!=null&&e.storage?e.storage:new cu(Va(Va({},l0),e?.storageOptions)),this.relayer=new Y0({core:this,logger:this.logger,relayUrl:this.relayUrl,projectId:this.projectId}),this.pairing=new Q0(this,this.logger)}static async init(e){const r=new Mn(e);return await r.initialize(),r}get context(){return Se.getLoggerContext(this.logger)}async start(){this.initialized||await this.initialize()}async initialize(){this.logger.trace(\"Initialized\");try{await this.crypto.init(),await this.history.init(),await this.expirer.init(),await this.relayer.init(),await this.heartbeat.init(),await this.pairing.init(),this.initialized=!0,this.logger.info(\"Core Initialization Success\")}catch(e){throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`,e),this.logger.error(e.message),e}}}const s_=Mn,Ga=\"wc\",ka=2,Wa=\"client\",jn=`${Ga}@${ka}:${Wa}:`,Bn={name:Wa,logger:\"error\",controller:!1,relayUrl:\"wss://relay.walletconnect.com\"},o_=\"proposal\",a_=\"session\",yi=Z.SEVEN_DAYS,c_=\"engine\",Hr={wc_sessionPropose:{req:{ttl:Z.FIVE_MINUTES,prompt:!0,tag:1100},res:{ttl:Z.FIVE_MINUTES,prompt:!1,tag:1101}},wc_sessionSettle:{req:{ttl:Z.FIVE_MINUTES,prompt:!1,tag:1102},res:{ttl:Z.FIVE_MINUTES,prompt:!1,tag:1103}},wc_sessionUpdate:{req:{ttl:Z.ONE_DAY,prompt:!1,tag:1104},res:{ttl:Z.ONE_DAY,prompt:!1,tag:1105}},wc_sessionExtend:{req:{ttl:Z.ONE_DAY,prompt:!1,tag:1106},res:{ttl:Z.ONE_DAY,prompt:!1,tag:1107}},wc_sessionRequest:{req:{ttl:Z.FIVE_MINUTES,prompt:!0,tag:1108},res:{ttl:Z.FIVE_MINUTES,prompt:!1,tag:1109}},wc_sessionEvent:{req:{ttl:Z.FIVE_MINUTES,prompt:!0,tag:1110},res:{ttl:Z.FIVE_MINUTES,prompt:!1,tag:1111}},wc_sessionDelete:{req:{ttl:Z.ONE_DAY,prompt:!1,tag:1112},res:{ttl:Z.ONE_DAY,prompt:!1,tag:1113}},wc_sessionPing:{req:{ttl:Z.THIRTY_SECONDS,prompt:!1,tag:1114},res:{ttl:Z.THIRTY_SECONDS,prompt:!1,tag:1115}}},Hn={min:Z.FIVE_MINUTES,max:Z.SEVEN_DAYS},u_=\"request\";var h_=Object.defineProperty,l_=Object.defineProperties,f_=Object.getOwnPropertyDescriptors,Ya=Object.getOwnPropertySymbols,d_=Object.prototype.hasOwnProperty,p_=Object.prototype.propertyIsEnumerable,Ja=(t,e,r)=>e in t?h_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,_t=(t,e)=>{for(var r in e||(e={}))d_.call(e,r)&&Ja(t,r,e[r]);if(Ya)for(var r of Ya(e))p_.call(e,r)&&Ja(t,r,e[r]);return t},qn=(t,e)=>l_(t,f_(e));class g_ extends jh{constructor(e){super(e),this.name=c_,this.events=new it.exports,this.initialized=!1,this.ignoredPayloadTypes=[Xt],this.init=async()=>{this.initialized||(await this.cleanup(),this.registerRelayerEvents(),this.registerExpirerEvents(),this.client.core.pairing.register({methods:Object.keys(Hr)}),this.initialized=!0)},this.connect=async r=>{this.isInitialized();const i=qn(_t({},r),{requiredNamespaces:r.requiredNamespaces||{},optionalNamespaces:r.optionalNamespaces||{}});await this.isValidConnect(i);const{pairingTopic:n,requiredNamespaces:s,optionalNamespaces:o,sessionProperties:c,relays:l}=i;let h=n,f,S=!1;if(h&&(S=this.client.core.pairing.pairings.get(h).active),!h||!S){const{topic:P,uri:y}=await this.client.core.pairing.create();h=P,f=y}const w=await this.client.core.crypto.generateKeyPair(),v=_t({requiredNamespaces:s,optionalNamespaces:o,relays:l??[{protocol:Ra}],proposer:{publicKey:w,metadata:this.client.metadata}},c&&{sessionProperties:c}),{reject:m,resolve:R,done:F}=Zt();if(this.events.once(Fe(\"session_connect\"),async({error:P,session:y})=>{if(P)m(P);else if(y){y.self.publicKey=w;const D=qn(_t({},y),{requiredNamespaces:y.requiredNamespaces,optionalNamespaces:y.optionalNamespaces});await this.client.session.set(y.topic,D),await this.setExpiry(y.topic,y.expiry),h&&await this.client.core.pairing.updateMetadata({topic:h,metadata:y.peer.metadata}),R(D)}}),!h){const{message:P}=V(\"NO_MATCHING_KEY\",`connect() pairing topic: ${h}`);throw new Error(P)}const H=await this.sendRequest(h,\"wc_sessionPropose\",v),x=xt(Z.FIVE_MINUTES);return await this.setProposal(H,_t({id:H,expiry:x},v)),{uri:f,approval:F}},this.pair=async r=>(this.isInitialized(),await this.client.core.pairing.pair(r)),this.approve=async r=>{this.isInitialized(),await this.isValidApprove(r);const{id:i,relayProtocol:n,namespaces:s,sessionProperties:o}=r,c=this.client.proposal.get(i);let{pairingTopic:l,proposer:h,requiredNamespaces:f,optionalNamespaces:S}=c;Lr(f)||(f=Sp(s,\"approve()\"));const w=await this.client.core.crypto.generateKeyPair(),v=h.publicKey,m=await this.client.core.crypto.generateSharedKey(w,v);l&&i&&(await this.client.core.pairing.updateMetadata({topic:l,metadata:h.metadata}),await this.sendResult(i,l,{relay:{protocol:n??\"irn\"},responderPublicKey:w}),await this.client.proposal.delete(i,$e(\"USER_DISCONNECTED\")),await this.client.core.pairing.activate({topic:l}));const R=_t({relay:{protocol:n??\"irn\"},namespaces:s,requiredNamespaces:f,optionalNamespaces:S,controller:{publicKey:w,metadata:this.client.metadata},expiry:xt(yi)},o&&{sessionProperties:o});await this.client.core.relayer.subscribe(m);const F=await this.sendRequest(m,\"wc_sessionSettle\",R),{done:H,resolve:x,reject:P}=Zt();this.events.once(Fe(\"session_approve\",F),({error:D})=>{D?P(D):x(this.client.session.get(m))});const y=qn(_t({},R),{topic:m,acknowledged:!1,self:R.controller,peer:{publicKey:h.publicKey,metadata:h.metadata},controller:w});return await this.client.session.set(m,y),await this.setExpiry(m,xt(yi)),{topic:m,acknowledged:H}},this.reject=async r=>{this.isInitialized(),await this.isValidReject(r);const{id:i,reason:n}=r,{pairingTopic:s}=this.client.proposal.get(i);s&&(await this.sendError(i,s,n),await this.client.proposal.delete(i,$e(\"USER_DISCONNECTED\")))},this.update=async r=>{this.isInitialized(),await this.isValidUpdate(r);const{topic:i,namespaces:n}=r,s=await this.sendRequest(i,\"wc_sessionUpdate\",{namespaces:n}),{done:o,resolve:c,reject:l}=Zt();return this.events.once(Fe(\"session_update\",s),({error:h})=>{h?l(h):c()}),await this.client.session.update(i,{namespaces:n}),{acknowledged:o}},this.extend=async r=>{this.isInitialized(),await this.isValidExtend(r);const{topic:i}=r,n=await this.sendRequest(i,\"wc_sessionExtend\",{}),{done:s,resolve:o,reject:c}=Zt();return this.events.once(Fe(\"session_extend\",n),({error:l})=>{l?c(l):o()}),await this.setExpiry(i,xt(yi)),{acknowledged:s}},this.request=async r=>{this.isInitialized(),await this.isValidRequest(r);const{chainId:i,request:n,topic:s,expiry:o}=r,c=await this.sendRequest(s,\"wc_sessionRequest\",{request:n,chainId:i},o),{done:l,resolve:h,reject:f}=Zt(o);return this.events.once(Fe(\"session_request\",c),({error:S,result:w})=>{S?f(S):h(w)}),this.client.events.emit(\"session_request_sent\",{topic:s,request:n,chainId:i}),await l()},this.respond=async r=>{this.isInitialized(),await this.isValidRespond(r);const{topic:i,response:n}=r,{id:s}=n;Ct(n)?await this.sendResult(s,i,n.result):wt(n)&&await this.sendError(s,i,n.error),this.deletePendingSessionRequest(r.response.id,{message:\"fulfilled\",code:0})},this.ping=async r=>{this.isInitialized(),await this.isValidPing(r);const{topic:i}=r;if(this.client.session.keys.includes(i)){const n=await this.sendRequest(i,\"wc_sessionPing\",{}),{done:s,resolve:o,reject:c}=Zt();this.events.once(Fe(\"session_ping\",n),({error:l})=>{l?c(l):o()}),await s()}else this.client.core.pairing.pairings.keys.includes(i)&&await this.client.core.pairing.ping({topic:i})},this.emit=async r=>{this.isInitialized(),await this.isValidEmit(r);const{topic:i,event:n,chainId:s}=r;await this.sendRequest(i,\"wc_sessionEvent\",{event:n,chainId:s})},this.disconnect=async r=>{this.isInitialized(),await this.isValidDisconnect(r);const{topic:i}=r;this.client.session.keys.includes(i)?(await this.sendRequest(i,\"wc_sessionDelete\",$e(\"USER_DISCONNECTED\")),await this.deleteSession(i)):await this.client.core.pairing.disconnect({topic:i})},this.find=r=>(this.isInitialized(),this.client.session.getAll().filter(i=>Ip(i,r))),this.getPendingSessionRequests=()=>(this.isInitialized(),this.client.pendingRequest.getAll()),this.deleteSession=async(r,i)=>{const{self:n}=this.client.session.get(r);await this.client.core.relayer.unsubscribe(r),await Promise.all([this.client.session.delete(r,$e(\"USER_DISCONNECTED\")),this.client.core.crypto.deleteKeyPair(n.publicKey),this.client.core.crypto.deleteSymKey(r),i?Promise.resolve():this.client.core.expirer.del(r)])},this.deleteProposal=async(r,i)=>{await Promise.all([this.client.proposal.delete(r,$e(\"USER_DISCONNECTED\")),i?Promise.resolve():this.client.core.expirer.del(r)])},this.deletePendingSessionRequest=async(r,i,n=!1)=>{await Promise.all([this.client.pendingRequest.delete(r,i),n?Promise.resolve():this.client.core.expirer.del(r)])},this.setExpiry=async(r,i)=>{this.client.session.keys.includes(r)&&await this.client.session.update(r,{expiry:i}),this.client.core.expirer.set(r,i)},this.setProposal=async(r,i)=>{await this.client.proposal.set(r,i),this.client.core.expirer.set(r,i.expiry)},this.setPendingSessionRequest=async r=>{const i=Hr.wc_sessionRequest.req.ttl,{id:n,topic:s,params:o}=r;await this.client.pendingRequest.set(n,{id:n,topic:s,params:o}),i&&this.client.core.expirer.set(n,xt(i))},this.sendRequest=async(r,i,n,s)=>{const o=hi(i,n),c=await this.client.core.crypto.encode(r,o),l=Hr[i].req;return s&&(l.ttl=s),this.client.core.history.set(r,o),this.client.core.relayer.publish(r,c,l),o.id},this.sendResult=async(r,i,n)=>{const s=An(r,n),o=await this.client.core.crypto.encode(i,s),c=await this.client.core.history.get(i,r),l=Hr[c.request.method].res;this.client.core.relayer.publish(i,o,l),await this.client.core.history.resolve(s)},this.sendError=async(r,i,n)=>{const s=li(r,n),o=await this.client.core.crypto.encode(i,s),c=await this.client.core.history.get(i,r),l=Hr[c.request.method].res;this.client.core.relayer.publish(i,o,l),await this.client.core.history.resolve(s)},this.cleanup=async()=>{const r=[],i=[];this.client.session.getAll().forEach(n=>{$t(n.expiry)&&r.push(n.topic)}),this.client.proposal.getAll().forEach(n=>{$t(n.expiry)&&i.push(n.id)}),await Promise.all([...r.map(n=>this.deleteSession(n)),...i.map(n=>this.deleteProposal(n))])},this.onRelayEventRequest=r=>{const{topic:i,payload:n}=r,s=n.method;switch(s){case\"wc_sessionPropose\":return this.onSessionProposeRequest(i,n);case\"wc_sessionSettle\":return this.onSessionSettleRequest(i,n);case\"wc_sessionUpdate\":return this.onSessionUpdateRequest(i,n);case\"wc_sessionExtend\":return this.onSessionExtendRequest(i,n);case\"wc_sessionPing\":return this.onSessionPingRequest(i,n);case\"wc_sessionDelete\":return this.onSessionDeleteRequest(i,n);case\"wc_sessionRequest\":return this.onSessionRequest(i,n);case\"wc_sessionEvent\":return this.onSessionEventRequest(i,n);default:return this.client.logger.info(`Unsupported request method ${s}`)}},this.onRelayEventResponse=async r=>{const{topic:i,payload:n}=r,s=(await this.client.core.history.get(i,n.id)).request.method;switch(s){case\"wc_sessionPropose\":return this.onSessionProposeResponse(i,n);case\"wc_sessionSettle\":return this.onSessionSettleResponse(i,n);case\"wc_sessionUpdate\":return this.onSessionUpdateResponse(i,n);case\"wc_sessionExtend\":return this.onSessionExtendResponse(i,n);case\"wc_sessionPing\":return this.onSessionPingResponse(i,n);case\"wc_sessionRequest\":return this.onSessionRequestResponse(i,n);default:return this.client.logger.info(`Unsupported response method ${s}`)}},this.onSessionProposeRequest=async(r,i)=>{const{params:n,id:s}=i;try{this.isValidConnect(_t({},i.params));const o=xt(Z.FIVE_MINUTES),c=_t({id:s,pairingTopic:r,expiry:o},n);await this.setProposal(s,c),this.client.events.emit(\"session_proposal\",{id:s,params:c})}catch(o){await this.sendError(s,r,o),this.client.logger.error(o)}},this.onSessionProposeResponse=async(r,i)=>{const{id:n}=i;if(Ct(i)){const{result:s}=i;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",result:s});const o=this.client.proposal.get(n);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",proposal:o});const c=o.proposer.publicKey;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",selfPublicKey:c});const l=s.responderPublicKey;this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",peerPublicKey:l});const h=await this.client.core.crypto.generateSharedKey(c,l);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",sessionTopic:h});const f=await this.client.core.relayer.subscribe(h);this.client.logger.trace({type:\"method\",method:\"onSessionProposeResponse\",subscriptionId:f}),await this.client.core.pairing.activate({topic:r})}else wt(i)&&(await this.client.proposal.delete(n,$e(\"USER_DISCONNECTED\")),this.events.emit(Fe(\"session_connect\"),{error:i.error}))},this.onSessionSettleRequest=async(r,i)=>{const{id:n,params:s}=i;try{this.isValidSessionSettleRequest(s);const{relay:o,controller:c,expiry:l,namespaces:h,requiredNamespaces:f,optionalNamespaces:S,sessionProperties:w}=i.params,v=_t({topic:r,relay:o,expiry:l,namespaces:h,acknowledged:!0,requiredNamespaces:f,optionalNamespaces:S,controller:c.publicKey,self:{publicKey:\"\",metadata:this.client.metadata},peer:{publicKey:c.publicKey,metadata:c.metadata}},w&&{sessionProperties:w});await this.sendResult(i.id,r,!0),this.events.emit(Fe(\"session_connect\"),{session:v})}catch(o){await this.sendError(n,r,o),this.client.logger.error(o)}},this.onSessionSettleResponse=async(r,i)=>{const{id:n}=i;Ct(i)?(await this.client.session.update(r,{acknowledged:!0}),this.events.emit(Fe(\"session_approve\",n),{})):wt(i)&&(await this.client.session.delete(r,$e(\"USER_DISCONNECTED\")),this.events.emit(Fe(\"session_approve\",n),{error:i.error}))},this.onSessionUpdateRequest=async(r,i)=>{const{params:n,id:s}=i;try{this.isValidUpdate(_t({topic:r},n)),await this.client.session.update(r,{namespaces:n.namespaces}),await this.sendResult(s,r,!0),this.client.events.emit(\"session_update\",{id:s,topic:r,params:n})}catch(o){await this.sendError(s,r,o),this.client.logger.error(o)}},this.onSessionUpdateResponse=(r,i)=>{const{id:n}=i;Ct(i)?this.events.emit(Fe(\"session_update\",n),{}):wt(i)&&this.events.emit(Fe(\"session_update\",n),{error:i.error})},this.onSessionExtendRequest=async(r,i)=>{const{id:n}=i;try{this.isValidExtend({topic:r}),await this.setExpiry(r,xt(yi)),await this.sendResult(n,r,!0),this.client.events.emit(\"session_extend\",{id:n,topic:r})}catch(s){await this.sendError(n,r,s),this.client.logger.error(s)}},this.onSessionExtendResponse=(r,i)=>{const{id:n}=i;Ct(i)?this.events.emit(Fe(\"session_extend\",n),{}):wt(i)&&this.events.emit(Fe(\"session_extend\",n),{error:i.error})},this.onSessionPingRequest=async(r,i)=>{const{id:n}=i;try{this.isValidPing({topic:r}),await this.sendResult(n,r,!0),this.client.events.emit(\"session_ping\",{id:n,topic:r})}catch(s){await this.sendError(n,r,s),this.client.logger.error(s)}},this.onSessionPingResponse=(r,i)=>{const{id:n}=i;setTimeout(()=>{Ct(i)?this.events.emit(Fe(\"session_ping\",n),{}):wt(i)&&this.events.emit(Fe(\"session_ping\",n),{error:i.error})},500)},this.onSessionDeleteRequest=async(r,i)=>{const{id:n}=i;try{this.isValidDisconnect({topic:r,reason:i.params}),this.client.core.relayer.once(tt.publish,async()=>{await this.deleteSession(r)}),await this.sendResult(n,r,!0),this.client.events.emit(\"session_delete\",{id:n,topic:r})}catch(s){await this.sendError(n,r,s),this.client.logger.error(s)}},this.onSessionRequest=async(r,i)=>{const{id:n,params:s}=i;try{this.isValidRequest(_t({topic:r},s)),await this.setPendingSessionRequest({id:n,topic:r,params:s}),this.client.events.emit(\"session_request\",{id:n,topic:r,params:s})}catch(o){await this.sendError(n,r,o),this.client.logger.error(o)}},this.onSessionRequestResponse=(r,i)=>{const{id:n}=i;Ct(i)?this.events.emit(Fe(\"session_request\",n),{result:i.result}):wt(i)&&this.events.emit(Fe(\"session_request\",n),{error:i.error})},this.onSessionEventRequest=async(r,i)=>{const{id:n,params:s}=i;try{this.isValidEmit(_t({topic:r},s)),this.client.events.emit(\"session_event\",{id:n,topic:r,params:s})}catch(o){await this.sendError(n,r,o),this.client.logger.error(o)}},this.isValidConnect=async r=>{if(!ft(r)){const{message:l}=V(\"MISSING_OR_INVALID\",`connect() params: ${JSON.stringify(r)}`);throw new Error(l)}const{pairingTopic:i,requiredNamespaces:n,optionalNamespaces:s,sessionProperties:o,relays:c}=r;if(at(i)||await this.isValidPairingTopic(i),!jp(c,!0)){const{message:l}=V(\"MISSING_OR_INVALID\",`connect() relays: ${c}`);throw new Error(l)}!at(n)&&Lr(n)!==0&&this.validateNamespaces(n,\"requiredNamespaces\"),!at(s)&&Lr(s)!==0&&this.validateNamespaces(s,\"optionalNamespaces\"),at(o)||this.validateSessionProps(o,\"sessionProperties\")},this.validateNamespaces=(r,i)=>{const n=Mp(r,\"connect()\",i);if(n)throw new Error(n.message)},this.isValidApprove=async r=>{if(!ft(r))throw new Error(V(\"MISSING_OR_INVALID\",`approve() params: ${r}`).message);const{id:i,namespaces:n,relayProtocol:s,sessionProperties:o}=r;await this.isValidProposalId(i);const c=this.client.proposal.get(i),l=ui(n,\"approve()\");if(l)throw new Error(l.message);const h=Sn(c.requiredNamespaces,n,\"approve()\",\"requiredNamespaces\");if(h)throw new Error(h.message);if(!Ke(s,!0)){const{message:f}=V(\"MISSING_OR_INVALID\",`approve() relayProtocol: ${s}`);throw new Error(f)}if(Object.keys(n).length>Object.keys(c.requiredNamespaces).length){const f=Object.keys(c.optionalNamespaces).filter(v=>n[v]),S={};for(const v in c.optionalNamespaces)f.includes(v)&&(S[v]=c.optionalNamespaces[v]);const w=Sn(S,n,\"approve()\",\"optionalNamespaces\");if(w)throw new Error(w.message)}at(o)||this.validateSessionProps(o,\"sessionProperties\")},this.isValidReject=async r=>{if(!ft(r)){const{message:s}=V(\"MISSING_OR_INVALID\",`reject() params: ${r}`);throw new Error(s)}const{id:i,reason:n}=r;if(await this.isValidProposalId(i),!Hp(n)){const{message:s}=V(\"MISSING_OR_INVALID\",`reject() reason: ${JSON.stringify(n)}`);throw new Error(s)}},this.isValidSessionSettleRequest=r=>{if(!ft(r)){const{message:h}=V(\"MISSING_OR_INVALID\",`onSessionSettleRequest() params: ${r}`);throw new Error(h)}const{relay:i,controller:n,namespaces:s,expiry:o}=r;if(!Zo(i)){const{message:h}=V(\"MISSING_OR_INVALID\",\"onSessionSettleRequest() relay protocol should be a string\");throw new Error(h)}const c=Np(n,\"onSessionSettleRequest()\");if(c)throw new Error(c.message);const l=ui(s,\"onSessionSettleRequest()\");if(l)throw new Error(l.message);if($t(o)){const{message:h}=V(\"EXPIRED\",\"onSessionSettleRequest()\");throw new Error(h)}},this.isValidUpdate=async r=>{if(!ft(r)){const{message:l}=V(\"MISSING_OR_INVALID\",`update() params: ${r}`);throw new Error(l)}const{topic:i,namespaces:n}=r;await this.isValidSessionTopic(i);const s=this.client.session.get(i),o=ui(n,\"update()\");if(o)throw new Error(o.message);const c=Sn(s.requiredNamespaces,n,\"update()\",\"requiredNamespaces\");if(c)throw new Error(c.message)},this.isValidExtend=async r=>{if(!ft(r)){const{message:n}=V(\"MISSING_OR_INVALID\",`extend() params: ${r}`);throw new Error(n)}const{topic:i}=r;await this.isValidSessionTopic(i)},this.isValidRequest=async r=>{if(!ft(r)){const{message:l}=V(\"MISSING_OR_INVALID\",`request() params: ${r}`);throw new Error(l)}const{topic:i,request:n,chainId:s,expiry:o}=r;await this.isValidSessionTopic(i);const{namespaces:c}=this.client.session.get(i);if(!Qo(c,s)){const{message:l}=V(\"MISSING_OR_INVALID\",`request() chainId: ${s}`);throw new Error(l)}if(!qp(n)){const{message:l}=V(\"MISSING_OR_INVALID\",`request() ${JSON.stringify(n)}`);throw new Error(l)}if(!Vp(c,s,n.method)){const{message:l}=V(\"MISSING_OR_INVALID\",`request() method: ${n.method}`);throw new Error(l)}if(o&&!kp(o,Hn)){const{message:l}=V(\"MISSING_OR_INVALID\",`request() expiry: ${o}. Expiry must be a number (in seconds) between ${Hn.min} and ${Hn.max}`);throw new Error(l)}},this.isValidRespond=async r=>{if(!ft(r)){const{message:s}=V(\"MISSING_OR_INVALID\",`respond() params: ${r}`);throw new Error(s)}const{topic:i,response:n}=r;if(await this.isValidSessionTopic(i),!zp(n)){const{message:s}=V(\"MISSING_OR_INVALID\",`respond() response: ${JSON.stringify(n)}`);throw new Error(s)}},this.isValidPing=async r=>{if(!ft(r)){const{message:n}=V(\"MISSING_OR_INVALID\",`ping() params: ${r}`);throw new Error(n)}const{topic:i}=r;await this.isValidSessionOrPairingTopic(i)},this.isValidEmit=async r=>{if(!ft(r)){const{message:c}=V(\"MISSING_OR_INVALID\",`emit() params: ${r}`);throw new Error(c)}const{topic:i,event:n,chainId:s}=r;await this.isValidSessionTopic(i);const{namespaces:o}=this.client.session.get(i);if(!Qo(o,s)){const{message:c}=V(\"MISSING_OR_INVALID\",`emit() chainId: ${s}`);throw new Error(c)}if(!Kp(n)){const{message:c}=V(\"MISSING_OR_INVALID\",`emit() event: ${JSON.stringify(n)}`);throw new Error(c)}if(!Gp(o,s,n.name)){const{message:c}=V(\"MISSING_OR_INVALID\",`emit() event: ${JSON.stringify(n)}`);throw new Error(c)}},this.isValidDisconnect=async r=>{if(!ft(r)){const{message:n}=V(\"MISSING_OR_INVALID\",`disconnect() params: ${r}`);throw new Error(n)}const{topic:i}=r;await this.isValidSessionOrPairingTopic(i)},this.validateSessionProps=(r,i)=>{Object.values(r).forEach(n=>{if(!Ke(n,!1)){const{message:s}=V(\"MISSING_OR_INVALID\",`${i} must be in Record<string, string> format. Received: ${JSON.stringify(n)}`);throw new Error(s)}})}}isInitialized(){if(!this.initialized){const{message:e}=V(\"NOT_INITIALIZED\",this.name);throw new Error(e)}}registerRelayerEvents(){this.client.core.relayer.on(tt.message,async e=>{const{topic:r,message:i}=e;if(this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(i)))return;const n=await this.client.core.crypto.decode(r,i);Tn(n)?(this.client.core.history.set(r,n),this.onRelayEventRequest({topic:r,payload:n})):Cn(n)&&(await this.client.core.history.resolve(n),this.onRelayEventResponse({topic:r,payload:n}))})}registerExpirerEvents(){this.client.core.expirer.on(yt.expired,async e=>{const{topic:r,id:i}=ko(e.target);if(i&&this.client.pendingRequest.keys.includes(i))return await this.deletePendingSessionRequest(i,V(\"EXPIRED\"),!0);r?this.client.session.keys.includes(r)&&(await this.deleteSession(r,!0),this.client.events.emit(\"session_expire\",{topic:r})):i&&(await this.deleteProposal(i,!0),this.client.events.emit(\"proposal_expire\",{id:i}))})}isValidPairingTopic(e){if(!Ke(e,!1)){const{message:r}=V(\"MISSING_OR_INVALID\",`pairing topic should be a string: ${e}`);throw new Error(r)}if(!this.client.core.pairing.pairings.keys.includes(e)){const{message:r}=V(\"NO_MATCHING_KEY\",`pairing topic doesn't exist: ${e}`);throw new Error(r)}if($t(this.client.core.pairing.pairings.get(e).expiry)){const{message:r}=V(\"EXPIRED\",`pairing topic: ${e}`);throw new Error(r)}}async isValidSessionTopic(e){if(!Ke(e,!1)){const{message:r}=V(\"MISSING_OR_INVALID\",`session topic should be a string: ${e}`);throw new Error(r)}if(!this.client.session.keys.includes(e)){const{message:r}=V(\"NO_MATCHING_KEY\",`session topic doesn't exist: ${e}`);throw new Error(r)}if($t(this.client.session.get(e).expiry)){await this.deleteSession(e);const{message:r}=V(\"EXPIRED\",`session topic: ${e}`);throw new Error(r)}}async isValidSessionOrPairingTopic(e){if(this.client.session.keys.includes(e))await this.isValidSessionTopic(e);else if(this.client.core.pairing.pairings.keys.includes(e))this.isValidPairingTopic(e);else if(Ke(e,!1)){const{message:r}=V(\"NO_MATCHING_KEY\",`session or pairing topic doesn't exist: ${e}`);throw new Error(r)}else{const{message:r}=V(\"MISSING_OR_INVALID\",`session or pairing topic should be a string: ${e}`);throw new Error(r)}}async isValidProposalId(e){if(!Bp(e)){const{message:r}=V(\"MISSING_OR_INVALID\",`proposal id should be a number: ${e}`);throw new Error(r)}if(!this.client.proposal.keys.includes(e)){const{message:r}=V(\"NO_MATCHING_KEY\",`proposal id doesn't exist: ${e}`);throw new Error(r)}if($t(this.client.proposal.get(e).expiry)){await this.deleteProposal(e);const{message:r}=V(\"EXPIRED\",`proposal id: ${e}`);throw new Error(r)}}}class y_ extends gi{constructor(e,r){super(e,r,o_,jn),this.core=e,this.logger=r}}class __ extends gi{constructor(e,r){super(e,r,a_,jn),this.core=e,this.logger=r}}class b_ extends gi{constructor(e,r){super(e,r,u_,jn),this.core=e,this.logger=r}}class zn extends Mh{constructor(e){super(e),this.protocol=Ga,this.version=ka,this.name=Bn.name,this.events=new it.exports.EventEmitter,this.on=(i,n)=>this.events.on(i,n),this.once=(i,n)=>this.events.once(i,n),this.off=(i,n)=>this.events.off(i,n),this.removeListener=(i,n)=>this.events.removeListener(i,n),this.removeAllListeners=i=>this.events.removeAllListeners(i),this.connect=async i=>{try{return await this.engine.connect(i)}catch(n){throw this.logger.error(n.message),n}},this.pair=async i=>{try{return await this.engine.pair(i)}catch(n){throw this.logger.error(n.message),n}},this.approve=async i=>{try{return await this.engine.approve(i)}catch(n){throw this.logger.error(n.message),n}},this.reject=async i=>{try{return await this.engine.reject(i)}catch(n){throw this.logger.error(n.message),n}},this.update=async i=>{try{return await this.engine.update(i)}catch(n){throw this.logger.error(n.message),n}},this.extend=async i=>{try{return await this.engine.extend(i)}catch(n){throw this.logger.error(n.message),n}},this.request=async i=>{try{return await this.engine.request(i)}catch(n){throw this.logger.error(n.message),n}},this.respond=async i=>{try{return await this.engine.respond(i)}catch(n){throw this.logger.error(n.message),n}},this.ping=async i=>{try{return await this.engine.ping(i)}catch(n){throw this.logger.error(n.message),n}},this.emit=async i=>{try{return await this.engine.emit(i)}catch(n){throw this.logger.error(n.message),n}},this.disconnect=async i=>{try{return await this.engine.disconnect(i)}catch(n){throw this.logger.error(n.message),n}},this.find=i=>{try{return this.engine.find(i)}catch(n){throw this.logger.error(n.message),n}},this.getPendingSessionRequests=()=>{try{return this.engine.getPendingSessionRequests()}catch(i){throw this.logger.error(i.message),i}},this.name=e?.name||Bn.name,this.metadata=e?.metadata||sp();const r=typeof e?.logger<\"u\"&&typeof e?.logger!=\"string\"?e.logger:lr(Se.getDefaultLoggerOptions({level:e?.logger||Bn.logger}));this.core=e?.core||new s_(e),this.logger=Se.generateChildLogger(r,this.name),this.session=new __(this.core,this.logger),this.proposal=new y_(this.core,this.logger),this.pendingRequest=new b_(this.core,this.logger),this.engine=new g_(this)}static async init(e){const r=new zn(e);return await r.initialize(),r}get context(){return Se.getLoggerContext(this.logger)}get pairing(){return this.core.pairing.pairings}async initialize(){this.logger.trace(\"Initialized\");try{await this.core.start(),await this.session.init(),await this.proposal.init(),await this.pendingRequest.init(),await this.engine.init(),this.logger.info(\"SignClient Initialization Success\")}catch(e){throw this.logger.info(\"SignClient Initialization Failure\"),this.logger.error(e.message),e}}}var Kn={exports:{}};(function(t,e){var r=typeof self<\"u\"?self:ze,i=function(){function s(){this.fetch=!1,this.DOMException=r.DOMException}return s.prototype=r,new s}();(function(s){(function(o){var c={searchParams:\"URLSearchParams\"in s,iterable:\"Symbol\"in s&&\"iterator\"in Symbol,blob:\"FileReader\"in s&&\"Blob\"in s&&function(){try{return new Blob,!0}catch{return!1}}(),formData:\"FormData\"in s,arrayBuffer:\"ArrayBuffer\"in s};function l(g){return g&&DataView.prototype.isPrototypeOf(g)}if(c.arrayBuffer)var h=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],f=ArrayBuffer.isView||function(g){return g&&h.indexOf(Object.prototype.toString.call(g))>-1};function S(g){if(typeof g!=\"string\"&&(g=String(g)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(g))throw new TypeError(\"Invalid character in header field name\");return g.toLowerCase()}function w(g){return typeof g!=\"string\"&&(g=String(g)),g}function v(g){var _={next:function(){var $=g.shift();return{done:$===void 0,value:$}}};return c.iterable&&(_[Symbol.iterator]=function(){return _}),_}function m(g){this.map={},g instanceof m?g.forEach(function(_,$){this.append($,_)},this):Array.isArray(g)?g.forEach(function(_){this.append(_[0],_[1])},this):g&&Object.getOwnPropertyNames(g).forEach(function(_){this.append(_,g[_])},this)}m.prototype.append=function(g,_){g=S(g),_=w(_);var $=this.map[g];this.map[g]=$?$+\", \"+_:_},m.prototype.delete=function(g){delete this.map[S(g)]},m.prototype.get=function(g){return g=S(g),this.has(g)?this.map[g]:null},m.prototype.has=function(g){return this.map.hasOwnProperty(S(g))},m.prototype.set=function(g,_){this.map[S(g)]=w(_)},m.prototype.forEach=function(g,_){for(var $ in this.map)this.map.hasOwnProperty($)&&g.call(_,this.map[$],$,this)},m.prototype.keys=function(){var g=[];return this.forEach(function(_,$){g.push($)}),v(g)},m.prototype.values=function(){var g=[];return this.forEach(function(_){g.push(_)}),v(g)},m.prototype.entries=function(){var g=[];return this.forEach(function(_,$){g.push([$,_])}),v(g)},c.iterable&&(m.prototype[Symbol.iterator]=m.prototype.entries);function R(g){if(g.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));g.bodyUsed=!0}function F(g){return new Promise(function(_,$){g.onload=function(){_(g.result)},g.onerror=function(){$(g.error)}})}function H(g){var _=new FileReader,$=F(_);return _.readAsArrayBuffer(g),$}function x(g){var _=new FileReader,$=F(_);return _.readAsText(g),$}function P(g){for(var _=new Uint8Array(g),$=new Array(_.length),U=0;U<_.length;U++)$[U]=String.fromCharCode(_[U]);return $.join(\"\")}function y(g){if(g.slice)return g.slice(0);var _=new Uint8Array(g.byteLength);return _.set(new Uint8Array(g)),_.buffer}function D(){return this.bodyUsed=!1,this._initBody=function(g){this._bodyInit=g,g?typeof g==\"string\"?this._bodyText=g:c.blob&&Blob.prototype.isPrototypeOf(g)?this._bodyBlob=g:c.formData&&FormData.prototype.isPrototypeOf(g)?this._bodyFormData=g:c.searchParams&&URLSearchParams.prototype.isPrototypeOf(g)?this._bodyText=g.toString():c.arrayBuffer&&c.blob&&l(g)?(this._bodyArrayBuffer=y(g.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):c.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(g)||f(g))?this._bodyArrayBuffer=y(g):this._bodyText=g=Object.prototype.toString.call(g):this._bodyText=\"\",this.headers.get(\"content-type\")||(typeof g==\"string\"?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):c.searchParams&&URLSearchParams.prototype.isPrototypeOf(g)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},c.blob&&(this.blob=function(){var g=R(this);if(g)return g;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?R(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(H)}),this.text=function(){var g=R(this);if(g)return g;if(this._bodyBlob)return x(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(P(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},c.formData&&(this.formData=function(){return this.text().then(M)}),this.json=function(){return this.text().then(JSON.parse)},this}var E=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function a(g){var _=g.toUpperCase();return E.indexOf(_)>-1?_:g}function d(g,_){_=_||{};var $=_.body;if(g instanceof d){if(g.bodyUsed)throw new TypeError(\"Already read\");this.url=g.url,this.credentials=g.credentials,_.headers||(this.headers=new m(g.headers)),this.method=g.method,this.mode=g.mode,this.signal=g.signal,!$&&g._bodyInit!=null&&($=g._bodyInit,g.bodyUsed=!0)}else this.url=String(g);if(this.credentials=_.credentials||this.credentials||\"same-origin\",(_.headers||!this.headers)&&(this.headers=new m(_.headers)),this.method=a(_.method||this.method||\"GET\"),this.mode=_.mode||this.mode||null,this.signal=_.signal||this.signal,this.referrer=null,(this.method===\"GET\"||this.method===\"HEAD\")&&$)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody($)}d.prototype.clone=function(){return new d(this,{body:this._bodyInit})};function M(g){var _=new FormData;return g.trim().split(\"&\").forEach(function($){if($){var U=$.split(\"=\"),N=U.shift().replace(/\\+/g,\" \"),C=U.join(\"=\").replace(/\\+/g,\" \");_.append(decodeURIComponent(N),decodeURIComponent(C))}}),_}function q(g){var _=new m,$=g.replace(/\\r?\\n[\\t ]+/g,\" \");return $.split(/\\r?\\n/).forEach(function(U){var N=U.split(\":\"),C=N.shift().trim();if(C){var j=N.join(\":\").trim();_.append(C,j)}}),_}D.call(d.prototype);function G(g,_){_||(_={}),this.type=\"default\",this.status=_.status===void 0?200:_.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in _?_.statusText:\"OK\",this.headers=new m(_.headers),this.url=_.url||\"\",this._initBody(g)}D.call(G.prototype),G.prototype.clone=function(){return new G(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new m(this.headers),url:this.url})},G.error=function(){var g=new G(null,{status:0,statusText:\"\"});return g.type=\"error\",g};var J=[301,302,303,307,308];G.redirect=function(g,_){if(J.indexOf(_)===-1)throw new RangeError(\"Invalid status code\");return new G(null,{status:_,headers:{location:g}})},o.DOMException=s.DOMException;try{new o.DOMException}catch{o.DOMException=function(_,$){this.message=_,this.name=$;var U=Error(_);this.stack=U.stack},o.DOMException.prototype=Object.create(Error.prototype),o.DOMException.prototype.constructor=o.DOMException}function X(g,_){return new Promise(function($,U){var N=new d(g,_);if(N.signal&&N.signal.aborted)return U(new o.DOMException(\"Aborted\",\"AbortError\"));var C=new XMLHttpRequest;function j(){C.abort()}C.onload=function(){var B={status:C.status,statusText:C.statusText,headers:q(C.getAllResponseHeaders()||\"\")};B.url=\"responseURL\"in C?C.responseURL:B.headers.get(\"X-Request-URL\");var Q=\"response\"in C?C.response:C.responseText;$(new G(Q,B))},C.onerror=function(){U(new TypeError(\"Network request failed\"))},C.ontimeout=function(){U(new TypeError(\"Network request failed\"))},C.onabort=function(){U(new o.DOMException(\"Aborted\",\"AbortError\"))},C.open(N.method,N.url,!0),N.credentials===\"include\"?C.withCredentials=!0:N.credentials===\"omit\"&&(C.withCredentials=!1),\"responseType\"in C&&c.blob&&(C.responseType=\"blob\"),N.headers.forEach(function(B,Q){C.setRequestHeader(Q,B)}),N.signal&&(N.signal.addEventListener(\"abort\",j),C.onreadystatechange=function(){C.readyState===4&&N.signal.removeEventListener(\"abort\",j)}),C.send(typeof N._bodyInit>\"u\"?null:N._bodyInit)})}return X.polyfill=!0,s.fetch||(s.fetch=X,s.Headers=m,s.Request=d,s.Response=G),o.Headers=m,o.Request=d,o.Response=G,o.fetch=X,Object.defineProperty(o,\"__esModule\",{value:!0}),o})({})})(i),i.fetch.ponyfill=!0,delete i.fetch.polyfill;var n=i;e=n.fetch,e.default=n.fetch,e.fetch=n.fetch,e.Headers=n.Headers,e.Request=n.Request,e.Response=n.Response,t.exports=e})(Kn,Kn.exports);var Xa=pc(Kn.exports);const Za={headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},method:\"POST\"},Qa=10;class _i{constructor(e){if(this.url=e,this.events=new it.exports.EventEmitter,this.isAvailable=!1,this.registering=!1,!ua(e))throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);this.url=e}get connected(){return this.isAvailable}get connecting(){return this.registering}on(e,r){this.events.on(e,r)}once(e,r){this.events.once(e,r)}off(e,r){this.events.off(e,r)}removeListener(e,r){this.events.removeListener(e,r)}async open(e=this.url){await this.register(e)}async close(){if(!this.isAvailable)throw new Error(\"Connection already closed\");this.onClose()}async send(e,r){this.isAvailable||await this.register();try{const i=Ir(e),s=await(await Xa(this.url,Object.assign(Object.assign({},Za),{body:i}))).json();this.onPayload({data:s})}catch(i){this.onError(e.id,i)}}async register(e=this.url){if(!ua(e))throw new Error(`Provided URL is not compatible with HTTP connection: ${e}`);if(this.registering){const r=this.events.getMaxListeners();return(this.events.listenerCount(\"register_error\")>=r||this.events.listenerCount(\"open\")>=r)&&this.events.setMaxListeners(r+1),new Promise((i,n)=>{this.events.once(\"register_error\",s=>{this.resetMaxListeners(),n(s)}),this.events.once(\"open\",()=>{if(this.resetMaxListeners(),typeof this.isAvailable>\"u\")return n(new Error(\"HTTP connection is missing or invalid\"));i()})})}this.url=e,this.registering=!0;try{const r=Ir({id:1,jsonrpc:\"2.0\",method:\"test\",params:[]});await Xa(e,Object.assign(Object.assign({},Za),{body:r})),this.onOpen()}catch(r){const i=this.parseError(r);throw this.events.emit(\"register_error\",i),this.onClose(),i}}onOpen(){this.isAvailable=!0,this.registering=!1,this.events.emit(\"open\")}onClose(){this.isAvailable=!1,this.registering=!1,this.events.emit(\"close\")}onPayload(e){if(typeof e.data>\"u\")return;const r=typeof e.data==\"string\"?Yi(e.data):e.data;this.events.emit(\"payload\",r)}onError(e,r){const i=this.parseError(r),n=i.message||i.toString(),s=li(e,n);this.events.emit(\"payload\",s)}parseError(e,r=this.url){return ia(e,r,\"HTTP\")}resetMaxListeners(){this.events.getMaxListeners()>Qa&&this.events.setMaxListeners(Qa)}}const ec=\"error\",v_=\"wss://relay.walletconnect.com\",w_=\"wc\",m_=\"universal_provider\",tc=`${w_}@${2}:${m_}:`,E_=\"https://rpc.walletconnect.com/v1\",qr={DEFAULT_CHAIN_CHANGED:\"default_chain_changed\"};function Mt(t,e,r){let i;const n=Vn(t);return e.rpcMap&&(i=e.rpcMap[n]),i||(i=`${E_}?chainId=eip155:${n}&projectId=${r}`),i}function Vn(t){return t.includes(\"eip155\")?Number(t.split(\":\")[1]):Number(t)}function D_(t,e){if(!e.includes(t))throw new Error(`Chain '${t}' not approved. Please use one of the following: ${e.toString()}`)}function S_(t){return t.map(e=>`${e.split(\":\")[0]}:${e.split(\":\")[1]}`)}const bi=(t,e)=>{const r=i=>{i.request!==e.request||i.topic!==e.topic||(t.events.removeListener(\"session_request_sent\",r),x_())};t.on(\"session_request_sent\",r)};function x_(){if(typeof window<\"u\")try{const t=window.localStorage.getItem(\"WALLETCONNECT_DEEPLINK_CHOICE\");if(t){const e=JSON.parse(t);window.open(e.href,\"_self\",\"noreferrer noopener\")}}catch(t){console.error(t)}}class O_{constructor(e){this.name=\"eip155\",this.namespace=e.namespace,this.client=e.client,this.events=e.events,this.httpProviders=this.createHttpProviders(),this.chainId=parseInt(this.getDefaultChain())}async request(e){var r;switch(e.request.method){case\"eth_requestAccounts\":return this.getAccounts();case\"eth_accounts\":return this.getAccounts();case\"wallet_switchEthereumChain\":return this.handleSwitchChain(e.request.params?(r=e.request.params[0])==null?void 0:r.chainId:\"0x0\"),null;case\"eth_chainId\":return parseInt(this.getDefaultChain())}return this.namespace.methods.includes(e.request.method)?(bi(this.client,e),await this.client.request(e)):this.getHttpProvider().request(e.request)}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}setDefaultChain(e,r){const i=Vn(e);if(!this.httpProviders[i]){const n=r||Mt(`${this.name}:${i}`,this.namespace,this.client.core.projectId);if(!n)throw new Error(`No RPC url provided for chainId: ${i}`);this.setHttpProvider(i,n)}this.chainId=i,this.events.emit(qr.DEFAULT_CHAIN_CHANGED,`${this.name}:${i}`)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId.toString();if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error(\"ChainId not found\");return e.split(\":\")[1]}createHttpProvider(e,r){const i=r||Mt(`${this.name}:${e}`,this.namespace,this.client.core.projectId);return typeof i>\"u\"?void 0:new Mr(new _i(i))}setHttpProvider(e,r){const i=this.createHttpProvider(e,r);i&&(this.httpProviders[e]=i)}createHttpProviders(){const e={};return this.namespace.chains.forEach(r=>{const i=Vn(r);e[i]=this.createHttpProvider(i)}),e}getAccounts(){const e=this.namespace.accounts;return e?e.filter(r=>r.split(\":\")[1]===this.chainId.toString()).map(r=>r.split(\":\")[2])||[]:[]}getHttpProvider(){const e=this.chainId,r=this.httpProviders[e];if(typeof r>\"u\")throw new Error(`JSON-RPC provider for ${e} not found`);return r}handleSwitchChain(e){const r=parseInt(e,16),i=`${this.name}:${r}`;D_(i,this.namespace.chains),this.setDefaultChain(`${r}`)}}class I_{constructor(e){this.name=\"solana\",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}request(e){return this.namespace.methods.includes(e.request.method)?(bi(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,r){if(!this.httpProviders[e]){const i=r||Mt(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.chainId=e,this.events.emit(qr.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error(\"ChainId not found\");return e.split(\":\")[1]}getAccounts(){const e=this.namespace.accounts;return e?e.filter(r=>r.split(\":\")[1]===this.chainId.toString()).map(r=>r.split(\":\")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(r=>{e[r]=this.createHttpProvider(r)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,r=this.httpProviders[e];if(typeof r>\"u\")throw new Error(`JSON-RPC provider for ${e} not found`);return r}setHttpProvider(e,r){const i=this.createHttpProvider(e,r);i&&(this.httpProviders[e]=i)}createHttpProvider(e,r){const i=r||Mt(e,this.namespace,this.client.core.projectId);return typeof i>\"u\"?void 0:new Mr(new _i(i))}}class P_{constructor(e){this.name=\"cosmos\",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error(\"ChainId not found\");return e.split(\":\")[1]}request(e){return this.namespace.methods.includes(e.request.method)?(bi(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,r){if(this.chainId=e,!this.httpProviders[e]){const i=r||Mt(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.events.emit(qr.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?e.filter(r=>r.split(\":\")[1]===this.chainId.toString()).map(r=>r.split(\":\")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(r=>{e[r]=this.createHttpProvider(r)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,r=this.httpProviders[e];if(typeof r>\"u\")throw new Error(`JSON-RPC provider for ${e} not found`);return r}setHttpProvider(e,r){const i=this.createHttpProvider(e,r);i&&(this.httpProviders[e]=i)}createHttpProvider(e,r){const i=r||Mt(e,this.namespace,this.client.core.projectId);return typeof i>\"u\"?void 0:new Mr(new _i(i))}}class A_{constructor(e){this.name=\"cip34\",this.namespace=e.namespace,this.events=e.events,this.client=e.client,this.chainId=this.getDefaultChain(),this.httpProviders=this.createHttpProviders()}updateNamespace(e){this.namespace=Object.assign(this.namespace,e)}requestAccounts(){return this.getAccounts()}getDefaultChain(){if(this.chainId)return this.chainId;if(this.namespace.defaultChain)return this.namespace.defaultChain;const e=this.namespace.chains[0];if(!e)throw new Error(\"ChainId not found\");return e.split(\":\")[1]}request(e){return this.namespace.methods.includes(e.request.method)?(bi(this.client,e),this.client.request(e)):this.getHttpProvider().request(e.request)}setDefaultChain(e,r){if(this.chainId=e,!this.httpProviders[e]){const i=r||Mt(`${this.name}:${e}`,this.namespace,this.client.core.projectId);if(!i)throw new Error(`No RPC url provided for chainId: ${e}`);this.setHttpProvider(e,i)}this.events.emit(qr.DEFAULT_CHAIN_CHANGED,`${this.name}:${this.chainId}`)}getAccounts(){const e=this.namespace.accounts;return e?e.filter(r=>r.split(\":\")[1]===this.chainId.toString()).map(r=>r.split(\":\")[2])||[]:[]}createHttpProviders(){const e={};return this.namespace.chains.forEach(r=>{e[r]=this.createHttpProvider(r)}),e}getHttpProvider(){const e=`${this.name}:${this.chainId}`,r=this.httpProviders[e];if(typeof r>\"u\")throw new Error(`JSON-RPC provider for ${e} not found`);return r}setHttpProvider(e,r){const i=this.createHttpProvider(e,r);i&&(this.httpProviders[e]=i)}createHttpProvider(e,r){const i=r||Mt(e,this.namespace);return typeof i>\"u\"?void 0:new Mr(new _i(i))}}var T_=Object.defineProperty,C_=Object.defineProperties,N_=Object.getOwnPropertyDescriptors,rc=Object.getOwnPropertySymbols,R_=Object.prototype.hasOwnProperty,F_=Object.prototype.propertyIsEnumerable,ic=(t,e,r)=>e in t?T_(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,vi=(t,e)=>{for(var r in e||(e={}))R_.call(e,r)&&ic(t,r,e[r]);if(rc)for(var r of rc(e))F_.call(e,r)&&ic(t,r,e[r]);return t},Gn=(t,e)=>C_(t,N_(e));class wi{constructor(e){this.events=new it.exports,this.rpcProviders={},this.providerOpts=e,this.logger=typeof e?.logger<\"u\"&&typeof e?.logger!=\"string\"?e.logger:lr(Se.getDefaultLoggerOptions({level:e?.logger||ec}))}static async init(e){const r=new wi(e);return await r.initialize(),r}async request(e,r){const[i,n]=this.validateChain(r);if(!this.session)throw new Error(\"Please call connect() before request()\");return await this.getProvider(i).request({request:vi({},e),chainId:`${i}:${n}`,topic:this.session.topic})}sendAsync(e,r,i){this.request(e,i).then(n=>r(null,n)).catch(n=>r(n,void 0))}async enable(){if(!this.client)throw new Error(\"Sign Client not initialized\");return this.session||await this.connect({namespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties}),await this.requestAccounts()}async disconnect(){var e;if(!this.session)throw new Error(\"Please call connect() before enable()\");await this.client.disconnect({topic:(e=this.session)==null?void 0:e.topic,reason:$e(\"USER_DISCONNECTED\")}),await this.cleanup()}async connect(e){if(!this.client)throw new Error(\"Sign Client not initialized\");if(this.setNamespaces(e),await this.cleanupPendingPairings(),!e.skipPairing)return await this.pair(e.pairingTopic)}on(e,r){this.events.on(e,r)}once(e,r){this.events.once(e,r)}removeListener(e,r){this.events.removeListener(e,r)}off(e,r){this.events.off(e,r)}get isWalletConnect(){return!0}async pair(e){const{uri:r,approval:i}=await this.client.connect({pairingTopic:e,requiredNamespaces:this.namespaces,optionalNamespaces:this.optionalNamespaces,sessionProperties:this.sessionProperties});return r&&(this.uri=r,this.events.emit(\"display_uri\",r)),this.session=await i(),this.createProviders(),this.onConnect(),this.session}setDefaultChain(e,r){try{const[i,n]=this.validateChain(e);this.getProvider(i).setDefaultChain(n,r)}catch(i){if(!/Please call connect/.test(i.message))throw i}}async cleanupPendingPairings(e={}){this.logger.info(\"Cleaning up inactive pairings...\");const r=this.client.pairing.getAll();if(Fr(r)){for(const i of r)e.deletePairings?this.client.core.expirer.set(i.topic,0):await this.client.core.relayer.subscriber.unsubscribe(i.topic);this.logger.info(`Inactive pairings cleared: ${r.length}`)}}async checkStorage(){if(this.namespaces=await this.getFromStore(\"namespaces\")||{},this.optionalNamespaces=await this.getFromStore(\"optionalNamespaces\")||{},this.client.session.length){const e=this.client.session.keys.length-1;this.session=this.client.session.get(this.client.session.keys[e]),this.createProviders()}}async initialize(){this.logger.trace(\"Initialized\"),await this.createClient(),await this.checkStorage(),this.registerEventListeners()}async createClient(){this.client=this.providerOpts.client||await zn.init({logger:this.providerOpts.logger||ec,relayUrl:this.providerOpts.relayUrl||v_,projectId:this.providerOpts.projectId,metadata:this.providerOpts.metadata,storageOptions:this.providerOpts.storageOptions,name:this.providerOpts.name}),this.logger.trace(\"SignClient Initialized\")}createProviders(){if(!this.client)throw new Error(\"Sign Client not initialized\");Object.keys(this.namespaces).forEach(e=>{var r,i,n;const s=((r=this.session)==null?void 0:r.namespaces[e].accounts)||[],o=S_(s),c=Gn(vi({},Object.assign(this.namespaces[e],(n=(i=this.optionalNamespaces)==null?void 0:i[e])!=null?n:{})),{accounts:s,chains:o});switch(e){case\"eip155\":this.rpcProviders[e]=new O_({client:this.client,namespace:c,events:this.events});break;case\"solana\":this.rpcProviders[e]=new I_({client:this.client,namespace:c,events:this.events});break;case\"cosmos\":this.rpcProviders[e]=new P_({client:this.client,namespace:c,events:this.events});break;case\"polkadot\":break;case\"cip34\":this.rpcProviders[e]=new A_({client:this.client,namespace:c,events:this.events});break}})}registerEventListeners(){if(typeof this.client>\"u\")throw new Error(\"Sign Client is not initialized\");this.client.on(\"session_ping\",e=>{this.events.emit(\"session_ping\",e)}),this.client.on(\"session_event\",e=>{const{params:r}=e,{event:i}=r;i.name===\"accountsChanged\"?this.events.emit(\"accountsChanged\",i.data):i.name===\"chainChanged\"?this.onChainChanged(r.chainId):this.events.emit(i.name,i.data),this.events.emit(\"session_event\",e)}),this.client.on(\"session_update\",({topic:e,params:r})=>{var i;const{namespaces:n}=r,s=(i=this.client)==null?void 0:i.session.get(e);this.session=Gn(vi({},s),{namespaces:n}),this.onSessionUpdate(),this.events.emit(\"session_update\",{topic:e,params:r})}),this.client.on(\"session_delete\",async e=>{await this.cleanup(),this.events.emit(\"session_delete\",e),this.events.emit(\"disconnect\",Gn(vi({},$e(\"USER_DISCONNECTED\")),{data:e.topic}))}),this.on(qr.DEFAULT_CHAIN_CHANGED,e=>{this.onChainChanged(e,!0)})}getProvider(e){if(!this.rpcProviders[e])throw new Error(`Provider not found: ${e}`);return this.rpcProviders[e]}onSessionUpdate(){Object.keys(this.rpcProviders).forEach(e=>{var r;this.getProvider(e).updateNamespace((r=this.session)==null?void 0:r.namespaces[e])})}setNamespaces(e){const{namespaces:r,optionalNamespaces:i,sessionProperties:n}=e;if(!r||!Object.keys(r).length)throw new Error(\"Namespaces must be not empty\");this.namespaces=r,this.optionalNamespaces=i,this.sessionProperties=n,this.persist(\"namespaces\",r),this.persist(\"optionalNamespaces\",i)}validateChain(e){const[r,i]=e?.split(\":\")||[\"\",\"\"];if(r&&!Object.keys(this.namespaces).includes(r))throw new Error(`Namespace '${r}' is not configured. Please call connect() first with namespace config.`);if(r&&i)return[r,i];const n=Object.keys(this.namespaces)[0],s=this.rpcProviders[n].getDefaultChain();return[n,s]}async requestAccounts(){const[e]=this.validateChain();return await this.getProvider(e).requestAccounts()}onChainChanged(e,r=!1){const[i,n]=this.validateChain(e);r||this.getProvider(i).setDefaultChain(n),this.namespaces[i].defaultChain=n,this.persist(\"namespaces\",this.namespaces),this.events.emit(\"chainChanged\",n)}onConnect(){this.events.emit(\"connect\",{session:this.session})}async cleanup(){this.session=void 0,await this.cleanupPendingPairings({deletePairings:!0})}persist(e,r){this.client.core.storage.setItem(`${tc}/${e}`,r)}async getFromStore(e){return await this.client.core.storage.getItem(`${tc}/${e}`)}}const L_=wi;zt.UniversalProvider=L_,zt.default=wi,Object.defineProperty(zt,\"__esModule\",{value:!0})});\n//# sourceMappingURL=index.umd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///841\n");
  },
  7026: module => {
    "use strict";
    eval("\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAyNi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbi1vdmVybGF5LXdlYnNpdGUvLi9ub2RlX21vZHVsZXMvd3MvYnJvd3Nlci5qcz83ZjczIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAnd3MgZG9lcyBub3Qgd29yayBpbiB0aGUgYnJvd3Nlci4gQnJvd3NlciBjbGllbnRzIG11c3QgdXNlIHRoZSBuYXRpdmUgJyArXG4gICAgICAnV2ViU29ja2V0IG9iamVjdCdcbiAgKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7026\n");
  }
} ]);