"use strict";

(self.webpackChunktoken_overlay_website = self.webpackChunktoken_overlay_website || []).push([ [ 403 ], {
  8403: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
    eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Web3WalletProvider\": () => (/* binding */ Web3WalletProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1023);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(241);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6677);\n/* provided dependency */ var console = __webpack_require__(5108);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\nvar Web3WalletProvider = (function () {\n    function Web3WalletProvider(client, safeConnectOptions) {\n        this.connections = {};\n        this.client = client;\n        this.safeConnectOptions = safeConnectOptions;\n    }\n    Web3WalletProvider.prototype.saveConnections = function () {\n        var savedConnections = {};\n        for (var address in this.connections) {\n            var con = this.connections[address];\n            savedConnections[address] = {\n                address: con.address,\n                chainId: con.chainId,\n                providerType: con.providerType,\n                blockchain: con.blockchain,\n                ethers: ethers__WEBPACK_IMPORTED_MODULE_1__\n            };\n        }\n        localStorage.setItem(Web3WalletProvider.LOCAL_STORAGE_KEY, JSON.stringify(savedConnections));\n    };\n    Web3WalletProvider.prototype.emitSavedConnection = function (address) {\n        if (Object.keys(this.connections).length &&\n            address) {\n            this.client.eventSender.emitConnectedWalletInstance(this.connections[address.toLocaleLowerCase()]);\n            return this.connections[address.toLocaleLowerCase()];\n        }\n        else {\n            return null;\n        }\n    };\n    Web3WalletProvider.prototype.emitNetworkChange = function (chainId) {\n        if (chainId) {\n            this.client.eventSender.emitNetworkChange(chainId);\n            return chainId;\n        }\n    };\n    Web3WalletProvider.prototype.deleteConnections = function () {\n        this.connections = {};\n        localStorage.removeItem(Web3WalletProvider.LOCAL_STORAGE_KEY);\n        localStorage.removeItem(\"walletconnect\");\n    };\n    Web3WalletProvider.prototype.loadConnections = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, state, _a, _b, _c, _i, address, connection, e_1;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        data = localStorage.getItem(Web3WalletProvider.LOCAL_STORAGE_KEY);\n                        if (!data)\n                            return [2];\n                        state = JSON.parse(data);\n                        if (!state)\n                            return [2];\n                        _a = state;\n                        _b = [];\n                        for (_c in _a)\n                            _b.push(_c);\n                        _i = 0;\n                        _d.label = 1;\n                    case 1:\n                        if (!(_i < _b.length)) return [3, 6];\n                        _c = _b[_i];\n                        if (!(_c in _a)) return [3, 5];\n                        address = _c;\n                        connection = state[address];\n                        _d.label = 2;\n                    case 2:\n                        _d.trys.push([2, 4, , 5]);\n                        return [4, this.connectWith(connection.providerType, true)];\n                    case 3:\n                        _d.sent();\n                        return [3, 5];\n                    case 4:\n                        e_1 = _d.sent();\n                        console.log(\"Wallet couldn't connect: \" + e_1.message);\n                        delete state[address];\n                        this.saveConnections();\n                        this.emitSavedConnection(address);\n                        return [3, 5];\n                    case 5:\n                        _i++;\n                        return [3, 1];\n                    case 6: return [2];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.connectWith = function (walletType, checkConnectionOnly) {\n        if (checkConnectionOnly === void 0) { checkConnectionOnly = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!walletType)\n                            throw new Error('Please provide a Wallet type to connect with.');\n                        if (!this[walletType]) return [3, 2];\n                        return [4, this[walletType](checkConnectionOnly)];\n                    case 1:\n                        address = _a.sent();\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'address', address);\n                        this.saveConnections();\n                        this.emitSavedConnection(address);\n                        return [2, address];\n                    case 2: throw new Error('Wallet type not found');\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.signMessage = function (address, message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var provider, signer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        provider = this.getWalletProvider(address);\n                        signer = provider.getSigner(address);\n                        return [4, signer.signMessage(message)];\n                    case 1: return [2, _a.sent()];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.getWalletProvider = function (address) {\n        var _a;\n        address = address.toLowerCase();\n        if (!((_a = this.connections[address]) === null || _a === void 0 ? void 0 : _a.provider))\n            throw new Error(\"Wallet provider not found for address\");\n        return this.connections[address].provider;\n    };\n    Web3WalletProvider.prototype.getConnectedWalletData = function () {\n        return Object.values(this.connections);\n    };\n    Web3WalletProvider.prototype.registerNewWalletAddress = function (address, chainId, providerType, provider, blockchain) {\n        if (blockchain === void 0) { blockchain = 'evm'; }\n        this.connections[address.toLowerCase()] = { address: address, chainId: chainId, providerType: providerType, provider: provider, blockchain: blockchain, ethers: ethers__WEBPACK_IMPORTED_MODULE_1__ };\n        return address;\n    };\n    Web3WalletProvider.prototype.registerProvider = function (provider, providerName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var accounts, chainId, curAccount;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, provider.listAccounts()];\n                    case 1:\n                        accounts = _a.sent();\n                        return [4, provider.detectNetwork()];\n                    case 2:\n                        chainId = (_a.sent()).chainId;\n                        if (accounts.length === 0) {\n                            throw new Error(\"No accounts found via wallet-connect.\");\n                        }\n                        curAccount = accounts[0];\n                        this.registerNewWalletAddress(curAccount, chainId, providerName, provider);\n                        provider.provider.on(\"accountsChanged\", function (accounts) {\n                            if (curAccount === accounts[0])\n                                return;\n                            delete _this.connections[curAccount.toLowerCase()];\n                            curAccount = accounts[0];\n                            _this.registerNewWalletAddress(curAccount, chainId, providerName, provider);\n                            _this.saveConnections();\n                            _this.emitSavedConnection(curAccount);\n                            _this.client.getTokenStore().clearCachedTokens();\n                            _this.client.enrichTokenLookupDataOnChainTokens();\n                        });\n                        provider.provider.on(\"chainChanged\", function (_chainId) {\n                            _this.registerNewWalletAddress(accounts[0], _chainId, providerName, provider);\n                            _this.saveConnections();\n                            _this.emitNetworkChange(_chainId);\n                        });\n                        return [2, accounts[0]];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.MetaMask = function (checkConnectionOnly) {\n        return __awaiter(this, void 0, void 0, function () {\n            var provider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'connect MetaMask');\n                        if (!(typeof window.ethereum !== 'undefined')) return [3, 2];\n                        return [4, window.ethereum.enable()];\n                    case 1:\n                        _a.sent();\n                        provider = new ethers__WEBPACK_IMPORTED_MODULE_2__/* .Web3Provider */ .Q(window.ethereum, \"any\");\n                        return [2, this.registerProvider(provider, \"MetaMask\")];\n                    case 2: throw new Error(\"MetaMask is not available. Please check the extension is supported and active.\");\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.WalletConnect = function (checkConnectionOnly) {\n        return __awaiter(this, void 0, void 0, function () {\n            var walletConnectProvider, walletConnect;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'connect Wallet Connect');\n                        return [4, __webpack_require__.e(/* import() */ 444).then(__webpack_require__.bind(__webpack_require__, 5444))];\n                    case 1:\n                        walletConnectProvider = _a.sent();\n                        return [4, walletConnectProvider.getWalletConnectProviderInstance(checkConnectionOnly)];\n                    case 2:\n                        walletConnect = _a.sent();\n                        return [2, new Promise(function (resolve, reject) {\n                                if (checkConnectionOnly) {\n                                    walletConnect.connector.on(\"display_uri\", function (err, payload) {\n                                        reject(new Error(\"Connection expired\"));\n                                    });\n                                }\n                                walletConnect.enable().then(function () {\n                                    var provider = new ethers__WEBPACK_IMPORTED_MODULE_2__/* .Web3Provider */ .Q(walletConnect, \"any\");\n                                    resolve(_this.registerProvider(provider, \"WalletConnect\"));\n                                }).catch(function (e) { return reject(e); });\n                            })];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.WalletConnectV2 = function (checkConnectionOnly) {\n        return __awaiter(this, void 0, void 0, function () {\n            var walletConnectProvider, universalWalletConnect, QRCodeModal, pairing;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'connect Wallet Connect V2');\n                        return [4, __webpack_require__.e(/* import() */ 387).then(__webpack_require__.bind(__webpack_require__, 9387))];\n                    case 1:\n                        walletConnectProvider = _a.sent();\n                        return [4, walletConnectProvider.getWalletConnectV2ProviderInstance()];\n                    case 2:\n                        universalWalletConnect = _a.sent();\n                        universalWalletConnect.on(\"display_uri\", function (uri) { return __awaiter(_this, void 0, void 0, function () {\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        console.log(\"EVENT\", \"QR Code Modal open\");\n                                        return [4, __webpack_require__.e(/* import() */ 337).then(__webpack_require__.t.bind(__webpack_require__, 4337, 23))];\n                                    case 1:\n                                        QRCodeModal = (_a.sent()).default;\n                                        QRCodeModal.open(uri, function () {\n                                            _this.client.getUi().showError('User closed modal');\n                                        });\n                                        return [2];\n                                }\n                            });\n                        }); });\n                        universalWalletConnect.on(\"session_delete\", function (_a) {\n                            var id = _a.id, topic = _a.topic;\n                            console.log(\"WC V2 EVENT\", \"session_deleted\");\n                            _this.client.disconnectWallet();\n                            var ui = _this.client.getUi();\n                            if (ui)\n                                ui.updateUI(\"wallet\");\n                        });\n                        if (!!checkConnectionOnly) return [3, 4];\n                        pairing = void 0;\n                        return [4, universalWalletConnect.connect({\n                                namespaces: {\n                                    eip155: {\n                                        methods: [\n                                            \"eth_sendTransaction\",\n                                            \"eth_signTransaction\",\n                                            \"eth_sign\",\n                                            \"personal_sign\",\n                                            \"eth_signTypedData\",\n                                        ],\n                                        chains: walletConnectProvider.WC_V2_CHAINS,\n                                        events: [\"chainChanged\", \"accountsChanged\"],\n                                        rpcMap: walletConnectProvider.CUSTOM_RPCS_FOR_WC_V2\n                                    },\n                                },\n                                pairingTopic: pairing === null || pairing === void 0 ? void 0 : pairing.topic,\n                            })];\n                    case 3:\n                        _a.sent();\n                        QRCodeModal.close();\n                        _a.label = 4;\n                    case 4: return [2, new Promise(function (resolve, reject) {\n                            universalWalletConnect.enable().then(function () {\n                                var provider = new ethers__WEBPACK_IMPORTED_MODULE_2__/* .Web3Provider */ .Q(universalWalletConnect);\n                                resolve(_this.registerProvider(provider, \"WalletConnectV2\"));\n                            }).catch(function (e) {\n                                reject(e);\n                            });\n                        })];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.Torus = function (checkConnectionOnly) {\n        return __awaiter(this, void 0, void 0, function () {\n            var TorusProvider, torus, provider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, __webpack_require__.e(/* import() */ 681).then(__webpack_require__.bind(__webpack_require__, 4681))];\n                    case 1:\n                        TorusProvider = _a.sent();\n                        return [4, TorusProvider.getTorusProviderInstance()];\n                    case 2:\n                        torus = _a.sent();\n                        return [4, torus.init()];\n                    case 3:\n                        _a.sent();\n                        return [4, torus.login()];\n                    case 4:\n                        _a.sent();\n                        provider = new ethers__WEBPACK_IMPORTED_MODULE_2__/* .Web3Provider */ .Q(torus.provider, \"any\");\n                        return [2, this.registerProvider(provider, \"Torus\")];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.Phantom = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, accountAddress;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'connect Phantom');\n                        if (!(typeof window.solana !== 'undefined')) return [3, 2];\n                        return [4, window.solana.connect()];\n                    case 1:\n                        connection = _a.sent();\n                        accountAddress = connection.publicKey.toBase58();\n                        return [2, this.registerNewWalletAddress(accountAddress, \"mainnet-beta\", 'phantom', window.solana, 'solana')];\n                    case 2: throw new Error(\"MetaMask is not available. Please check the extension is supported and active.\");\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.SafeConnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var provider, address;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_0__/* .logger */ .kg)(2, 'connect SafeConnect');\n                        return [4, this.getSafeConnectProvider()];\n                    case 1:\n                        provider = _a.sent();\n                        return [4, provider.initSafeConnect()];\n                    case 2:\n                        address = _a.sent();\n                        this.registerNewWalletAddress(address, 1, \"SafeConnect\", provider);\n                        return [2, address];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.prototype.safeConnectAvailable = function () {\n        return this.safeConnectOptions !== undefined;\n    };\n    Web3WalletProvider.prototype.getSafeConnectProvider = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var SafeConnectProvider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4, Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 7393))];\n                    case 1:\n                        SafeConnectProvider = (_a.sent()).SafeConnectProvider;\n                        return [2, new SafeConnectProvider(this.client.getUi(), this.safeConnectOptions)];\n                }\n            });\n        });\n    };\n    Web3WalletProvider.LOCAL_STORAGE_KEY = \"tn-wallet-connections\";\n    return Web3WalletProvider;\n}());\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Web3WalletProvider);\n//# sourceMappingURL=Web3WalletProvider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8403\n");
  }
} ]);