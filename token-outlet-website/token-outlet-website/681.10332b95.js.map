{"version":3,"file":"681.10332b95.js","mappings":"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","sources":["webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/typeof.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/regenerator/index.js","webpack://token-outlet-website/./node_modules/node_modules/queue-microtask/index.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/toArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","webpack://token-outlet-website/./node_modules/@onflow/util-actor/src/mailbox/index.js","webpack://token-outlet-website/./node_modules/@onflow/config/src/config.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/default-config.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/VERSION.js","webpack://token-outlet-website/./node_modules/@onflow/util-invariant/src/index.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://token-outlet-website/./node_modules/@onflow/util-logger/src/util-logger.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/createSuper.js","webpack://token-outlet-website/./node_modules/node_modules/base64-js/index.js","webpack://token-outlet-website/./node_modules/@onflow/rlp/src/index.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/construct.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://token-outlet-website/./node_modules/node_modules/ieee754/index.js","webpack://token-outlet-website/./node_modules/node_modules/buffer/index.js","webpack://token-outlet-website/./node_modules/node_modules/node-fetch/browser.js","webpack://token-outlet-website/./node_modules/@onflow/util-address/src/index.js","webpack://token-outlet-website/./node_modules/@onflow/transport-http/src/http-request.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/copy/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/chi/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/iota/round-constants/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/iota/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/rho-pi/index.js","webpack://token-outlet-website/./node_modules/@onflow/util-template/src/template.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://token-outlet-website/./node_modules/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/theta/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/permute/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/sponge/index.js","webpack://token-outlet-website/./node_modules/node_modules/sha3/index.js","webpack://token-outlet-website/./node_modules/@onflow/sdk/src/interaction/interaction.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/utils/is.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/utils/normalize-args.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/document/document.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/interaction-template/interaction-template.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/derive-cadence-by-network.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/utils/derive-dependencies.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/utils/prep-template-opts.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/utils/pre.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/query.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/fetch-services.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/merge-services.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/__vsn.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/frame.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/back-channel-rpc.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/local-view.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/service.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/pre-authz.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/authz.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/authn.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/open-id.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/user-signature.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/account-proof.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/authn-refresh.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/build-user.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/service-of-type.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/service-endpoint.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/fetch-service.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/polling-response.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/poll.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/render-frame.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/render-pop.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/render-tab.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/exec-local.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/http-post.js","webpack://token-outlet-website/./node_modules/@onflow/util-uid/src/util-uid.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/buildMessageHandler.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/frame.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/pop.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/tab.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/utils/extension.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/plugins.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/iframe-rpc.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/pop-rpc.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/tab-rpc.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/strategies/ext-rpc.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/exec-service/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/service/composite-signature.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/discovery/utils.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/discovery/services.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/discovery/services/authn.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/discovery/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/utils/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/current-user/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/mutate.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/wallet-utils/on-message-from-fcl.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/wallet-utils/send-msg-to-fcl.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/wallet-utils/encode-account-proof.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/wallet-utils/CompositeSignature.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/wallet-utils/inject-ext-service.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/app-utils/verify-signatures.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/exec/verify.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/serialize/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/transaction/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/events/index.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/utils/hash.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/generate-template-id.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/get-interaction-template-audits.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/utils/generate-import.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/utils/find-imports.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/generate-dependency-pin.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/normalizers/interaction-template/interaction-template-interface.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/generate-template-interface-id.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/verify-dependency-pin-same-at-block.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/get-template-message.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/interaction-template-utils/get-template-argument-message.js","webpack://token-outlet-website/./node_modules/@onflow/fcl/src/fcl.js","webpack://token-outlet-website/../../src/wallet/FlowProvider.ts"],"sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","let promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst GET_ALL = \"GET_ALL_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst CLEAR = \"CLEAR_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [GET_ALL]: (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [CLEAR]: (ctx, letter) => {\n    let keys = Object.keys(ctx.all())\n    for (let key of keys) ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\nasync function first(wants = [], fallback) {\n  if (!wants.length) return fallback\n  const [head, ...rest] = wants\n  const ret = await get(head)\n  if (ret == null) return first(rest, fallback)\n  return ret\n}\n\nfunction all() {\n  return send(NAME, GET_ALL, null, {expectReply: true, timeout: 10})\n}\n\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\nexport function clearConfig() {\n  return send(NAME, CLEAR)\n}\n\nfunction resetConfig(oldConfig) {\n  return clearConfig().then(config(oldConfig))\n}\n\nfunction config(values) {\n  if (values != null && typeof values === \"object\") {\n    Object.keys(values).map(d => put(d, values[d]))\n  }\n\n  return {\n    put,\n    get,\n    all,\n    first,\n    update,\n    delete: _delete,\n    where,\n    subscribe,\n    overload,\n  }\n}\n\nconfig.put = put\nconfig.get = get\nconfig.all = all\nconfig.first = first\nconfig.update = update\nconfig.delete = _delete\nconfig.where = where\nconfig.subscribe = subscribe\nconfig.overload = overload\n\nexport {config}\n\nconst noop = v => v\nfunction overload(opts = {}, callback = noop) {\n  return new Promise(async (resolve, reject) => {\n    const oldConfig = await all()\n    try {\n      config(opts)\n      var result = await callback(await all())\n      await resetConfig(oldConfig)\n      resolve(result)\n    } catch (error) {\n      await resetConfig(oldConfig)\n      reject(error)\n    }\n  })\n}\n","import {config} from \"@onflow/config\"\n\nconst isServerSide = () => typeof window === \"undefined\"\n\nconst SESSION_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(sessionStorage.getItem(key)),\n  put: async (key, value) => sessionStorage.setItem(key, JSON.stringify(value)),\n}\n\nconfig({\n  \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n  \"fcl.storage.default\": SESSION_STORAGE,\n})\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","export function invariant(fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {config} from \"@onflow/config\"\n\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import {Buffer} from \"buffer\"\n\nexport {Buffer}\n\n/**\n * Built on top of rlp library, removing the BN dependency for the flow.\n * Package : https://github.com/ethereumjs/rlp\n * RLP License : https://github.com/ethereumjs/rlp/blob/master/LICENSE\n *\n * ethereumjs/rlp is licensed under the\n * Mozilla Public License 2.0\n * Permissions of this weak copyleft license are conditioned on making available source code of licensed files and modifications of those files under the same license (or in certain cases, one of the GNU licenses). Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. However, a larger work using the licensed work may be distributed under different terms and without source code for files added in the larger work.\n **/\n\n/**\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nexport function encode(input) {\n  if (Array.isArray(input)) {\n    var output = []\n    for (var i = 0; i < input.length; i++) {\n      output.push(encode(input[i]))\n    }\n    var buf = Buffer.concat(output)\n    return Buffer.concat([encodeLength(buf.length, 192), buf])\n  } else {\n    var inputBuf = toBuffer(input)\n    return inputBuf.length === 1 && inputBuf[0] < 128\n      ? inputBuf\n      : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf])\n  }\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n  if (v.slice(0, 2) === \"00\") {\n    throw new Error(\"invalid RLP: extra zeros\")\n  }\n  return parseInt(v, base)\n}\nfunction encodeLength(len, offset) {\n  if (len < 56) {\n    return Buffer.from([len + offset])\n  } else {\n    var hexLength = intToHex(len)\n    var lLength = hexLength.length / 2\n    var firstByte = intToHex(offset + 55 + lLength)\n    return Buffer.from(firstByte + hexLength, \"hex\")\n  }\n}\n\nfunction decode(input, stream) {\n  if (stream === void 0) {\n    stream = false\n  }\n  if (!input || input.length === 0) {\n    return Buffer.from([])\n  }\n  var inputBuffer = toBuffer(input)\n  var decoded = _decode(inputBuffer)\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error(\"invalid remainder\")\n  }\n  return decoded.data\n}\n\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nexport function getLength(input) {\n  if (!input || input.length === 0) {\n    return Buffer.from([])\n  }\n  var inputBuffer = toBuffer(input)\n  var firstByte = inputBuffer[0]\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf\n  } else {\n    // a list  over 55 bytes long\n    var llength = firstByte - 0xf6\n    var length = safeParseInt(inputBuffer.slice(1, llength).toString(\"hex\"), 16)\n    return llength + length\n  }\n}\n\n/** Decode an input with RLP */\nfunction _decode(input) {\n  var length, llength, data, innerRemainder, d\n  var decoded = []\n  var firstByte = input[0]\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Buffer.from([])\n    } else {\n      data = input.slice(1, length)\n    }\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error(\"invalid rlp encoding: byte must be less 0x80\")\n    }\n    return {\n      data: data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    llength = firstByte - 0xb6\n    length = safeParseInt(input.slice(1, llength).toString(\"hex\"), 16)\n    data = input.slice(llength, length + llength)\n    if (data.length < length) {\n      throw new Error(\"invalid RLP\")\n    }\n    return {\n      data: data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = input.slice(1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6\n    length = safeParseInt(input.slice(1, llength).toString(\"hex\"), 16)\n    var totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error(\"invalid rlp: total length is larger than the data\")\n    }\n    innerRemainder = input.slice(llength, totalLength)\n    if (innerRemainder.length === 0) {\n      throw new Error(\"invalid rlp, List has a invalid length\")\n    }\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n  return str.slice(0, 2) === \"0x\"\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n  if (typeof str !== \"string\") {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n  if (integer < 0) {\n    throw new Error(\"Invalid integer as argument, must be unsigned!\")\n  }\n  var hex = integer.toString(16)\n  return hex.length % 2 ? \"0\" + hex : hex\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n  return a.length % 2 ? \"0\" + a : a\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n  var hex = intToHex(integer)\n  return Buffer.from(hex, \"hex\")\n}\n\n/** Transform anything into a Buffer */\nexport function toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === \"string\") {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), \"hex\")\n      } else {\n        return Buffer.from(v)\n      }\n    } else if (typeof v === \"number\") {\n      if (!v) {\n        return Buffer.from([])\n      } else {\n        return intToBuffer(v)\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([])\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v)\n    } else {\n      throw new Error(\"invalid type\")\n    }\n  }\n  return v\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","export function sansPrefix(address) {\n  if (address == null) return null\n  return address.replace(/^0x/, \"\").replace(/^Fx/, \"\")\n}\n\nexport function withPrefix(address) {\n  if (address == null) return null\n  return \"0x\" + sansPrefix(address)\n}\n\nexport function display(address) {\n  return withPrefix(address)\n}\n","import * as logger from \"@onflow/util-logger\"\nimport fetchTransport from \"node-fetch\"\n\nclass HTTPRequestError extends Error {\n  constructor({\n    error,\n    hostname,\n    path,\n    method,\n    requestBody,\n    responseBody,\n    responseStatusText,\n    statusCode,\n  }) {\n    const msg = `\n      HTTP Request Error: An error occurred when interacting with the Access API.\n      ${error ? `error=${error}` : \"\"}\n      ${hostname ? `hostname=${hostname}` : \"\"}\n      ${path ? `path=${path}` : \"\"}\n      ${method ? `method=${method}` : \"\"}\n      ${requestBody ? `requestBody=${requestBody}` : \"\"}\n      ${responseBody ? `responseBody=${responseBody}` : \"\"}\n      ${responseStatusText ? `responseStatusText=${responseStatusText}` : \"\"}\n      ${statusCode ? `statusCode=${statusCode}` : \"\"}\n    `\n    super(msg)\n\n    this.name = \"HTTP Request Error\"\n    this.statusCode = statusCode\n    this.errorMessage = error\n  }\n}\n\n/**\n * Creates an HTTP Request to be sent to a REST Access API via Fetch API.\n *\n * @param {Object} options - Options for the HTTP Request\n * @param {String} options.hostname - Access API Hostname\n * @param {String} options.path - Path to the resource on the Access API\n * @param {String} options.method - HTTP Method\n * @param {Object} options.body - HTTP Request Body\n * @param {Object | Headers} [options.headers] - HTTP Request Headers\n *\n * @returns JSON object response from Access API.\n */\nexport async function httpRequest({\n  hostname,\n  path,\n  method,\n  body,\n  headers,\n  retryLimit = 5,\n  retryIntervalMs = 1000,\n}) {\n  const bodyJSON = body ? JSON.stringify(body) : null\n\n  function makeRequest() {\n    return fetchTransport(`${hostname}${path}`, {\n      method: method,\n      body: bodyJSON,\n      headers,\n    })\n      .then(async res => {\n        if (res.ok) {\n          return res.json()\n        }\n\n        const responseText = res.body ? await res.text() : null\n        const response = safeParseJSON(responseText)\n\n        throw new HTTPRequestError({\n          error: response?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n          responseBody: responseText,\n          responseStatusText: res.statusText,\n          statusCode: res.status,\n        })\n      })\n      .catch(async e => {\n        if (e instanceof HTTPRequestError) {\n          throw e\n        }\n\n        // Show AN error for all network errors\n        await logger.log({\n          title: \"Access Node Error\",\n          message: `The provided access node ${hostname} does not appear to be a valid REST/HTTP access node.\nPlease verify that you are not unintentionally using a GRPC access node.\nSee more here: https://docs.onflow.org/fcl/reference/sdk-guidelines/#connect`,\n          level: logger.LEVELS.error,\n        })\n\n        throw new HTTPRequestError({\n          error: e?.message,\n          hostname,\n          path,\n          method,\n          requestBody: bodyJSON,\n        })\n      })\n  }\n\n  async function requestLoop(retryAttempt = 0) {\n    try {\n      const resp = await makeRequest()\n      return resp\n    } catch (error) {\n      const retryStatusCodes = [408, 429, 500, 502, 503, 504]\n\n      if (retryStatusCodes.includes(error.statusCode)) {\n        return await new Promise((resolve, reject) => {\n          if (retryAttempt < retryLimit) {\n            console.warn(\n              `Access node unavailable, retrying in ${retryIntervalMs} ms...`\n            )\n            setTimeout(() => {\n              resolve(requestLoop(retryAttempt + 1))\n            }, retryIntervalMs)\n          } else {\n            reject(error)\n          }\n        })\n      } else {\n        throw error\n      }\n    }\n  }\n\n  // Keep retrying request until server available or max attempts exceeded\n  return await requestLoop()\n}\n\nfunction safeParseJSON(data) {\n  try {\n    return JSON.parse(data)\n  } catch {\n    return null\n  }\n}\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","import {log} from \"@onflow/util-logger\"\n\nexport function interleave(a = [], b = [], c = []) {\n  if (!a.length && !b.length) return c\n  if (!a.length) return c\n  if (!b.length) return [...c, a[0]]\n\n  const [aHead, ...aRest] = a\n  const [bHead, ...bRest] = b\n\n  if (aHead !== undefined) c.push(aHead)\n  if (bHead !== undefined) c.push(bHead)\n\n  return interleave(aRest, bRest, c)\n}\n\nfunction recApply(d) {\n  return function (arg1) {\n    if (typeof arg1 === \"function\") {\n      log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject: \"Interopolation of functions into template literals\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n      })\n      return recApply(d)(arg1(d))\n    }\n    return String(arg1)\n  }\n}\n\nexport function template(head, ...rest) {\n  if (typeof head === \"string\") return () => head\n  if (Array.isArray(head)) {\n    return d =>\n      interleave(head, rest.map(recApply(d)))\n        .join(\"\")\n        .trim()\n  }\n  return head\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct\n\n  invariant(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\")\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId),\n  }\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  if (acct.authorization && isFn(acct.authorization))\n    acct = {resolve: acct.authorization}\n  if (!acct.authorization && isFn(acct)) acct = {resolve: acct}\n\n  const resolve = acct.resolve\n  if (resolve)\n    acct.resolve = (acct, ...rest) =>\n      [resolve, prepAccountKeyId].reduce(\n        async (d, fn) => fn(await d, ...rest),\n        acct\n      )\n  acct = prepAccountKeyId(acct)\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else if (role === PAYER) {\n    ix.payer.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport fetchTransport from \"node-fetch\"\nimport {config} from \"@onflow/config\"\n\nasync function httpDocumentResolver({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n\n  let res\n  try {\n    res = await fetchTransport(url)\n  } catch (e) {\n    throw new Error(\"httpDocumentResolver Error: Failed to retrieve document.\")\n  }\n\n  let document = res.ok ? await res.json() : null\n\n  return document\n}\n\nconst DOCUMENT_RESOLVERS = new Map([\n  [\"http\", httpDocumentResolver],\n  [\"https\", httpDocumentResolver],\n])\n\nexport async function retrieve({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n  invariant(\n    typeof url === \"string\",\n    \"retrieve({ url }) -- url must be a string\"\n  )\n\n  const documentResolversFromConfig = await config().where(\n    /^document\\.resolver\\./\n  )\n  Object.keys(documentResolversFromConfig).map(key => {\n    const resolverFromConfig = documentResolversFromConfig[key]\n    const resolverProtocol = key.replace(/^document\\.resolver\\./, \"\")\n    DOCUMENT_RESOLVERS.set(resolverProtocol, resolverFromConfig)\n  })\n\n  const urlParts = /^(.*):\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/.exec(url)\n  invariant(urlParts, \"Failed to parse URL\")\n  const protocol = urlParts[1]\n  invariant(urlParts, \"Failed to parse URL protocol\")\n\n  const resolver = DOCUMENT_RESOLVERS.get(protocol)\n  invariant(resolver, `No resolver found for protcol=${protocol}`)\n\n  let document = await resolver({url})\n\n  return document\n}\n","export function normalizeInteractionTemplate(template) {\n  if (template == null) return null\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      return template\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplate Error: Invalid InteractionTemplate\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template\"\n\nexport function deriveCadenceByNetwork({network, template}) {\n  invariant(\n    network != undefined,\n    \"deriveCadenceByNetwork({ network }) -- network must be defined\"\n  )\n  invariant(\n    typeof network === \"string\",\n    \"deriveCadenceByNetwork({ network }) -- network must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let networkDependencies = Object.keys(template?.data?.dependencies).map(\n        dependencyPlaceholder => {\n          let dependencyNetworkContracts = Object.values(\n            template?.data?.dependencies?.[dependencyPlaceholder]\n          )\n\n          invariant(\n            dependencyNetworkContracts,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          invariant(\n            dependencyNetworkContracts.length === 0,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          let dependencyContract = dependencyNetworkContracts[0]\n          let dependencyContractForNetwork = dependencyContract?.[network]\n\n          invariant(\n            dependencyContractForNetwork,\n            `deriveCadenceByNetwork -- Could not find ${network} network information for dependency: ${dependencyPlaceholder}`\n          )\n\n          return [dependencyPlaceholder, dependencyContractForNetwork.address]\n        }\n      )\n\n      return networkDependencies.reduce((cadence, [placeholder, address]) => {\n        const regex = new RegExp(\"(\\\\b\" + placeholder + \"\\\\b)\", \"g\")\n        return cadence.replace(regex, address)\n      }, template.data.cadence)\n\n    default:\n      throw new Error(\n        \"deriveCadenceByNetwork Error: Unsupported template version\"\n      )\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nexport async function deriveDependencies({template}) {\n  const network = await config.get(\"flow.network\")\n\n  invariant(\n    network,\n    \"FCL configureDependencies Error: Missing configuration value for 'flow.network'\"\n  )\n\n  const derivedDependencies = {}\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      const dependencyPlaceholderKeys = Object.keys(\n        template?.data?.dependencies\n      )\n      for (let dependencyPlaceholderKey of dependencyPlaceholderKeys) {\n        let dependencyPlaceholder =\n          template?.data?.dependencies[dependencyPlaceholderKey]\n\n        const dependencyPlaceholderContractsKeys = Object.keys(\n          dependencyPlaceholder\n        )\n        invariant(\n          dependencyPlaceholderContractsKeys.length > 0,\n          `FCL configureDependencies Error: No contracts found in template for placeholder=${dependencyPlaceholderKey}`\n        )\n        const dependencyPlaceholderContract =\n          dependencyPlaceholder[dependencyPlaceholderContractsKeys[0]]\n        const dependency = dependencyPlaceholderContract[network]\n\n        invariant(\n          dependency,\n          `FCL configureDependencies Error: No dependency information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n        invariant(\n          dependency?.address,\n          `FCL configureDependencies Error: No address information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n\n        derivedDependencies[dependencyPlaceholderKey] = withPrefix(\n          dependency?.address\n        )\n      }\n\n      return derivedDependencies\n\n    default:\n      throw new Error(\n        \"FCL configureDependencies Error: Unsupported template version\"\n      )\n  }\n}\n","import * as sdk from \"@onflow/sdk\"\nimport {retrieve} from \"../../document/document.js\"\nimport {normalizeInteractionTemplate} from \"../../normalizers/interaction-template/interaction-template\"\nimport {deriveCadenceByNetwork} from \"../../interaction-template-utils/derive-cadence-by-network.js\"\nimport {deriveDependencies} from \"./derive-dependencies\"\nimport {isString} from \"./is\"\n\nexport async function prepTemplateOpts(opts) {\n  if (isString(opts?.template)) {\n    opts.template = await retrieve({url: opts?.template})\n  }\n\n  let dependencies = {}\n  if (opts?.template) {\n    opts.template = normalizeInteractionTemplate(opts?.template)\n    dependencies = await deriveDependencies({template: opts.template})\n  }\n\n  const cadence =\n    opts.cadence ||\n    deriveCadenceByNetwork({\n      template: opts.template,\n      network: await sdk.config().get(\"flow.network\"),\n    })\n\n  opts.cadence = cadence\n  opts.dependencies = dependencies\n\n  return opts\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"./is\"\n\nasync function pre(type, opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), `${type}(opts) -- opts is required`)\n  // prettier-ignore\n  invariant(isObject(opts), `${type}(opts) -- opts must be an object`)\n  // prettier-ignore\n  invariant(!(opts.cadence && opts.template), `${type}({ template, cadence }) -- cannot pass both cadence and template`)\n  // prettier-ignore\n  invariant(isRequired(opts.cadence || opts?.template), `${type}({ cadence }) -- cadence is required`)\n  // // prettier-ignore\n  invariant(\n    isString(opts.cadence) || opts?.template,\n    `${type}({ cadence }) -- cadence must be a string`\n  )\n  // prettier-ignore\n  invariant(\n    opts.cadence || (await sdk.config().get(\"flow.network\")),\n    `${type}(opts) -- Required value for \"flow.network\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n  // prettier-ignore\n  invariant(\n    await sdk.config().get(\"accessNode.api\"),\n    `${type}(opts) -- Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n\nexport async function preMutate(opts) {\n  return pre(\"mutate\", opts)\n}\n\nexport async function preQuery(opts) {\n  return pre(\"query\", opts)\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preQuery} from \"./utils/pre.js\"\n\n/** Query the Flow Blockchain\n *\n *  @arg {Object} opts         - Query Options and configuration\n *  @arg {string} opts.cadence - Cadence Script used to query Flow\n *  @arg {ArgsFn} opts.args    - Arguments passed to cadence script\n *  @arg {Object} opts.template - Interaction Template for a script\n *  @arg {number} opts.limit   - Compute Limit for Query\n *  @returns {Promise<Response>}\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n  opts = await prepTemplateOpts(opts)\n\n  return sdk.config().overload(opts.dependencies || {}, async () =>\n    // prettier-ignore\n    sdk.send([\n      sdk.script(opts.cadence),\n      sdk.args(normalizeArgs(opts.args || [])),\n      opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n    ]).then(sdk.decode)\n  )\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","// {\n//   \"f_type\": \"Service\",                    // Its a service!\n//   \"f_vsn\": \"1.0.0\",                       // Follows the v1.0.0 spec for the service\n//   \"type\": \"account-proof\",                // the type of service it is\n//   \"method\": \"DATA\",                       // Its data!\n//   \"uid\": \"awesome-wallet#account-proof\",  // A unique identifier for the service\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"nonce\": \"0A1BC2FF\",                  // Nonce signed by the current account-proof (minimum 32 bytes in total, i.e 64 hex characters)\n//     \"address\": \"0xUSER\",                  // The user's address (8 bytes, i.e 16 hex characters)\n//     \"signature\": CompositeSignature,      // address (sans-prefix), keyId, signature (hex)\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(`FCL Normalizer Error: Invalid account-proof service`)\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid authn-refresh service\")\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"../normalizers/service/__vsn\"\nimport {normalizeService} from \"../normalizers/service/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  url.searchParams.append(\"l6n\", window.location.origin)\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then(d => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {...resp} || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../../normalizers/service/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  const resp = await fetchService(service, {\n    method: serviceMethod(service),\n  }).then(normalizePollingResponse)\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {normalizeLocalView} from \"../../../normalizers/service/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport async function execHttpPost({service, body, config, opts}) {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...body,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","// Inspired by: https://github.com/lukeed/uid/blob/master/src/index.js , thank you Luke! https://github.com/lukeed\n\nvar HEX = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\nvar T = HEX.length\n\nexport function uid() {\n  var str = \"\",\n    num = 32\n  while (num--) str += HEX[(Math.random() * T) | 0]\n  return str\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nimport {isRequired, isString, isObject, isFunc} from \"../../exec/utils/is\"\n\nconst CORE_STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n  \"EXT/RPC\": execExtRPC,\n}\n\nconst supportedPlugins = [\"ServicePlugin\"]\nconst supportedServicePlugins = [\"discovery-service\"]\n\nconst validateDiscoveryPlugin = servicePlugin => {\n  const {services, serviceStrategy} = servicePlugin\n  invariant(\n    Array.isArray(services) && services.length,\n    \"Array of Discovery Services is required\"\n  )\n\n  for (const ds of services) {\n    invariant(\n      isRequired(ds.f_type) && ds.f_type === \"Service\",\n      \"Service is required\"\n    )\n    invariant(\n      isRequired(ds.type) && ds.type === \"authn\",\n      `Service must be type authn. Received ${ds.type}`\n    )\n    invariant(\n      ds.method in CORE_STRATEGIES || serviceStrategy.method === ds.method,\n      `Service method ${ds.method} is not supported`\n    )\n  }\n\n  invariant(isRequired(serviceStrategy), \"Service strategy is required\")\n  invariant(\n    isRequired(serviceStrategy.method) && isString(serviceStrategy.method),\n    \"Service strategy method is required\"\n  )\n  invariant(\n    isRequired(serviceStrategy.exec) && isFunc(serviceStrategy.exec),\n    \"Service strategy exec function is required\"\n  )\n\n  return {discoveryServices: services, serviceStrategy}\n}\n\nconst ServiceRegistry = () => {\n  let services = new Set()\n  let strategies = new Map(Object.entries(CORE_STRATEGIES))\n\n  const add = servicePlugin => {\n    invariant(\n      supportedServicePlugins.includes(servicePlugin.type),\n      `Service Plugin type ${servicePlugin.type} is not supported`\n    )\n    if (servicePlugin.type === \"discovery-service\") {\n      const {discoveryServices, serviceStrategy} =\n        validateDiscoveryPlugin(servicePlugin)\n      setServices(discoveryServices)\n      if (!strategies.has(serviceStrategy.method)) {\n        strategies.set(serviceStrategy.method, serviceStrategy.exec)\n      } else {\n        log({\n          title: `Add Service Plugin`,\n          message: `Service strategy for ${serviceStrategy.method} already exists`,\n          level: LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  const setServices = discoveryServices =>\n    (services = new Set([...discoveryServices]))\n\n  const getServices = () => [...services]\n\n  const getStrategy = method => strategies.get(method)\n\n  const getStrategies = () => [...strategies.keys()]\n\n  return Object.freeze({\n    add,\n    getServices,\n    getStrategy,\n    getStrategies,\n  })\n}\n\nconst validatePlugins = plugins => {\n  let pluginsArray\n  invariant(plugins, \"No plugins supplied\")\n\n  if (!Array.isArray(plugins)) {\n    pluginsArray = [plugins]\n  } else {\n    pluginsArray = [...plugins]\n  }\n  for (const p of pluginsArray) {\n    invariant(isRequired(p.name), \"Plugin name is required\")\n    invariant(isRequired(p.f_type), \"Plugin f_type is required\")\n    invariant(\n      supportedPlugins.includes(p.f_type),\n      `Plugin type ${p.f_type} is not supported`\n    )\n  }\n\n  return pluginsArray\n}\n\nconst PluginRegistry = () => {\n  const pluginsMap = new Map()\n\n  const getPlugins = () => pluginsMap\n\n  const add = plugins => {\n    const pluginsArray = validatePlugins(plugins)\n    for (const p of pluginsArray) {\n      pluginsMap.set(p.name, p)\n      if (p.f_type === \"ServicePlugin\") {\n        serviceRegistry.add(p)\n      }\n    }\n  }\n\n  return Object.freeze({\n    add,\n    getPlugins,\n  })\n}\n\nexport const serviceRegistry = ServiceRegistry()\nexport const pluginRegistry = PluginRegistry()\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {serviceRegistry} from \"./plugins\"\nimport {configLens} from \"../../default-config\"\nimport {VERSION} from \"../../VERSION\"\n\nconst execStrategy = async ({service, body, config, opts}) => {\n  const strategy = serviceRegistry.getStrategy(service.method)\n  return strategy({service, body, config, opts})\n}\n\nexport async function execService({service, msg = {}, config = {}, opts = {}}) {\n  msg.data = service.data\n  const execConfig = {\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n    client: {\n      ...config.client,\n      fclVersion: VERSION,\n      fclLibrary: \"https://github.com/onflow/fcl-js\",\n      hostname: window?.location?.hostname ?? null,\n    },\n  }\n\n  try {\n    const res = await execStrategy({\n      service,\n      body: msg,\n      config: execConfig,\n      opts,\n    })\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data,\n        msg,\n        config: execConfig,\n        opts,\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    log({\n      title: `Error on execService ${service?.type}`,\n      message: error,\n      level: LEVELS.error,\n    })\n    throw error\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\n\nexport const makeDiscoveryServices = async () => {\n  const extensionServices = window?.fcl_extensions || []\n  return [...extensionServices, ...serviceRegistry.getServices()]\n}\n\nexport async function getDiscoveryService(service) {\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n  const method = service?.method ? service.method : discoveryWalletMethod\n  const endpoint =\n    service?.endpoint ??\n    (await config.first([\"discovery.wallet\", \"challenge.handshake\"]))\n\n  invariant(\n    endpoint,\n    `\n    If no service is passed to \"authenticate,\" then \"discovery.wallet\" must be defined in fcl config.\n    See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n    `\n  )\n\n  return {\n    ...service,\n    type: \"authn\",\n    endpoint,\n    method,\n    discoveryAuthnInclude,\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\nimport {VERSION} from \"../VERSION\"\nimport {makeDiscoveryServices} from \"./utils\"\n\nexport async function getServices({types}) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(\n    Boolean(endpoint),\n    `\"discovery.authn.endpoint\" in config must be defined.`\n  )\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      type: types,\n      fclVersion: VERSION,\n      include,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n      userAgent: window?.navigator?.userAgent,\n    }),\n  }).then(d => d.json())\n}\n","import {\n  spawn,\n  subscriber,\n  snapshoter,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  send,\n} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\n\nexport const SERVICE_ACTOR_KEYS = {\n  AUTHN: \"authn\",\n  RESULTS: \"results\",\n  SNAPSHOT: \"SNAPSHOT\",\n  UPDATED: \"UPDATED\",\n  UPDATE_RESULTS: \"UPDATE_RESULTS\",\n}\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst fetchServicesFromDiscovery = async () => {\n  try {\n    const services = await getServices({types: [SERVICE_ACTOR_KEYS.AUTHN]})\n    send(SERVICE_ACTOR_KEYS.AUTHN, SERVICE_ACTOR_KEYS.UPDATE_RESULTS, {\n      results: services,\n    })\n  } catch (error) {\n    log({\n      title: `${error.name} Error fetching Discovery API services.`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(\n      typeof window === \"undefined\",\n      '\"fcl.discovery\" is only available in the browser.'\n    )\n    // If you call this before the window is loaded extensions will not be set yet\n    if (document.readyState === 'complete') {\n      fetchServicesFromDiscovery()\n    } else {\n      window.onload = async () => {\n        fetchServicesFromDiscovery()\n      }\n    }\n  },\n  [SERVICE_ACTOR_KEYS.UPDATE_RESULTS]: (ctx, _letter, data) => {\n    ctx.merge(data)\n    ctx.broadcast(SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SERVICE_ACTOR_KEYS.SNAPSHOT]: async (ctx, letter) =>\n    letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, SERVICE_ACTOR_KEYS.AUTHN)\n\nconst authn = {\n  subscribe: cb => subscriber(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders, cb),\n  snapshot: () => snapshoter(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders),\n  update: () => fetchServicesFromDiscovery(),\n}\n\nexport default authn\n","import authn from \"./services/authn\"\nexport {getDiscoveryService, makeDiscoveryServices} from \"./utils\"\n\nconst discovery = {\n  authn,\n}\n\nexport {discovery}\n","export function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {normalizeCompositeSignature} from \"../normalizers/service/composite-signature\"\nimport {getDiscoveryService, makeDiscoveryServices} from \"../discovery\"\nimport {serviceRegistry} from \"./exec-service/plugins\"\nimport {isMobile} from \"../utils\"\n\nexport const isFn = d => typeof d === \"function\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function getAccountProofData() {\n  let accountProofDataResolver = await config.get(\"fcl.accountProof.resolver\")\n\n  if (!isFn(accountProofDataResolver)) return\n\n  const accountProofData = await accountProofDataResolver()\n\n  if (accountProofData == null) return\n\n  invariant(\n    typeof accountProofData.appIdentifier === \"string\",\n    \"appIdentifier must be a string\"\n  )\n  invariant(\n    /^[0-9a-f]+$/i.test(accountProofData.nonce),\n    \"Nonce must be a hex string\"\n  )\n\n  return accountProofData\n}\n\nconst makeConfig = async ({discoveryAuthnInclude}) => {\n  return {\n    client: {\n      discoveryAuthnInclude,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n    },\n  }\n}\n\nasync function authenticate({service, redir = false} = {}) {\n  if (\n    service &&\n    !service?.provider?.is_installed &&\n    service?.provider?.requires_install\n  ) {\n    window.location.href = service?.provider?.install_link\n    return\n  }\n\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const opts = {redir}\n    const user = await snapshot()\n    const discoveryService = await getDiscoveryService(service)\n    const refreshService = serviceOfType(user.services, \"authn-refresh\")\n    let accountProofData\n\n    try {\n      accountProofData = await getAccountProofData()\n    } catch (error) {\n      console.error(\n        `Error During Authentication: Could not resolve account proof data.\n        ${error}`\n      )\n      return reject(error)\n    }\n\n    if (user.loggedIn) {\n      if (refreshService) {\n        try {\n          const response = await execService({\n            service: refreshService,\n            msg: accountProofData,\n            opts,\n          })\n          send(NAME, SET_CURRENT_USER, await buildUser(response))\n        } catch (e) {\n          console.error(\"Error: Could not refresh authentication.\", e)\n        } finally {\n          return resolve(await snapshot())\n        }\n      } else {\n        return resolve(user)\n      }\n    }\n\n    try {\n      const response = await execService({\n        service: discoveryService,\n        msg: accountProofData,\n        config: await makeConfig(discoveryService),\n        opts,\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (e) {\n      console.error(\"Error while authenticating\", e)\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\nasync function authorization(account) {\n  spawnCurrentUser()\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    async resolve(account, preSignable) {\n      const user = await authenticate({redir: true})\n      const authz = serviceOfType(user.services, \"authz\")\n      const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n      if (preAuthz)\n        return resolvePreAuthz(\n          await execService({\n            service: preAuthz,\n            msg: preSignable,\n          })\n        )\n      if (authz) {\n        let windowRef\n        if (isMobile() && authz.method === \"WC/RPC\") {\n          windowRef = window.open(\"\", \"_blank\")\n        }\n        return {\n          ...account,\n          tempId: \"CURRENT_USER\",\n          resolve: null,\n          addr: sansPrefix(authz.identity.address),\n          keyId: authz.identity.keyId,\n          sequenceNum: null,\n          signature: null,\n          async signingFunction(signable) {\n            return normalizeCompositeSignature(\n              await execService({\n                service: authz,\n                msg: signable,\n                opts: {\n                  includeOlderJsonRpcCall: true,\n                  windowRef,\n                },\n              })\n            )\n          },\n        }\n      }\n      throw new Error(\n        \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n      )\n    },\n  }\n}\n\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\nasync function resolveArgument() {\n  const {addr} = await authenticate()\n  return arg(withPrefix(addr), t.Address)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate({redir: true})\n\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nlet currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    subscribe,\n    snapshot,\n    resolveArgument,\n  }\n}\n\ncurrentUser.authenticate = authenticate\ncurrentUser.unauthenticate = unauthenticate\ncurrentUser.authorization = authorization\ncurrentUser.signUserMessage = signUserMessage\ncurrentUser.subscribe = subscribe\ncurrentUser.snapshot = snapshot\ncurrentUser.resolveArgument = resolveArgument\n\nexport {currentUser}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString, isNumber} from \"./utils/is\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preMutate} from \"./utils/pre.js\"\n\n/** As the current user Mutate the Flow Blockchain\n *\n *  @arg {Object} opts - Mutation Options and configuration\n *  @arg {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @arg {ArgsFn} opts.args - Arguments passed to cadence transaction\n *  @arg {Object} opts.template - Interaction Template for a transaction\n *  @arg {number} opts.limit - Compute Limit for transaction\n *  @returns {string} Transaction Id\n *\n *  Where:\n *    @callback ArgsFn\n *    @arg {ArgFn}  arg - Argument function to define a single argument\n *    @arg {Object} t   - Cadence Types object used to define the type\n *    @returns {args[]}\n *\n *    @callback ArgFn\n *    @arg {Any}  value - the value of the argument\n *    @arg {Type} type  - the cadence type of the value\n *    @returns {arg}\n *\n *  Example:\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      template: InteractionTemplate | String // InteractionTemplate or url to one\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await preMutate(opts)\n    opts = await prepTemplateOpts(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    txid = sdk.config().overload(opts.dependencies || {}, async () =>\n      // prettier-ignore\n      sdk.send([\n        sdk.transaction(opts.cadence),\n\n        sdk.args(normalizeArgs(opts.args || [])),\n\n        opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n        // opts.proposer > opts.authz > authz\n        sdk.proposer(opts.proposer || opts.authz || authz),\n\n        // opts.payer > opts.authz > authz\n        sdk.payer(opts.payer || opts.authz || authz),\n\n        // opts.authorizations > [opts.authz > authz]\n        sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n      ]).then(sdk.decode)\n    )\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n","export const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import {onMessageFromFCL} from \"./on-message-from-fcl\"\n\nexport const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else if (window.opener) {\n    window.opener.postMessage({...msg, type}, \"*\")\n  } else {\n    throw new Error(\"Unable to communicate with parent FCL instance\")\n  }\n}\n\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer, encode as rlpEncode} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst nonceBuffer = nonce => Buffer.from(nonce, \"hex\")\n\nexport const encodeAccountProof = (\n  {address, nonce, appIdentifier},\n  includeDomainTag = true\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    nonce,\n    \"Encode Message For Provable Authn Error: nonce must be defined\"\n  )\n  invariant(\n    appIdentifier,\n    \"Encode Message For Provable Authn Error: appIdentifier must be defined\"\n  )\n\n  invariant(\n    nonce.length >= 64,\n    \"Encode Message For Provable Authn Error: nonce must be minimum of 32 bytes\"\n  )\n\n  const ACCOUNT_PROOF_DOMAIN_TAG = rightPaddedHexBuffer(\n    Buffer.from(\"FCL-ACCOUNT-PROOF-V0.0\").toString(\"hex\"),\n    32\n  )\n\n  if (includeDomainTag) {\n    return Buffer.concat([\n      ACCOUNT_PROOF_DOMAIN_TAG,\n      rlpEncode([\n        appIdentifier,\n        addressBuffer(sansPrefix(address)),\n        nonceBuffer(nonce),\n      ]),\n    ]).toString(\"hex\")\n  }\n\n  return rlpEncode([\n    appIdentifier,\n    addressBuffer(sansPrefix(address)),\n    nonceBuffer(nonce),\n  ]).toString(\"hex\")\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../normalizers/service/__vsn\"\n\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {log} from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {query} from \"../exec/query\"\nimport {encodeAccountProof} from \"../wallet-utils\"\nimport {isString} from \"../exec/utils/is\"\n\nconst ACCOUNT_PROOF = \"ACCOUNT_PROOF\"\nconst USER_SIGNATURE = \"USER_SIGNATURE\"\n\nexport const validateArgs = args => {\n  if (args.appIdentifier) {\n    const {appIdentifier, address, nonce, signatures} = args\n    invariant(\n      isString(appIdentifier),\n      \"verifyAccountProof({ appIdentifier }) -- appIdentifier must be a string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyAccountProof({ address }) -- address must be a valid address\"\n    )\n    invariant(/^[0-9a-f]+$/i.test(nonce), \"nonce must be a hex string\")\n    invariant(\n      Array.isArray(signatures) &&\n        signatures.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      signatures.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  } else {\n    const {message, address, compSigs} = args\n    invariant(\n      /^[0-9a-f]+$/i.test(message),\n      \"Signed message must be a hex string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyUserSignatures({ address }) -- address must be a valid address\"\n    )\n    invariant(\n      Array.isArray(compSigs) &&\n        compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  }\n}\n\nconst getVerifySignaturesScript = async (sig, opts) => {\n  const verifyFunction =\n    sig === \"ACCOUNT_PROOF\"\n      ? \"verifyAccountProofSignatures\"\n      : \"verifyUserSignatures\"\n\n  let network = await config.get(\"flow.network\")\n  if (!network) {\n    network = await config.get(\"env\")\n    if (network)\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          'Using the \"env\" configuration key for specifying the flow network',\n        message: 'Please use \"flow.network\" instead.',\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0001-deprecate-env-config-key\",\n      })\n  }\n\n  let fclCryptoContract\n\n  invariant(\n    opts.fclCryptoContract || network === \"testnet\" || network === \"mainnet\",\n    \"${verifyFunction}({ fclCryptoContract }) -- config.flow.network must be specified (testnet || mainnet) or contract address provided via opts.fclCryptoContract\"\n  )\n\n  if (opts.fclCryptoContract) {\n    fclCryptoContract = opts.fclCryptoContract\n  } else {\n    fclCryptoContract =\n      network === \"testnet\" ? \"0x74daa6f9c7ef24b1\" : \"0xb4b82a1c9d21d284\"\n  }\n\n  return `\n      import FCLCrypto from ${fclCryptoContract}\n\n      pub fun main(\n          address: Address, \n          message: String, \n          keyIndices: [Int], \n          signatures: [String]\n      ): Bool {\n        return FCLCrypto.${verifyFunction}(address: address, message: message, keyIndices: keyIndices, signatures: signatures)\n      }\n    `\n}\n\n/**\n * Verify a valid account proof signature or signatures for an account on Flow.\n *\n * @param {string} appIdentifier - A message string in hexadecimal format\n * @param {Object} accountProofData - An object consisting of address, nonce, and signatures\n * @param {string} accountProofData.address - A Flow account address\n * @param {string} accountProofData.nonce - A random string in hexadecimal format (minimum 32 bytes in total, i.e 64 hex characters)\n * @param {Object[]} accountProofData.signatures - An array of composite signatures to verify\n * @param {Object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override Flow account address where the FCLCrypto contract is deployed\n * @return {bool}\n *\n * @example\n *\n *  const accountProofData = {\n *   address: \"0x123\",\n *   nonce: \"F0123\"\n *   signatures: [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *  }\n *\n *  const isValid = await fcl.AppUtils.verifyAccountProof(\n *    \"AwesomeAppId\",\n *    accountProofData,\n *    {fclCryptoContract}\n *  )\n */\n\nexport async function verifyAccountProof(\n  appIdentifier,\n  {address, nonce, signatures},\n  opts = {}\n) {\n  validateArgs({appIdentifier, address, nonce, signatures})\n  const message = encodeAccountProof({address, nonce, appIdentifier}, false)\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of signatures) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(ACCOUNT_PROOF, opts),\n    args: (arg, t) => [\n      arg(withPrefix(address), t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} msg - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @param {Object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override of Flow account address where the FCLCrypto contract is deployed\n * @return {bool}\n *\n * @example\n *\n *  const isValid = await fcl.AppUtils.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyUserSignatures(message, compSigs, opts = {}) {\n  const address = withPrefix(compSigs[0].addr)\n  validateArgs({message, address, compSigs})\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of compSigs) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(USER_SIGNATURE, opts),\n    args: (arg, t) => [\n      arg(address, t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n","import {log} from \"@onflow/util-logger\"\nimport {verifyUserSignatures as verify} from \"../app-utils\"\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @deprecated since version '1.0.0-alpha.0', use AppUtils.verifyUserSignatures instead\n *\n */\nexport const verifyUserSignatures = log.deprecate({\n  pkg: \"FCL\",\n  subject: \"fcl.verifyUserSignatures()\",\n  message: \"Please use fcl.AppUtils.verifyUserSignatures()\",\n  callback: function verifyUserSignatures(message, compSigs) {\n    return verify(message, compSigs)\n  },\n})\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  ERROR,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.sendSelf(POLL)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    let tx\n    try {\n      tx = await fetchTxStatus(ctx.self())\n    } catch (e) {\n      return ctx.fatalError(e)\n    }\n\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus, error) => {\n          if ((error || txStatus.statusCode) && !suppress) {\n            reject(error || txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {\n  config,\n  block,\n  getEventsAtBlockHeightRange,\n  send,\n  decode,\n} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\nconst HIGH_WATER_MARK = \"hwm\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(HIGH_WATER_MARK)\n    if (hwm == null) {\n      ctx.put(HIGH_WATER_MARK, await block())\n      ctx.put(TICK, await scheduleTick(ctx))\n    } else {\n      let next = await block()\n      ctx.put(HIGH_WATER_MARK, next)\n      if (hwm.height < next.height) {\n        const data = await send([\n          getEventsAtBlockHeightRange(ctx.self(), hwm.height + 1, next.height),\n        ]).then(decode)\n        for (let d of data) ctx.broadcast(UPDATED, d.data)\n      }\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(TICK))\n      ctx.delete(TICK)\n      ctx.delete(HIGH_WATER_MARK)\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\nexport function events(key) {\n  return {\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","import {SHA3} from \"sha3\"\nimport {Buffer} from \"@onflow/rlp\"\n\nexport async function genHash(utf8String) {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(utf8String, \"utf8\"))\n  return sha.digest(\"hex\")\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function generateTemplateId({template}) {\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const templateData = template.data\n\n      const messages = await Promise.all(\n        Object.keys(templateData.messages).map(async messageKey => [\n          await genHash(messageKey),\n          await Promise.all(\n            Object.keys(templateData.messages?.[messageKey]?.i18n).map(\n              async i18nkeylanguage => [\n                await genHash(i18nkeylanguage),\n                await genHash(\n                  templateData.messages?.[messageKey]?.i18n?.[i18nkeylanguage]\n                ),\n              ]\n            )\n          ),\n        ])\n      )\n\n      const dependencies = await Promise.all(\n        Object.keys(templateData?.dependencies).map(\n          async dependencyAddressPlaceholder => [\n            await genHash(dependencyAddressPlaceholder),\n            await Promise.all(\n              Object.keys(\n                templateData?.dependencies?.[dependencyAddressPlaceholder]\n              ).map(async dependencyContract => [\n                await genHash(dependencyContract),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.dependencies?.[\n                      dependencyAddressPlaceholder\n                    ]?.[dependencyContract]\n                  ).map(async dependencyContractNetwork => [\n                    await genHash(dependencyContractNetwork),\n                    [\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .contract\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .fq_address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork].pin\n                      ),\n                      await genHash(\n                        String(\n                          templateData?.dependencies?.[\n                            dependencyAddressPlaceholder\n                          ]?.[dependencyContract]?.[dependencyContractNetwork]\n                            .pin_block_height\n                        )\n                      ),\n                    ],\n                  ])\n                ),\n              ])\n            ),\n          ]\n        )\n      )\n\n      const _arguments = await Promise.all(\n        Object.keys(templateData?.[\"arguments\"]).map(async argumentLabel => [\n          await genHash(argumentLabel),\n          [\n            await genHash(\n              String(templateData?.[\"arguments\"]?.[argumentLabel].index)\n            ),\n            await genHash(templateData?.[\"arguments\"]?.[argumentLabel].type),\n            await genHash(\n              templateData?.[\"arguments\"]?.[argumentLabel].balance || \"\"\n            ),\n            await Promise.all(\n              Object.keys(\n                templateData?.[\"arguments\"]?.[argumentLabel].messages\n              ).map(async argumentMessageKey => [\n                await genHash(argumentMessageKey),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                      argumentMessageKey\n                    ].i18n\n                  ).map(async i18nkeylanguage => [\n                    await genHash(i18nkeylanguage),\n                    await genHash(\n                      templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                        argumentMessageKey\n                      ].i18n?.[i18nkeylanguage]\n                    ),\n                  ])\n                ),\n              ])\n            ),\n          ],\n        ])\n      )\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplate\"),\n        await genHash(\"1.0.0\"),\n        await genHash(templateData?.type),\n        await genHash(templateData?.interface),\n        messages,\n        await genHash(templateData?.cadence),\n        dependencies,\n        _arguments,\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\"generateTemplateId Error: Unsupported template version\")\n  }\n}\n","import {config, invariant} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {query} from \"../exec/query.js\"\nimport {generateTemplateId} from \"./generate-template-id.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function getInteractionTemplateAudits(\n  {template, auditors},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"getInteractionTemplateAudits({ template }) -- template must be defined\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"getInteractionTemplateAudits({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  // Recompute ID to be sure it matches\n  let recomputedTemplateID = await generateTemplateId({template})\n\n  if (recomputedTemplateID !== template.id) {\n    log({\n      title: \"getInteractionTemplateAudits Debug Error\",\n      message: `Could not recompute and match template ID\n                computed: ${recomputedTemplateID}\n                template: ${template.id}\n            `,\n      level: LEVELS.debug,\n    })\n    throw new Error(\n      \"getInteractionTemplateAudits Error: Could not recompute and match template ID\"\n    )\n  }\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const _auditors = auditors || (await config().get(\"flow.auditors\"))\n\n      invariant(\n        _auditors,\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not set\"\n      )\n      invariant(\n        Array.isArray(_auditors),\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not an array\"\n      )\n\n      let FlowInteractionAuditContract = opts.flowInteractionAuditContract\n      if (!FlowInteractionAuditContract) {\n        const fclNetwork = await config().get(\"flow.network\")\n        invariant(\n          fclNetwork === \"mainnet\" || fclNetwork === \"testnet\",\n          \"getInteractionTemplateAudits Error: Unable to determine address for FlowInteractionTemplateAudit contract. Set configuration for 'fcl.network' to 'mainnet' or 'testnet'\"\n        )\n        if (fclNetwork === \"mainnet\") {\n          FlowInteractionAuditContract = \"0xfd100e39d50a13e6\"\n        } else {\n          FlowInteractionAuditContract = \"0xf78bfc12d0a786dc\"\n        }\n      }\n\n      const audits = await query({\n        cadence: `\n        import FlowInteractionTemplateAudit from ${FlowInteractionAuditContract}\n        pub fun main(templateId: String, auditors: [Address]): {Address:Bool} {\n          return FlowInteractionTemplateAudit.getHasTemplateBeenAuditedByAuditors(templateId: templateId, auditors: auditors)\n        }\n        `,\n        args: (arg, t) => [\n          arg(recomputedTemplateID, t.String),\n          arg(_auditors, t.Array(t.Address)),\n        ],\n      })\n\n      return audits\n\n    default:\n      throw new Error(\n        \"getInteractionTemplateAudits Error: Unsupported template version\"\n      )\n  }\n}\n","export function generateImport({contractName, address}) {\n  return {contractName, address, contract: \"\"}\n}\n","import {generateImport} from \"./generate-import.js\"\n\nexport function findImports(cadence) {\n  let imports = []\n\n  let importsReg = /import ((\\w|,| )+)* from 0x\\w+/g\n  let fileImports = cadence.match(importsReg) || []\n\n  for (const fileImport of fileImports) {\n    const importLineReg = /import ((\\w+|, |)*) from (0x\\w+)/g\n    const importLine = importLineReg.exec(fileImport)\n\n    const contractsReg = /((?:\\w+)+),?/g\n    const contracts = importLine[1].match(contractsReg) || []\n\n    for (const contract of contracts) {\n      imports.push(\n        generateImport({\n          address: importLine[3],\n          contractName: contract.replace(/,/g, \"\"),\n        })\n      )\n    }\n  }\n\n  return imports\n}\n","import {\n  invariant,\n  block,\n  send,\n  getAccount,\n  atBlockHeight,\n  config,\n  decode,\n} from \"@onflow/sdk\"\nimport {genHash} from \"./utils/hash.js\"\nimport {findImports} from \"./utils/find-imports.js\"\nimport {generateImport} from \"./utils/generate-import.js\"\n\nexport async function generateDependencyPin(\n  {address, contractName, blockHeight},\n  opts = {}\n) {\n  invariant(\n    address != undefined,\n    \"generateDependencyPin({ address }) -- address must be defined\"\n  )\n  invariant(\n    contractName != undefined,\n    \"generateDependencyPin({ contractName }) -- contractName must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be defined\"\n  )\n  invariant(\n    typeof address === \"string\",\n    \"generateDependencyPin({ address }) -- address must be a string\"\n  )\n  invariant(\n    typeof contractName === \"string\",\n    \"generateDependencyPin({ contractName }) -- contractName must be a string\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be a number\"\n  )\n\n  let horizon = [generateImport({contractName, address})]\n\n  for (const horizonImport of horizon) {\n    let account = await send(\n      [\n        getAccount(\n          await config().get(horizonImport.address, horizonImport.address)\n        ),\n        atBlockHeight(blockHeight),\n      ],\n      opts\n    ).then(decode)\n\n    horizonImport.contract = account.contracts?.[horizonImport.contractName]\n\n    if (!horizonImport.contract) {\n      console.error(\"Did not find expected contract\", horizonImport, account)\n      throw new Error(\"Did not find expected contract\")\n    }\n\n    let contractImports = findImports(horizonImport.contract)\n\n    horizon.push(...contractImports)\n  }\n\n  let contractHashes = horizon.map(iport => genHash(iport.contract))\n\n  let contractHashesJoined = contractHashes.join(\"\")\n\n  return genHash(contractHashesJoined)\n}\n\nexport async function generateDependencyPinAtLatestSealedBlock(\n  {address, contractName},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true}, opts)\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return generateDependencyPin(\n    {address, contractName, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","export function normalizeInteractionTemplateInterface(templateInterface) {\n  if (templateInterface == null) return null\n\n  switch (templateInterface[\"f_version\"]) {\n    case \"1.0.0\":\n      return templateInterface\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplateInterface Error: Invalid InteractionTemplateInterface\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplateInterface} from \"../normalizers/interaction-template/interaction-template-interface.js\"\n\nexport async function generateTemplateInterfaceId({templateInterface}) {\n  invariant(\n    templateInterface != undefined,\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be defined\"\n  )\n  invariant(\n    typeof templateInterface === \"object\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be an object\"\n  )\n  invariant(\n    typeof templateInterface.f_type === \"InteractionTemplateInterface\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface object must be an InteractionTemplate\"\n  )\n\n  templateInterface = normalizeInteractionTemplateInterface(templateInterface)\n\n  switch (templateInterface.f_version) {\n    case \"1.0.0\":\n      const interfaceData = templateInterface.data\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplateInterface\"),\n        await genHash(\"1.0.0\"),\n        await genHash(interfaceData.flip),\n        await Promise.all(\n          Object.keys(interfaceData.arguments).map(async argumentLabel => [\n            await genHash(argumentLabel),\n            await genHash(String(interfaceData.arguments[argumentLabel].index)),\n            await genHash(interfaceData.arguments[argumentLabel].type),\n          ])\n        ),\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\n        \"generateTemplateInterfaceId Error: Unsupported templateInterface version\"\n      )\n  }\n}\n","import {generateDependencyPin} from \"./generate-dependency-pin.js\"\nimport {invariant, block} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\nexport async function verifyDependencyPinsSame(\n  {template, blockHeight, network},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    network != undefined,\n    \"generateDependencyPin({ network }) network must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) blockHeight must be defined\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) blockHeight must be a number\"\n  )\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let templateDependenciesPlaceholderKeys = Object.keys(\n        template.data.dependencies\n      )\n\n      for (let templateDependencyPlaceholderKey of templateDependenciesPlaceholderKeys) {\n        let templateDependencyPlaceholder =\n          template.data.dependencies[templateDependencyPlaceholderKey]\n\n        let templateDependencyPlaceholderContractNames = Object.keys(\n          templateDependencyPlaceholder\n        )\n\n        for (let templateDependencyPlaceholderContractName of templateDependencyPlaceholderContractNames) {\n          let templateDependencyPlaceholderContractNetworks =\n            template.data.dependencies[templateDependencyPlaceholderKey][\n              templateDependencyPlaceholderContractName\n            ]\n\n          let templateDependency =\n            templateDependencyPlaceholderContractNetworks[network]\n          if (typeof templateDependency === \"undefined\") continue\n\n          let pin = await generateDependencyPin(\n            {\n              address: templateDependency.address,\n              contractName: templateDependency.contract,\n              blockHeight,\n            },\n            opts\n          )\n\n          if (pin !== templateDependency.pin) {\n            log({\n              title: \"verifyDependencyPinsSame Debug Error\",\n              message: `Could not recompute and match dependency pin.\n                                address: ${templateDependency.address} | contract: ${templateDependency.contract}\n                                computed: ${pin}\n                                template: ${templateDependency.pin}\n                            `,\n              level: LEVELS.debug,\n            })\n            return false\n          }\n        }\n      }\n\n      return true\n\n    default:\n      throw new Error(\n        \"verifyDependencyPinsSame Error: Unsupported template version\"\n      )\n  }\n}\n\nexport async function verifyDependencyPinsSameAtLatestSealedBlock(\n  {template, network},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true})\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return verifyDependencyPinsSame(\n    {template, network, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","import {invariant} from \"@onflow/sdk\"\n\nexport function getTemplateMessage({\n  localization = \"en-US\",\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"stirng\",\n    \"getMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const messages = template?.data?.messages\n\n  return messages?.[messageKey]?.i18n?.[localization]\n}\n","import {invariant} from \"@onflow/sdk\"\n\nexport function getTemplateArgumentMessage({\n  localization = \"en-US\",\n  argumentLabel,\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    argumentLabel,\n    \"getMessage({ argumentLabel }) -- argumentLabel must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"stirng\",\n    \"getMessage({ argumentLabel }) -- argumentLabel must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"stirng\",\n    \"getMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const args = template?.data?.arguments\n\n  return args?.[argumentLabel]?.messages?.[messageKey]?.i18n?.[localization]\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\nexport {pluginRegistry} from \"./current-user/exec-service/plugins\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nimport * as AppUtils from \"./app-utils\"\nexport {AppUtils}\n\nimport * as InteractionTemplateUtils from \"./interaction-template-utils\"\nexport {InteractionTemplateUtils}\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\nexport {voucherIntercept} from \"@onflow/sdk\"\nexport {voucherToTxId} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n"],"names":["_arrayWithHoles","arr","Array","isArray","_arrayLikeToArray","len","length","i","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","unsupportedIterableToArray","nonIterableRest","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","_typeof","obj","module","exports","__esModule","require$$0","_regeneratorRuntime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","promise","runtime","regenerator","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_iterableToArray","_toArray","iterableToArray","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","queueMicrotask_1","queueMicrotask","cb","setTimeout","queue","receive","msg","shift","NAME","PUT","GET","GET_ALL","UPDATE","DELETE","CLEAR","WHERE","HANDLERS","_HANDLERS","ctx","_letter","_ref","letter","_ref2","reply","_ref3","fallback","_ref4","update","_keys","_ref5","SUBSCRIBE","UNSUBSCRIBE","pattern","put","unsubscribe","config","spawn","get","send","expectReply","timeout","first","_first","_callee2","wants","_wants","head","rest","ret","_args2","_context2","all","identity","where","subscribe","callback","d","_delete","overload","_ref6","_callee","oldConfig","_context","t0","t1","resetConfig","t2","_put","_get","SESSION_STORAGE","can","window","JSON","parse","sessionStorage","getItem","_x","setItem","stringify","_x2","_x3","configLens","_x4","_configLens","_callee3","regex","_context3","entries","map","replace","fromEntries","t3","VERSION","invariant","fact","_console","concat","stack","_len","_key","console","_toConsumableArray","LEVELS","debug","title","message","trim","_console2","_console3","_console4","_console5","level","_ref2$always","always","configLoggerLevel","loggerMessageArgs","warn","buildLoggerMessageArgs","log","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","NewTarget","possibleConstructorReturn","subject","_ref4$level","_ref4$message","_ref4$callback","logMessage","pkg","string","transition","deprecate","base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","curByte","revLookup","charCodeAt","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Uint8Array","code","indexOf","start","end","num","output","encode","input","buf","Buffer","r","inputBuf","encodeLength","offset","hexLength","intToHex","_construct","Parent","Class","a","_wrapNativeSuper","_cache","Map","has","set","Wrapper","ieee754","read","buffer","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","NaN","Infinity","Math","pow","write","c","rt","abs","floor","LN2","base64","require$$1","customInspectSymbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","encodingOrOffset","allocUnsafe","encoding","isEncoding","byteLength","actual","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","SharedArrayBuffer","b","isBuffer","checked","numberIsNaN","data","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","base64Write","ucs2Write","units","hi","lo","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","max","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","getMessage","Base","_Base","NodeError","_super","_this","addNumericalSeparator","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","src","dst","alphabet","table","i16","BufferBigIntNotDefined","global","fetch","Headers","Request","Response","sansPrefix","address","withPrefix","display","HTTPRequestError","requestBody","responseStatusText","hostname","statusCode","responseBody","httpRequest","_httpRequest","_callee4","makeRequest","requestLoop","_requestLoop","_context4","retryAttempt","resp","_args3","retryLimit","path","body","bodyJSON","responseText","response","ok","json","text","safeParseJSON","headers","_ref2$retryLimit","retryIntervalMs","_ref2$retryIntervalMs","_unused","copy_1","I","O","oi","ii","_copy","default","_default","A","C","xy","x1","x2","Uint32Array","_roundConstants","roundIndex","_piShuffles","_interopRequireDefault","_rhoOffsets","require$$2","W","H","L","Wi","ri","_a","aHead","aRest","_b","bRest","interleave","recApply","arg1","bHead","template","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","_buffer","_permute","xorWords","readWords","capacity","padding","keccak","blockSize","queueSize","queueOffset","stateSize","absorb","squeeze","options","SHAKE","SHA3Hash","SHA3","Keccak","_sponge","createHash","allowedSizes","defaultSize","Hash","sponge","digest","formatOrOptions","format","ARG","ARGUMENT","UNKNOWN","OK","Set","IX","interaction","CHARS","randChar","uuid","isNumber","isObj","isFn","ix","_iterator","_step","Ok","Bad","reason","makeIx","wat","status","acct","keyId","_objectSpread","prepAccount","opts","role","tempId","authorization","prepAccountKeyId","reduce","ACCOUNT","AUTHORIZER","PAYER","makeUnknown","makeScript","makeTransaction","TRANSACTION","makeGetAccount","makeGetEvents","GET_EVENTS","makePing","makeGetBlock","GET_BLOCK","makeGetBlockHeader","makeGetCollection","GET_COLLECTION","is","isUnknown","isTransaction","isGetTransactionStatus","GET_TRANSACTION_STATUS","isPing","isGetBlock","asArgument","isGetBlockHeader","isGetCollection","isOk","isBad","BAD","why","hardMode","_Object$keys","KEYS","recPipe","fns","_fns","hd","cur","GET_ACCOUNT","isInteraction","pipe","_len2","_key2","arg2","isScript","account","param","PARAM","isGetTransaction","isRequired","isObject","isString","isFunc","normalizeArgs","ax","sdk","t","httpDocumentResolver","_httpDocumentResolver","url","document","fetchTransport","DOCUMENT_RESOLVERS","retrieve","_retrieve","documentResolversFromConfig","urlParts","protocol","resolver","resolverFromConfig","resolverProtocol","exec","normalizeInteractionTemplate","deriveCadenceByNetwork","_template","_template$data","network","undefined","f_type","f_version","dependencies","dependencyPlaceholder","_template2","_template2$data","_template2$data$depen","dependencyNetworkContracts","dependencyContract","dependencyContractForNetwork","cadence","placeholder","RegExp","deriveDependencies","_deriveDependencies","derivedDependencies","dependencyPlaceholderKeys","_dependencyPlaceholde","_template$data2","dependencyPlaceholderKey","dependencyPlaceholderContractsKeys","dependencyPlaceholderContract","dependency","prepTemplateOpts","_prepTemplateOpts","t4","pre","t5","t6","preMutate","_preMutate","preQuery","_preQuery","query","_query","fetchServices","_fetchServices","servicesURL","services","service","URL","searchParams","append","authorizations","provider","id","mergeServices","sx2","sx1","SERVICE_PRAGMA","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeFrame","old","endpoint","params","normalizeBackChannelRpc","normalizeLocalView","serviceNormalizers","uid","addr","authz","authn","pid","icon","frame","normalizeService","deriveCompositeId","rlp","normalizeData","paddr","findService","find","buildUser","_buildUser","hks","cid","loggedIn","expiresAt","expires","serviceOfType","serviceEndpoint","location","origin","_Object$entries","_Object$entries$_i","fetchService","normalizePollingResponse","_resp$status","_resp$reason","compositeSignature","updates","authorizationUpdates","local","OPTIONS","serviceMethod","poll","_poll","canContinue","_args","FRAME","renderFrame","getElementById","$frame","createElement","allow","frameBorder","style","cssText","contentWindow","remove","popup","previousUrl","renderPop","_popup","closed","windowName","win","w","h","top","outerHeight","screenY","outerWidth","screenX","open","focus","close","tab","renderTab","_tab","VIEWS","execLocal","_execLocal","execHttpPost","_execHttpPost","_yield$execLocal","_yield$execLocal2","unmount","fclVersion","serviceResponse","T","HEX","random","CLOSE_EVENT","READY_EVENT","RESPONSE_EVENT","_","IGNORE","was","want","buildMessageHandler","onReady","onResponse","onMessage","noop","strategies","setServices","pluginsMap","CORE_STRATEGIES","includeOlderJsonRpcCall","onClose","handler","addEventListener","_renderFrame2","removeEventListener","postMessage","deprecated","jsonrpc","redir","_renderPop2","$pop","timer","setInterval","clearInterval","_renderTab2","$tab","supportedPlugins","supportedServicePlugins","serviceRegistry","discoveryServices","freeze","add","servicePlugin","validateDiscoveryPlugin","serviceStrategy","ds","getServices","getStrategy","getStrategies","pluginRegistry","plugins","_step3","pluginsArray","_step2","_iterator2","_iterator3","getPlugins","execStrategy","strategy","execService","_execService","_window$location$host","_window","_window$location","_ref3$msg","_ref3$config","_ref3$opts","execConfig","client","fclLibrary","app","normalizeCompositeSignature","signature","sig","makeDiscoveryServices","extensionServices","fcl_extensions","getDiscoveryService","_getDiscoveryService","_service$endpoint","discoveryAuthnInclude","discoveryWalletMethod","_getServices","_window$navigator","types","include","t7","t9","navigator","userAgent","t10","clientServices","supportedStrategies","t8","t11","t12","SERVICE_ACTOR_KEYS","fetchServicesFromDiscovery","results","INIT","readyState","onload","merge","broadcast","spawnProviders","discovery","subscriber","snapshot","snapshoter","isIOS","isMobile","UPDATED","SNAPSHOT","SET_CURRENT_USER","DEL_CURRENT_USER","DATA","getStoredUser","storage","stored","removeItem","user","notExpired","_x5","_x6","_x7","_callee5","_context5","_x8","_x9","spawnCurrentUser","Date","now","getAccountProofData","_getAccountProofData","_callee8","accountProofDataResolver","accountProofData","_context8","appIdentifier","nonce","makeConfig","_ref7","_callee6","_context6","_x10","authenticate","_authenticate","_callee10","_service$provider","_service$provider2","_ref11","_ref11$redir","_service$provider3","_args10","_context10","is_installed","requires_install","href","install_link","_ref12","_callee9","discoveryService","refreshService","_response","_context9","t13","t14","t15","t16","t17","t18","t19","t20","_x14","_x15","unauthenticate","resolvePreAuthz","proposer","payer","axs","az","_ref8","_ref9","signingFunction","signable","authorizer","_authorization","_callee13","_context13","preSignable","_callee12","preAuthz","windowRef","_context12","sequenceNum","_callee11","_context11","EXIT","_ref10","_context7","tag","_callee7","_x12","resolveArgument","_resolveArgument","_callee15","_yield$authenticate","_context15","makeSignable","signUserMessage","_signUserMessage","_callee16","signingService","_context16","compSigs","currentUser","_mutate","txid","onMessageFromFCL","messageType","buildData","_data$body","internal","sendMsgToFCL","parent","opener","rightPaddedHexBuffer","pad","padEnd","addressBuffer","padStart","nonceBuffer","encodeAccountProof","includeDomainTag","ACCOUNT_PROOF_DOMAIN_TAG","rlpEncode","ACCOUNT_PROOF","USER_SIGNATURE","validateArgs","signatures","every","cs","getVerifySignaturesScript","verifyFunction","fclCryptoContract","_verifyAccountProof","signaturesArr","keyIndices","el","Address","Int","verifyUserSignatures","_verifyUserSignatures","verify","serialize","resolveFunction","defaultResolve","createSignableVoucher","POLL","fetchTxStatus","transactionId","fclSend","getTransactionStatus","decode","isSealed","tx","isExecuted","isFinalized","sendSelf","fatalError","scoped","spawnTransaction","transaction","once","predicate","suppress","unsub","txStatus","errorMessage","onceFinalized","onceExecuted","onceSealed","isPending","isExpired","TICK","HIGH_WATER_MARK","scheduleTick","hwm","hasSubs","block","height","getEventsAtBlockHeightRange","clearTimeout","spawnEvents","genHash","_genHash","utf8String","sha","generateTemplateId","_generateTemplateId","templateData","messages","_arguments","encodedHex","messageKey","_templateData$message","_templateData$message2","i18n","i18nkeylanguage","_templateData$message3","_templateData$message4","_templateData$message5","dependencyAddressPlaceholder","_templateData$depende","_templateData$depende2","_templateData$depende3","dependencyContractNetwork","_templateData$depende4","_templateData$depende5","_templateData$depende6","_templateData$depende7","_templateData$depende8","_templateData$depende9","_templateData$depende10","_templateData$depende11","_templateData$depende12","_templateData$depende13","_templateData$depende14","_templateData$depende15","_templateData$depende16","_templateData$depende17","_templateData$depende18","contract","fq_address","pin","pin_block_height","argumentLabel","_templateData$argumen","_templateData$argumen2","_templateData$argumen3","_templateData$argumen4","index","balance","argumentMessageKey","_templateData$argumen5","_templateData$argumen6","_templateData$argumen7","_templateData$argumen8","_templateData$argumen9","_getInteractionTemplateAudits","auditors","recomputedTemplateID","_auditors","FlowInteractionAuditContract","fclNetwork","audits","flowInteractionAuditContract","generateImport","contractName","findImports","imports","match","fileImport","importLine","generateDependencyPin","_generateDependencyPin","blockHeight","horizon","_horizon","_account$contracts","horizonImport","contractImports","contractHashes","contractHashesJoined","getAccount","atBlockHeight","contracts","iport","_generateDependencyPinAtLatestSealedBlock","latestSealedBlock","latestSealedBlockHeight","sealed","normalizeInteractionTemplateInterface","templateInterface","_generateTemplateInterfaceId","interfaceData","flip","verifyDependencyPinsSame","_verifyDependencyPinsSame","templateDependenciesPlaceholderKeys","_templateDependencies","templateDependencyPlaceholderKey","templateDependencyPlaceholder","templateDependencyPlaceholderContractNames","_i2","_templateDependencyPl","templateDependencyPlaceholderContractName","templateDependencyPlaceholderContractNetworks","templateDependency","_verifyDependencyPinsSameAtLatestSealedBlock","_messages$messageKey","_messages$messageKey$","_ref$localization","localization","_args$argumentLabel","_args$argumentLabel$m","_args$argumentLabel$m2","_args$argumentLabel$m3"],"sourceRoot":""}