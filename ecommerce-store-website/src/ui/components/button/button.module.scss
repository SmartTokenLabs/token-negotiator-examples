@use 'styles/modules' as *;
@use 'sass:math';


//
//	Brand Connector Demo / UI / Components / Button
//


$easing: cubic-bezier(0.4, 0, 0, 1);
$box-shadow: 2px 4px 8px 0 rgba( 0, 0, 0, 0.2 );

.c-button {
	$c: &;
	$button-height: type-size-responsive( 56, 64 );

	--btn-radius: #{grid-baseline(1)};

	font-size: type-size-responsive( 15, 18 );
	flex-shrink: 0;
	width: auto; height: $button-height;
	padding: grid-baseline(1); box-sizing: border-box;
	position: relative;
	display: inline-block;
	text-align: center; text-decoration: none;
	color: color-get( --button-text ); font-weight: 500;
	background-color: color-get( --button-bg );
	border-radius: var( --btn-radius );
	box-shadow: none;
	transform: translate3d(0,0,0);
	transition:
		color 0.3s,
		background-color 0.3s,
		border 0.3s,
		box-shadow 0.3s,
		transform 0.3s;
	transition-timing-function: $easing;
	-webkit-tap-highlight-color: rgba( 0, 0, 0, 0 );

	&:not(.-style-none) {

		&:after {
			content: '';
			width: 100%; height: 100%;
			position: absolute; top: 0; left: 0; z-index: 5;
			background: color-get( black, 0.25 );
			border-radius: var(--btn-radius);
			opacity: 0;
			transition: opacity 0.3s $easing;
		}
	}

	&.-is-disabled {
		pointer-events: none;

		#{$c}_content {
			opacity: 0.75;
		}
	}


	//	Elements   ------------------

	&-group {
		display: flex;
		flex-flow: row nowrap;
		align-items: center; justify-content: flex-start;
		width: 100%;
		grid-gap: grid-gutter(1);

		#{ $c } {
			flex: 1;
		}
	}

	&_content {
		height: 100%; width: 100%; max-width: 100%;
		padding: 0 grid-baseline(2); box-sizing: border-box;
		display: inline-flex; align-items: center; justify-content: center;
		position: relative; z-index: 10;
		transition: opacity 0.15s $easing;

		span {
			margin: 0 grid-baseline(0.5);

			+ #{ $c }_icon {
				padding-left: grid-gutter(1);
				margin-left: auto;
			}
		}
	}
		&_icon-custom {
			min-width: grid-baseline(4);
			width: grid-gutter(1);
		}

		&_text {
			display: flex;
			white-space: nowrap;
		}


	//	Styles	 --------------------

	&:global(.-style-none) {
		@include color-set( --button-text, --text-light );
		background: transparent;
		border: none;
	}

	&:global(.-style-primary-light) {
		@include color-set( --button-text, --primary );
		background-color: color-get( --button-bg, 0.2 );
	}

	&:global(.-style-secondary) {
		@include color-set( --button-text, --secondary-invert );
		background: linear-gradient( 234.79deg, color-get( ts-blue ) 37.73%, color-get( ts-blue-60 ) 118.69% );
	}

	&:global(.-style-outline) {
		@include color-set( --button-text, --primary );
		background: transparent;
		border: 2px solid color-get( --primary );
	}

	&:global(.-style-light-outline) {
		@include color-set( --button-text, --text );
		background: transparent;
		border: 2px solid color-get( --text );
	}

	//	Sizes	 --------------------

	&.-size-s {
		$button-height: type-size-responsive( 40, 56 );
		height: $button-height;

		#{$c}_content {
			padding: 0 grid-baseline(1);
		}
	}

	&.-size-l {
		height: grid-baseline(9);
		line-height: grid-baseline(3);
	}


	//	Formats	 --------------------


	&.-format-none {
		padding: 0;

		#{$c}_content {
			padding-left: 0; padding-right: 0;
		}
	}

	&.-format-icon {
		--btn-radius: 50%;

		width: $button-height;
		height: $button-height;
		flex-shrink: 0;

		#{$c}_content {
			padding-left: 0; padding-right: 0;
		}
			.c-icon {
				margin: 0;
			}

		&.-size-xs {
			padding: grid-baseline(0.25);
			height: grid-baseline(3.5);
			width: grid-baseline(3.5);
		}

		&.-size-s {
			width: grid-baseline(5);
			height: grid-baseline(5);
		}
		&.-size-l {
			width: grid-baseline(9);
			height: grid-baseline(9);
		}
	}

	&.-format-block {
		width: 100%;
	}


	//	States	 --------------------

	&:active {
		#{$c}_content {
			opacity: 0.4;
		}
	}
}



/**
 * 	Media Queries
 *	--------------------------------------------------
 */

@media (hover: hover) {

	.c-button:not(.-is-disabled) {

		&:hover {
			box-shadow: $box-shadow;
			transform: translate3d(0,-1px,0);

			&:after {
				opacity: 1;
			}
		}

		&:global(.-style-none):hover {
			color: color-get( --button-text, 0.4 );
			transform: none;
			box-shadow: none;

			&:after {
				opacity: 0;
			}
		}

		&.-format-none:hover {
			box-shadow: none;
		}

		&:global(.-style-outline) {
			&:hover {
				@include color-set( --button-text, --primary );
				@include color-set( --text, base-60 );
				background: transparent;
				border-color: color-get( --text, 0.4 );
				box-shadow: none;

				&:after {
					content: none;
				}
			}
		}
	}
}


/** Breakpoint:	Small ----------------------- */

@include breakpoint-for( small ) using ( $bp ) {
	.c-button {
		$c: &;

		width: 100%;

		&-group {
			flex-flow: row wrap;
			gap: grid-baseline(3);

			#{ $c } {
				flex: 1 1 100%;
			}
		}


		&_content {
			span {

				+ #{ $c }_icon {
					padding-left: grid-gutter(4);
				}
			}
		}
	}
}
