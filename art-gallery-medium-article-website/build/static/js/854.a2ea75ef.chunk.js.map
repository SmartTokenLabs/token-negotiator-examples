{"version":3,"file":"static/js/854.a2ea75ef.chunk.js","mappings":"iiDAGaA,EAAmC,SAAOC,GAA6B,0C,2BACnF,MAAO,CAAP,EAAO,IAAIC,IAAJ,CAA0B,CAChCC,SAAU,mCACVC,QAASH,EACTI,IAAKC,EAAAA,qB,qgDCLMA,EAAqB,CACjC,EAAG,kCACH,EAAG,uEACH,SAAU,gEACV,IAAK,2BACL,MAAO,2EACP,GAAI,oCACJ,GAAI,iDACJ,MAAO,wCACP,MAAO,6CACP,IAAK,8BACL,GAAI,gCACJ,IAAK,4BACL,MAAO,+BACP,OAAQ,uEACR,GAAI,+BAGQC,EAAuB,CACnC,WAGA,aAMA,aACA,YACA,eACA,aAGYC,EAAqC,qD,kDAC1C,SAAMC,EAAAA,EAAAA,KAAuB,CACnCC,UAAW,mCACXC,OAAQ,QACRC,SAAU,mC,OAHX,MAAO,CAAP,EAAOC,EAAAA,Q","sources":["../../../token-negotiator/src/wallet/WalletConnectProvider.ts","../../../token-negotiator/src/wallet/WalletConnectV2Provider.ts"],"sourcesContent":["import WalletConnectProvider from '@walletconnect/web3-provider/dist/umd/index.min'\nimport { WC_DEFAULT_RPC_MAP } from './WalletConnectV2Provider'\n\nexport const getWalletConnectProviderInstance = async (checkConnectionOnly?: boolean) => {\n\treturn new WalletConnectProvider({\n\t\tinfuraId: '7753fa7b79d2469f97c156780fce37ac',\n\t\tqrcode: !checkConnectionOnly,\n\t\trpc: WC_DEFAULT_RPC_MAP,\n\t})\n}\n","import UniversalProvider from '@walletconnect/universal-provider'\n\nexport const WC_DEFAULT_RPC_MAP = {\n\t1: 'https://ethereum.publicnode.com', // mainnet\n\t5: 'https://eth-goerli.g.alchemy.com/v2/yVhq9zPJorAWsw-F87fEabSUl7cCU6z4', // Goerli\n\t11155111: 'https://sepolia.infura.io/v3/9f79b2f9274344af90b8d4e244b580ef', // Sepolia\n\t137: 'https://polygon-rpc.com/', // Polygon\n\t80001: 'https://polygon-mumbai.g.alchemy.com/v2/rVI6pOV4irVsrw20cJxc1fxK_1cSeiY0', // mumbai\n\t56: 'https://bsc-dataseed.binance.org/', // BSC,\n\t97: 'https://data-seed-prebsc-1-s1.binance.org:8545', // BSC testnet\n\t43114: 'https://api.avax.network/ext/bc/C/rpc', // Avalanche\n\t43113: 'https://api.avax-test.network/ext/bc/C/rpc', // Fuji testnet\n\t250: 'https://rpc.fantom.network/', // Fantom,\n\t25: 'https://evm-cronos.crypto.org', // Cronos,\n\t338: 'https://evm-t3.cronos.org', // Cronos testnet\n\t42161: 'https://arb1.arbitrum.io/rpc', // Arbitrum\n\t421613: 'https://arb-goerli.g.alchemy.com/v2/nFrflomLgsQQL5NWjGileAVqIGGxZWce', // Arbitrum goerli,\n\t10: 'https://mainnet.optimism.io', // Optimism\n}\n\nexport const WC_V2_DEFAULT_CHAINS = [\n\t'eip155:1', // Mainnet\n\t// 'eip155:5',\n\t// 'eip155:11155111',\n\t'eip155:137', // Polygon\n\t// 'eip155:80001',\n\t// 'eip155:56',\n\t// 'eip155:97',\n\t// 'eip155:43114',\n\t// 'eip155:43113',\n\t'eip155:250', // Fantom\n\t'eip155:25', // Cronos\n\t'eip155:42161', // Arbitrum\n\t'eip155:10', // Optimism\n]\n\nexport const getWalletConnectV2ProviderInstance = async () => {\n\treturn await UniversalProvider.init({\n\t\tprojectId: '2ec7ead81da1226703ad789c0b2f7b30',\n\t\tlogger: 'debug',\n\t\trelayUrl: 'wss://relay.walletconnect.com',\n\t})\n}\n"],"names":["getWalletConnectProviderInstance","checkConnectionOnly","WalletConnectProvider","infuraId","qrcode","rpc","WC_DEFAULT_RPC_MAP","WC_V2_DEFAULT_CHAINS","getWalletConnectV2ProviderInstance","UniversalProvider","projectId","logger","relayUrl","_a"],"sourceRoot":""}