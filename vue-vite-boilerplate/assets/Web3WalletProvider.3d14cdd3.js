import{l as h,e as p,W as C,b as u}from"./index.e46b8fcd.js";var s=globalThis&&globalThis.__awaiter||function(g,e,t,n){function r(i){return i instanceof t?i:new t(function(o){o(i)})}return new(t||(t=Promise))(function(i,o){function d(c){try{l(n.next(c))}catch(a){o(a)}}function v(c){try{l(n.throw(c))}catch(a){o(a)}}function l(c){c.done?i(c.value):r(c.value).then(d,v)}l((n=n.apply(g,e||[])).next())})};class w{constructor(e,t,n){this.client=e,this.walletOptions=t,this.safeConnectOptions=n,this.connections={}}saveConnections(){let e={};for(let t in this.connections){let n=this.connections[t];e[t]={address:n.address,chainId:n.chainId,providerType:n.providerType,blockchain:n.blockchain}}localStorage.setItem(w.LOCAL_STORAGE_KEY,JSON.stringify(e))}emitSavedConnection(e){return Object.keys(this.connections).length&&e?(this.client.eventSender("connected-wallet",this.connections[e.toLocaleLowerCase()]),this.connections[e.toLocaleLowerCase()]):null}emitNetworkChange(e){if(e)return this.client.eventSender("network-change",e),e}deleteConnections(){this.connections={},localStorage.removeItem(w.LOCAL_STORAGE_KEY),localStorage.removeItem("walletconnect"),sessionStorage.removeItem("CURRENT_USER")}loadConnections(){return s(this,void 0,void 0,function*(){let e=localStorage.getItem(w.LOCAL_STORAGE_KEY);if(!e)return;let t=JSON.parse(e);if(!!t)for(let n in t){let r=t[n];try{yield this.connectWith(r.providerType,!0)}catch(i){console.log("Wallet couldn't connect: "+i.message),delete t[n],this.saveConnections(),this.emitSavedConnection(n)}}})}connectWith(e,t=!1){return s(this,void 0,void 0,function*(){if(!e)throw new Error("Please provide a Wallet type to connect with.");if(this[e]){const n=yield this[e](t);return h(2,"address",n),this.saveConnections(),this.emitSavedConnection(n),n}else throw new Error("Wallet type not found")})}signMessage(e,t){return s(this,void 0,void 0,function*(){return yield this.getWalletProvider(e).getSigner(e).signMessage(t)})}getWalletProvider(e){var t;if(e=e.toLowerCase(),!(!((t=this.connections[e])===null||t===void 0)&&t.provider))throw new Error("Wallet provider not found for address");return this.connections[e].provider}getConnectedWalletData(){return Object.values(this.connections)}registerNewWalletAddress(e,t,n,r,i="evm"){return this.connections[e.toLowerCase()]={address:e,chainId:t,providerType:n,provider:r,blockchain:i,ethers:p},e}registerProvider(e,t){return s(this,void 0,void 0,function*(){const n=yield e.listAccounts(),r=(yield e.detectNetwork()).chainId;if(n.length===0)throw new Error("No accounts found via wallet-connect.");let i=n[0];return this.registerNewWalletAddress(i,r,t,e),e.provider.on("accountsChanged",o=>{if(!o||o.length===0){this.client.disconnectWallet();return}i!==o[0]&&(delete this.connections[i.toLowerCase()],i=o[0],this.registerNewWalletAddress(i,r,t,e),this.saveConnections(),this.emitSavedConnection(i),this.client.getTokenStore().clearCachedTokens(),this.client.enrichTokenLookupDataOnChainTokens())}),e.provider.on("chainChanged",o=>{this.registerNewWalletAddress(n[0],o,t,e),this.saveConnections(),this.emitNetworkChange(o)}),e.provider.on("disconnect",o=>{o?.message&&o.message.indexOf("MetaMask: Disconnected from chain")>-1||this.client.disconnectWallet()}),n[0]})}MetaMask(e){return s(this,void 0,void 0,function*(){if(h(2,"connect MetaMask"),typeof window.ethereum<"u"){yield window.ethereum.enable();const t=new C(window.ethereum,"any");return this.registerProvider(t,"MetaMask")}else throw new Error("MetaMask is not available. Please check the extension is supported and active.")})}WalletConnect(e){return s(this,void 0,void 0,function*(){h(2,"connect Wallet Connect");const n=yield(yield u(()=>import("./WalletConnectProvider.afe83352.js"),["assets/WalletConnectProvider.afe83352.js","assets/index.e46b8fcd.js","assets/index.83e4cba3.css","assets/WalletConnectV2Provider.4f77fbd6.js"])).getWalletConnectProviderInstance(e);return new Promise((r,i)=>{e&&n.connector.on("display_uri",(o,d)=>{i(new Error("Connection expired"))}),n.enable().then(()=>{const o=new C(n,"any");r(this.registerProvider(o,"WalletConnect"))}).catch(o=>i(o))})})}WalletConnectV2(e){var t,n,r,i,o,d;return s(this,void 0,void 0,function*(){h(2,"connect Wallet Connect V2");const v=yield u(()=>import("./WalletConnectV2Provider.4f77fbd6.js"),["assets/WalletConnectV2Provider.4f77fbd6.js","assets/index.e46b8fcd.js","assets/index.83e4cba3.css"]),l=yield v.getWalletConnectV2ProviderInstance();let c;return l.on("display_uri",a=>s(this,void 0,void 0,function*(){console.log("EVENT","QR Code Modal open"),c=(yield u(()=>import("./index.f3e0de6c.js").then(f=>f.i),["assets/index.f3e0de6c.js","assets/index.e46b8fcd.js","assets/index.83e4cba3.css"])).default,c.open(a,()=>{this.client.getUi().showError("User closed modal")})})),l.on("session_delete",({id:a,topic:f})=>{console.log("WC V2 EVENT","session_deleted"),this.client.disconnectWallet()}),e||(yield l.connect({namespaces:{eip155:{methods:["eth_sendTransaction","eth_signTransaction","eth_sign","personal_sign","eth_signTypedData"],chains:(r=(n=(t=this.walletOptions)===null||t===void 0?void 0:t.walletConnectV2)===null||n===void 0?void 0:n.chains)!==null&&r!==void 0?r:v.WC_V2_DEFAULT_CHAINS,events:["chainChanged","accountsChanged"],rpcMap:(d=(o=(i=this.walletOptions)===null||i===void 0?void 0:i.walletConnectV2)===null||o===void 0?void 0:o.rpcMap)!==null&&d!==void 0?d:v.WC_DEFAULT_RPC_MAP}},pairingTopic:void 0}),c.close()),new Promise((a,f)=>{l.enable().then(()=>{const _=new C(l,"any");a(this.registerProvider(_,"WalletConnectV2"))}).catch(_=>{f(_)})})})}Torus(e){return s(this,void 0,void 0,function*(){const n=yield(yield u(()=>import("./TorusProvider.b0d3a177.js"),["assets/TorusProvider.b0d3a177.js","assets/index.e46b8fcd.js","assets/index.83e4cba3.css"])).getTorusProviderInstance();yield n.init(),yield n.login();const r=new C(n.provider,"any");return this.registerProvider(r,"Torus")})}Phantom(e){return s(this,void 0,void 0,function*(){if(h(2,"connect Phantom"),typeof window.solana<"u"){const n=(yield window.solana.connect()).publicKey.toBase58();return this.registerNewWalletAddress(n,"mainnet-beta","phantom",window.solana,"solana")}else throw new Error("Phantom is not available. Please check the extension is supported and active.")})}SafeConnect(e){return s(this,void 0,void 0,function*(){h(2,"connect SafeConnect");const t=yield this.getSafeConnectProvider(),n=yield t.initSafeConnect();return this.registerNewWalletAddress(n,1,"SafeConnect",t),n})}Flow(e){return s(this,void 0,void 0,function*(){const n=(yield u(()=>import("./FlowProvider.162f3287.js"),["assets/FlowProvider.162f3287.js","assets/index.e46b8fcd.js","assets/index.83e4cba3.css"])).getFlowProvider();yield n.currentUser.authenticate();let r=yield n.currentUser.snapshot();if(!r.addr)throw new Error("Failed to connect Flow wallet");return this.registerNewWalletAddress(r.addr,1,"flow",n),r.addr})}safeConnectAvailable(){return this.safeConnectOptions!==void 0}getSafeConnectProvider(){return s(this,void 0,void 0,function*(){const{SafeConnectProvider:e}=yield u(()=>import("./index.e46b8fcd.js").then(t=>t.S),["assets/index.e46b8fcd.js","assets/index.83e4cba3.css"]);return new e(this.client.getUi(),this.safeConnectOptions)})}}w.LOCAL_STORAGE_KEY="tn-wallet-connections";export{w as Web3WalletProvider,w as default};
