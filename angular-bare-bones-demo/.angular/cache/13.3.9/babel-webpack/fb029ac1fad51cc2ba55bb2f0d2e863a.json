{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Messaging } from \"../client/messaging\";\nimport { uint8tohex } from \"@tokenscript/attestation/dist/libs/utils\";\nimport { KeyStore } from \"@tokenscript/attestation/dist/safe-connect/KeyStore\";\nimport { AttestedAddress } from \"../client/auth/attestedAddress\";\nimport { SafeConnectChallenge } from \"../client/auth/safeConnectChallenge\";\nexport var SafeConnectAction = /*#__PURE__*/(() => {\n  (function (SafeConnectAction) {\n    SafeConnectAction[\"CONNECT\"] = \"connect\";\n    SafeConnectAction[\"NEW_CHALLENGE\"] = \"new_challenge\";\n  })(SafeConnectAction || (SafeConnectAction = {}));\n\n  return SafeConnectAction;\n})();\n\nvar SafeConnectProvider = function () {\n  function SafeConnectProvider(ui, options) {\n    this.keyStore = new KeyStore();\n    this.messaging = new Messaging();\n    this.ui = ui;\n    this.options = options;\n  }\n\n  SafeConnectProvider.prototype.initSafeConnect = function () {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var res, _b, _c, attest;\n\n      var _d;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _c = (_b = this.messaging).sendMessage;\n            _d = {\n              action: SafeConnectAction.CONNECT,\n              origin: this.options.url,\n              timeout: 0\n            };\n            return [4, this.getInitialProofRequest()];\n\n          case 1:\n            return [4, _c.apply(_b, [(_d.data = _e.sent(), _d), true, this.ui])];\n\n          case 2:\n            res = _e.sent();\n            if (!this.options.initialProof) return [2, res.data.address];\n            attest = res.data;\n            this.processProofResult(attest);\n            return [2, (_a = attest.data) === null || _a === void 0 ? void 0 : _a.address];\n        }\n      });\n    });\n  };\n\n  SafeConnectProvider.prototype.processProofResult = function (attest) {\n    var proofModel;\n    var proofData;\n\n    switch (this.options.initialProof) {\n      case \"address_attest\":\n        proofModel = new AttestedAddress();\n        proofData = {\n          type: proofModel.TYPE,\n          data: {\n            attestation: attest.data.attestation,\n            address: attest.data.address\n          },\n          target: {\n            address: attest.data.address\n          }\n        };\n        proofModel.saveProof(attest.data.address, proofData);\n        break;\n\n      case \"simple_challenge\":\n        proofModel = new SafeConnectChallenge();\n        proofData = {\n          type: proofModel.TYPE,\n          data: attest.data,\n          target: {\n            address: attest.data.address\n          }\n        };\n        break;\n    }\n\n    proofModel.saveProof(attest.data.address, proofData);\n  };\n\n  SafeConnectProvider.prototype.getInitialProofRequest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var request, holdingKey;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            request = {};\n            if (!this.options.initialProof) return [2];\n            request.type = this.options.initialProof;\n            if (!(this.options.initialProof !== \"simple_challenge\")) return [3, 2];\n            return [4, this.keyStore.getOrCreateKey(SafeConnectProvider.HOLDING_KEY_ALGORITHM)];\n\n          case 1:\n            holdingKey = _a.sent();\n            request.subject = uint8tohex(holdingKey.holdingPubKey);\n            _a.label = 2;\n\n          case 2:\n            return [2, request];\n        }\n      });\n    });\n  };\n\n  SafeConnectProvider.prototype.signUNChallenge = function (un) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, this.messaging.sendMessage({\n              action: SafeConnectAction.CONNECT,\n              origin: this.options.url,\n              timeout: 0,\n              data: {\n                type: \"signed_un\",\n                un: encodeURIComponent(JSON.stringify(un))\n              }\n            }, true, this.ui)];\n\n          case 1:\n            res = _a.sent();\n            return [2, res.data.data.signature];\n        }\n      });\n    });\n  };\n\n  SafeConnectProvider.prototype.getLinkSigningKey = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var keys;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, this.keyStore.getOrCreateKey(SafeConnectProvider.HOLDING_KEY_ALGORITHM)];\n\n          case 1:\n            keys = _a.sent();\n            return [2, keys.attestHoldingKey.privateKey];\n        }\n      });\n    });\n  };\n\n  SafeConnectProvider.HOLDING_KEY_ALGORITHM = \"RSASSA-PKCS1-v1_5\";\n  return SafeConnectProvider;\n}();\n\nexport { SafeConnectProvider }; //# sourceMappingURL=SafeConnectProvider.js.map","map":null,"metadata":{},"sourceType":"module"}