{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\"; // @TODO: Merge this with bytes\n\nexport class FixedBytesCoder extends Coder {\n  constructor(size, localName) {\n    let name = \"bytes\" + String(size);\n    super(name, name, localName, false);\n    this.size = size;\n  }\n\n  defaultValue() {\n    return \"0x0000000000000000000000000000000000000000000000000000000000000000\".substring(0, 2 + this.size * 2);\n  }\n\n  encode(writer, value) {\n    let data = arrayify(value);\n\n    if (data.length !== this.size) {\n      this._throwError(\"incorrect data length\", value);\n    }\n\n    return writer.writeBytes(data);\n  }\n\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n  }\n\n} //# sourceMappingURL=fixed-bytes.js.map","map":null,"metadata":{},"sourceType":"module"}