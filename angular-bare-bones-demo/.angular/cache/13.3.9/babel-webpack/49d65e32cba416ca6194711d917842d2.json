{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $species = GetIntrinsic('%Symbol.species%', true);\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar IsConstructor = require('./IsConstructor');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\n\nmodule.exports = function SpeciesConstructor(O, defaultConstructor) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: Type(O) is not Object');\n  }\n\n  var C = O.constructor;\n\n  if (typeof C === 'undefined') {\n    return defaultConstructor;\n  }\n\n  if (Type(C) !== 'Object') {\n    throw new $TypeError('O.constructor is not an Object');\n  }\n\n  var S = $species ? C[$species] : void 0;\n\n  if (S == null) {\n    return defaultConstructor;\n  }\n\n  if (IsConstructor(S)) {\n    return S;\n  }\n\n  throw new $TypeError('no constructor found');\n};","map":null,"metadata":{},"sourceType":"script"}