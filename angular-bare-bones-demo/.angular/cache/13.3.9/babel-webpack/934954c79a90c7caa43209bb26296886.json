{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EpochTimeValidity = void 0;\n\nconst asn1_schema_1 = require(\"@peculiar/asn1-schema\");\n\nconst asn1 = require(\"asn1js\");\n\nconst EpochIntegerConverter = {\n  fromASN: value => {\n    if (value.valueBlock.valueHex.byteLength > 4) return value.valueBlock.toString();\n    let dv = new DataView(value.valueBlock.valueHex, 0);\n    return dv.getUint32(0);\n  },\n  toASN: value => new asn1.Integer({\n    value: value\n  })\n};\n\nclass EpochTimeValidity {}\n\n__decorate([(0, asn1_schema_1.AsnProp)({\n  type: asn1_schema_1.AsnPropTypes.Integer,\n  converter: EpochIntegerConverter\n})], EpochTimeValidity.prototype, \"notBefore\", void 0);\n\n__decorate([(0, asn1_schema_1.AsnProp)({\n  type: asn1_schema_1.AsnPropTypes.Integer,\n  converter: EpochIntegerConverter\n})], EpochTimeValidity.prototype, \"notAfter\", void 0);\n\nexports.EpochTimeValidity = EpochTimeValidity; //# sourceMappingURL=EpochTimeValidity.js.map","map":null,"metadata":{},"sourceType":"script"}