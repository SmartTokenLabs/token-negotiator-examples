{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetV = require('./GetV');\n\nvar IsCallable = require('./IsCallable');\n\nvar IsPropertyKey = require('./IsPropertyKey'); // https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n\n\nmodule.exports = function GetMethod(O, P) {\n  // 7.3.9.1\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  } // 7.3.9.2\n\n\n  var func = GetV(O, P); // 7.3.9.4\n\n  if (func == null) {\n    return void 0;\n  } // 7.3.9.5\n\n\n  if (!IsCallable(func)) {\n    throw new $TypeError(P + 'is not a function');\n  } // 7.3.9.6\n\n\n  return func;\n};","map":null,"metadata":{},"sourceType":"script"}