{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { AbstractAuthentication } from \"./abstractAuthentication\";\nimport { SafeConnectProvider } from \"../../wallet/SafeConnectProvider\";\n\nvar SafeConnectChallenge = function (_super) {\n  __extends(SafeConnectChallenge, _super);\n\n  function SafeConnectChallenge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.TYPE = \"scChallenge\";\n    return _this;\n  }\n\n  SafeConnectChallenge.prototype.getTokenProof = function (issuerConfig, _tokens, _request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var web3WalletProvider, address, currentProof, safeConnect, walletConnection;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, this.client.getWalletProvider()];\n\n          case 1:\n            web3WalletProvider = _a.sent();\n            if (!web3WalletProvider.safeConnectAvailable()) throw new Error(\"Safe connect is not available\");\n            if (!issuerConfig.onChain) throw new Error(this.TYPE + \" is not available for off-chain tokens.\");\n            address = web3WalletProvider.getConnectedWalletData()[0].address;\n            currentProof = this.getSavedProof(address);\n\n            if (currentProof.data.expiry < Date.now()) {\n              this.deleteProof(address);\n              currentProof = null;\n            }\n\n            return [4, web3WalletProvider.getSafeConnectProvider()];\n\n          case 2:\n            safeConnect = _a.sent();\n            if (!!currentProof) return [3, 5];\n            walletConnection = web3WalletProvider.getConnectedWalletData()[0].provider;\n            if (!(walletConnection instanceof SafeConnectProvider)) return [3, 4];\n            return [4, safeConnect.initSafeConnect()];\n\n          case 3:\n            _a.sent();\n\n            currentProof = this.getSavedProof(address);\n            if (!currentProof) throw new Error(\"Could not get proof from safe connect\");\n            return [3, 5];\n\n          case 4:\n            throw new Error(\"Only safe connect supports this authentication type at this time\");\n\n          case 5:\n            return [2, currentProof];\n        }\n      });\n    });\n  };\n\n  return SafeConnectChallenge;\n}(AbstractAuthentication);\n\nexport { SafeConnectChallenge }; //# sourceMappingURL=safeConnectChallenge.js.map","map":null,"metadata":{},"sourceType":"module"}