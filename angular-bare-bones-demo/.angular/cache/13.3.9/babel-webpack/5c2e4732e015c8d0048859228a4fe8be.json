{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ethers } from \"ethers\";\nimport { logger } from \"../utils\";\n\nvar Web3WalletProvider = function () {\n  function Web3WalletProvider(client, safeConnectOptions) {\n    this.state = {\n      addresses: []\n    };\n    this.client = client;\n    this.safeConnectOptions = safeConnectOptions;\n  }\n\n  Web3WalletProvider.prototype.connectWith = function (walletType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var address;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!walletType) throw new Error('Please provide a Wallet type to connect with.');\n            if (!this[walletType]) return [3, 2];\n            return [4, this[walletType]()];\n\n          case 1:\n            address = _a.sent();\n            logger(2, 'address', address);\n            return [2, address];\n\n          case 2:\n            throw new Error('Wallet type not found');\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.signWith = function (message, walletProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n      var provider, signer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            provider = new ethers.providers.Web3Provider(walletProvider);\n            signer = provider.getSigner();\n            return [4, signer.signMessage(message)];\n\n          case 1:\n            return [2, _a.sent()];\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.getConnectedWalletData = function () {\n    return this.state.addresses;\n  };\n\n  Web3WalletProvider.prototype.registerNewWalletAddress = function (address, chainId, provider) {\n    this.state.addresses.push({\n      address: address,\n      chainId: chainId,\n      provider: provider\n    });\n    return this.state.addresses;\n  };\n\n  Web3WalletProvider.prototype.MetaMask = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var accounts, hexChainId, accountAddress;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger(2, 'connect MetaMask');\n            if (!(typeof window.ethereum !== 'undefined')) return [3, 3];\n            return [4, window.ethereum.request({\n              method: 'eth_requestAccounts'\n            })];\n\n          case 1:\n            accounts = _a.sent();\n            return [4, window.ethereum.request({\n              method: 'eth_chainId'\n            })];\n\n          case 2:\n            hexChainId = _a.sent();\n            accountAddress = accounts[0];\n            return [2, this.registerNewWalletAddress(accountAddress, parseInt(hexChainId, 16), ethereum)];\n\n          case 3:\n            throw new Error(\"MetaMask is not available. Please check the extension is supported and active.\");\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.WalletConnect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var walletConnectProvider, walletConnect, provider, accounts;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger(2, 'connect Wallet Connect');\n            return [4, import(\"./WalletConnectProvider\")];\n\n          case 1:\n            walletConnectProvider = _a.sent();\n            return [4, walletConnectProvider.getWalletConnectProviderInstance()];\n\n          case 2:\n            walletConnect = _a.sent();\n            return [4, walletConnect.enable()];\n\n          case 3:\n            _a.sent();\n\n            provider = new ethers.providers.Web3Provider(walletConnect);\n            return [4, provider.listAccounts()];\n\n          case 4:\n            accounts = _a.sent();\n\n            if (accounts.length === 0) {\n              throw new Error(\"No accounts found via wallet-connect.\");\n            }\n\n            return [2, this.registerNewWalletAddress(accounts[0], '1', walletConnect)];\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.Torus = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var TorusProvider, torus, provider, accounts;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, import(\"./TorusProvider\")];\n\n          case 1:\n            TorusProvider = _a.sent();\n            return [4, TorusProvider.getTorusProviderInstance()];\n\n          case 2:\n            torus = _a.sent();\n            return [4, torus.init()];\n\n          case 3:\n            _a.sent();\n\n            return [4, torus.login()];\n\n          case 4:\n            _a.sent();\n\n            provider = new ethers.providers.Web3Provider(torus.provider);\n            return [4, provider.listAccounts()];\n\n          case 5:\n            accounts = _a.sent();\n\n            if (accounts.length === 0) {\n              throw new Error(\"No accounts found via wallet-connect.\");\n            }\n\n            return [2, this.registerNewWalletAddress(accounts[0], '1', torus.provider)];\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.SafeConnect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var provider, address;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger(2, 'connect SafeConnect');\n            return [4, this.getSafeConnectProvider()];\n\n          case 1:\n            provider = _a.sent();\n            return [4, provider.initSafeConnect()];\n\n          case 2:\n            address = _a.sent();\n            this.registerNewWalletAddress(address, \"1\", provider);\n            return [2, address];\n        }\n      });\n    });\n  };\n\n  Web3WalletProvider.prototype.safeConnectAvailable = function () {\n    return this.safeConnectOptions !== undefined;\n  };\n\n  Web3WalletProvider.prototype.getSafeConnectProvider = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var SafeConnectProvider;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, import(\"./SafeConnectProvider\")];\n\n          case 1:\n            SafeConnectProvider = _a.sent().SafeConnectProvider;\n            return [2, new SafeConnectProvider(this.client.getUi(), this.safeConnectOptions)];\n        }\n      });\n    });\n  };\n\n  return Web3WalletProvider;\n}();\n\nexport { Web3WalletProvider };\nexport default Web3WalletProvider; //# sourceMappingURL=Web3WalletProvider.js.map","map":null,"metadata":{},"sourceType":"module"}