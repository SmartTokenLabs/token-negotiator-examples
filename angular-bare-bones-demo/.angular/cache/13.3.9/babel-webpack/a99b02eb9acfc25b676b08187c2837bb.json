{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTimeout = void 0;\n\nvar tslib_1 = require(\"tslib\"); // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nfunction withTimeout(sync, timeout, timeoutError) {\n  var _this = this;\n\n  if (timeoutError === void 0) {\n    timeoutError = new Error('timeout');\n  }\n\n  return {\n    acquire: function () {\n      return new Promise(function (resolve, reject) {\n        return tslib_1.__awaiter(_this, void 0, void 0, function () {\n          var isTimeout, ticket, release;\n          return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                isTimeout = false;\n                setTimeout(function () {\n                  isTimeout = true;\n                  reject(timeoutError);\n                }, timeout);\n                return [4\n                /*yield*/\n                , sync.acquire()];\n\n              case 1:\n                ticket = _a.sent();\n\n                if (isTimeout) {\n                  release = Array.isArray(ticket) ? ticket[1] : ticket;\n                  release();\n                } else {\n                  resolve(ticket);\n                }\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      });\n    },\n    runExclusive: function (callback) {\n      return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var release, ticket;\n        return tslib_1.__generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              release = function () {\n                return undefined;\n              };\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1,, 7, 8]);\n\n              return [4\n              /*yield*/\n              , this.acquire()];\n\n            case 2:\n              ticket = _a.sent();\n              if (!Array.isArray(ticket)) return [3\n              /*break*/\n              , 4];\n              release = ticket[1];\n              return [4\n              /*yield*/\n              , callback(ticket[0])];\n\n            case 3:\n              return [2\n              /*return*/\n              , _a.sent()];\n\n            case 4:\n              release = ticket;\n              return [4\n              /*yield*/\n              , callback()];\n\n            case 5:\n              return [2\n              /*return*/\n              , _a.sent()];\n\n            case 6:\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              release();\n              return [7\n              /*endfinally*/\n              ];\n\n            case 8:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    },\n    release: function () {\n      sync.release();\n    },\n    isLocked: function () {\n      return sync.isLocked();\n    }\n  };\n}\n\nexports.withTimeout = withTimeout;","map":null,"metadata":{},"sourceType":"script"}