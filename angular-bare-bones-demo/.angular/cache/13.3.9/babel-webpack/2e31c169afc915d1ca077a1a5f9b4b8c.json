{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar regexExec = require('call-bind/callBound')('RegExp.prototype.exec');\n\nvar Call = require('./Call');\n\nvar Get = require('./Get');\n\nvar IsCallable = require('./IsCallable');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\n\nmodule.exports = function RegExpExec(R, S) {\n  if (Type(R) !== 'Object') {\n    throw new $TypeError('Assertion failed: `R` must be an Object');\n  }\n\n  if (Type(S) !== 'String') {\n    throw new $TypeError('Assertion failed: `S` must be a String');\n  }\n\n  var exec = Get(R, 'exec');\n\n  if (IsCallable(exec)) {\n    var result = Call(exec, R, [S]);\n\n    if (result === null || Type(result) === 'Object') {\n      return result;\n    }\n\n    throw new $TypeError('\"exec\" method must return `null` or an Object');\n  }\n\n  return regexExec(R, S);\n};","map":null,"metadata":{},"sourceType":"script"}