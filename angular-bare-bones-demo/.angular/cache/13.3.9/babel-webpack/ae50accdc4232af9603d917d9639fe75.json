{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { rawTokenCheck, readMagicUrl, storeMagicURL } from \"../core\";\nimport { logger, requiredParams } from \"../utils\";\nimport { decodeTokens, filterTokens } from \"../core\";\nimport { OutletAction, OutletResponseAction } from \"../client/messaging\";\nimport { AuthHandler } from \"./auth-handler\";\nimport { SignedDevconTicket } from \"@tokenscript/attestation/dist/asn1/shemas/SignedDevconTicket\";\nimport { AsnParser } from \"@peculiar/asn1-schema\";\nimport { uint8toBuffer } from \"../utils\";\nimport { ResponseActionBase } from \"../core/messaging\";\nvar defaultConfig = {\n  tokenUrlName: \"ticket\",\n  tokenSecretName: \"secret\",\n  tokenIdName: \"id\",\n  unsignedTokenDataName: \"ticket\",\n  itemStorageKey: \"dcTokens\"\n};\n\nvar readSignedTicket = function () {\n  function readSignedTicket(source) {\n    var signedDevconTicket = AsnParser.parse(uint8toBuffer(source), SignedDevconTicket);\n    this.ticket = signedDevconTicket.ticket;\n    logger(3, this.ticket);\n  }\n\n  return readSignedTicket;\n}();\n\nexport { readSignedTicket };\n\nvar Outlet = function () {\n  function Outlet(config) {\n    this.tokenConfig = Object.assign(defaultConfig, config);\n\n    if (!this.tokenConfig.tokenParser) {\n      this.tokenConfig.tokenParser = readSignedTicket;\n    }\n\n    this.pageOnLoadEventHandler();\n  }\n\n  Outlet.prototype.getDataFromQuery = function (itemKey) {\n    var val = this.urlParams ? this.urlParams.get(itemKey) : \"\";\n    return val ? val : \"\";\n  };\n\n  Outlet.prototype.getFilter = function () {\n    var filter = this.getDataFromQuery(\"filter\");\n    return filter ? JSON.parse(filter) : {};\n  };\n\n  Outlet.prototype.pageOnLoadEventHandler = function () {\n    var params = window.location.hash.length > 1 ? \"?\" + window.location.hash.substring(1) : window.location.search;\n    this.urlParams = new URLSearchParams(params);\n    var evtid = this.getDataFromQuery(\"evtid\");\n    var action = this.getDataFromQuery(\"action\");\n    logger(2, \"Outlet received event ID \" + evtid + \" action \" + action);\n\n    if (action !== OutletAction.MAGIC_URL) {\n      this.sendCookieCheck(evtid);\n    }\n\n    switch (action) {\n      case OutletAction.GET_ISSUER_TOKENS:\n        {\n          this.sendTokens(evtid);\n          break;\n        }\n\n      case OutletAction.GET_PROOF:\n        {\n          var token = this.getDataFromQuery(\"token\");\n          var wallet = this.getDataFromQuery(\"wallet\");\n          var address = this.getDataFromQuery(\"address\");\n          requiredParams(token, \"unsigned token is missing\");\n          this.sendTokenProof(evtid, token, address, wallet);\n          break;\n        }\n\n      default:\n        {\n          localStorage.setItem(\"cookie-support-check\", \"test\");\n          this.sendCookieCheck(evtid);\n          var _a = this.tokenConfig,\n              tokenUrlName = _a.tokenUrlName,\n              tokenSecretName = _a.tokenSecretName,\n              tokenIdName = _a.tokenIdName,\n              itemStorageKey = _a.itemStorageKey;\n\n          try {\n            var tokens = readMagicUrl(tokenUrlName, tokenSecretName, tokenIdName, itemStorageKey, this.urlParams);\n            storeMagicURL(tokens, itemStorageKey);\n            var event_1 = new Event(\"tokensupdated\");\n            document.body.dispatchEvent(event_1);\n            this.sendTokens(evtid);\n          } catch (e) {\n            this.sendErrorResponse(evtid, e.message);\n          }\n\n          break;\n        }\n    }\n  };\n\n  Outlet.prototype.sendCookieCheck = function (evtid) {\n    this.sendMessageResponse({\n      evtid: evtid,\n      evt: ResponseActionBase.COOKIE_CHECK,\n      data: {\n        thirdPartyCookies: localStorage.getItem(\"cookie-support-check\")\n      }\n    });\n  };\n\n  Outlet.prototype.prepareTokenOutput = function (filter) {\n    var storageTokens = localStorage.getItem(this.tokenConfig.itemStorageKey);\n    if (!storageTokens) return [];\n    var decodedTokens = decodeTokens(storageTokens, this.tokenConfig.tokenParser, this.tokenConfig.unsignedTokenDataName);\n    return filterTokens(decodedTokens, filter);\n  };\n\n  Outlet.prototype.sendTokenProof = function (evtid, token, address, wallet) {\n    return __awaiter(this, void 0, void 0, function () {\n      var unsignedToken, tokenObj, authHandler, tokenProof, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!token) return [2, \"error\"];\n            unsignedToken = JSON.parse(token);\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 4,, 5]);\n\n            return [4, rawTokenCheck(unsignedToken, this.tokenConfig)];\n\n          case 2:\n            tokenObj = _a.sent();\n            authHandler = new AuthHandler(this, evtid, this.tokenConfig, tokenObj, address, wallet);\n            return [4, authHandler.authenticate()];\n\n          case 3:\n            tokenProof = _a.sent();\n            this.sendMessageResponse({\n              evtid: evtid,\n              evt: OutletResponseAction.PROOF,\n              data: {\n                issuer: this.tokenConfig.collectionID,\n                proof: tokenProof\n              }\n            });\n            return [3, 5];\n\n          case 4:\n            e_1 = _a.sent();\n            logger(2, e_1);\n            this.sendErrorResponse(evtid, e_1.message);\n            return [3, 5];\n\n          case 5:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Outlet.prototype.sendTokens = function (evtid) {\n    var issuerTokens = this.prepareTokenOutput(this.getFilter());\n    this.sendMessageResponse({\n      evtid: evtid,\n      evt: OutletResponseAction.ISSUER_TOKENS,\n      data: {\n        issuer: this.tokenConfig.collectionID,\n        tokens: issuerTokens\n      }\n    });\n  };\n\n  Outlet.prototype.sendErrorResponse = function (evtid, error) {\n    this.sendMessageResponse({\n      evtid: evtid,\n      evt: ResponseActionBase.ERROR,\n      errors: [error]\n    });\n  };\n\n  Outlet.prototype.sendMessageResponse = function (response) {\n    if (!document.referrer) {\n      return;\n    }\n\n    var target, origin;\n\n    if (!window.opener) {\n      target = window.parent;\n    } else {\n      target = window.opener;\n    }\n\n    var pUrl = new URL(document.referrer);\n    origin = pUrl.origin;\n    if (target) target.postMessage(response, origin);\n  };\n\n  return Outlet;\n}();\n\nexport { Outlet }; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module"}