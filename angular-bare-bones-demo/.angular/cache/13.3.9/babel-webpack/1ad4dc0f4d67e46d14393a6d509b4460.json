{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { Messaging as CoreMessaging } from \"../core/messaging\";\nimport { ClientError, ClientErrorMessage } from \"./index\";\nexport var OutletAction = /*#__PURE__*/(() => {\n  (function (OutletAction) {\n    OutletAction[\"MAGIC_URL\"] = \"magic-url\";\n    OutletAction[\"GET_ISSUER_TOKENS\"] = \"get-issuer-tokens\";\n    OutletAction[\"GET_PROOF\"] = \"get-proof\";\n  })(OutletAction || (OutletAction = {}));\n\n  return OutletAction;\n})();\nexport var OutletResponseAction = /*#__PURE__*/(() => {\n  (function (OutletResponseAction) {\n    OutletResponseAction[\"ISSUER_TOKENS\"] = \"issuer-tokens\";\n    OutletResponseAction[\"PROOF\"] = \"proof\";\n  })(OutletResponseAction || (OutletResponseAction = {}));\n\n  return OutletResponseAction;\n})();\n\nvar Messaging = function () {\n  function Messaging() {\n    this.core = new CoreMessaging();\n  }\n\n  Messaging.prototype.sendMessage = function (request, forceTab, ui) {\n    if (forceTab === void 0) {\n      forceTab = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4, this.core.sendMessage(request, forceTab)];\n\n          case 1:\n            return [2, _a.sent()];\n\n          case 2:\n            e_1 = _a.sent();\n\n            if (e_1 === ClientError.POPUP_BLOCKED) {\n              if (ui) {\n                return [2, this.handleUserClose(request, ui, forceTab)];\n              } else {\n                e_1 = this.createNamedError(e_1, ClientErrorMessage.POPUP_BLOCKED);\n              }\n            }\n\n            if (e_1 === ClientError.USER_ABORT) {\n              e_1 = this.createNamedError(e_1, ClientErrorMessage.USER_ABORT);\n            }\n\n            throw e_1;\n\n          case 3:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Messaging.prototype.handleUserClose = function (request, ui, forceTab) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      ui.showError(\"Mmmmm looks like your popup blocker is getting in the way.\");\n      ui.setErrorRetryCallback(function () {\n        _this.core.sendMessage(request, forceTab).then(function (res) {\n          resolve(res);\n        }).catch(function (e) {\n          if (e === ClientError.POPUP_BLOCKED) {\n            e = _this.createNamedError(e, ClientErrorMessage.POPUP_BLOCKED);\n          } else if (e === ClientError.USER_ABORT) {\n            e = _this.createNamedError(e, ClientErrorMessage.USER_ABORT);\n          }\n\n          reject(e);\n        });\n      });\n    });\n  };\n\n  Messaging.prototype.createNamedError = function (err, message) {\n    var error = new Error(message);\n    error.name = err;\n    return error;\n  };\n\n  return Messaging;\n}();\n\nexport { Messaging }; //# sourceMappingURL=messaging.js.map","map":null,"metadata":{},"sourceType":"module"}