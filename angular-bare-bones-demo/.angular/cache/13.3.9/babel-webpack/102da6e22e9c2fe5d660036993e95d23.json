{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { attachPostMessageListener, logger, removePostMessageListener } from \"../utils\";\nimport { ClientError } from \"../client\";\nexport var ResponseActionBase = /*#__PURE__*/(() => {\n  (function (ResponseActionBase) {\n    ResponseActionBase[\"COOKIE_CHECK\"] = \"cookie-check\";\n    ResponseActionBase[\"ERROR\"] = \"error\";\n    ResponseActionBase[\"SHOW_FRAME\"] = \"show-frame\";\n  })(ResponseActionBase || (ResponseActionBase = {}));\n\n  return ResponseActionBase;\n})();\n\nvar Messaging = function () {\n  function Messaging() {\n    this.iframeStorageSupport = null;\n  }\n\n  Messaging.prototype.sendMessage = function (request, forceTab) {\n    if (forceTab === void 0) {\n      forceTab = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!forceTab && this.iframeStorageSupport === null) {\n              this.iframeStorageSupport = !window.safari;\n            }\n\n            logger(2, \"Send request: \");\n            logger(2, request);\n            if (!(!forceTab && this.iframeStorageSupport !== false)) return [3, 5];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4, this.sendIframe(request)];\n\n          case 2:\n            return [2, _a.sent()];\n\n          case 3:\n            e_1 = _a.sent();\n\n            if (e_1 === \"IFRAME_STORAGE\") {\n              return [2, this.sendPopup(request)];\n            }\n\n            throw e_1;\n\n          case 4:\n            return [3, 6];\n\n          case 5:\n            return [2, this.sendPopup(request)];\n\n          case 6:\n            return [2];\n        }\n      });\n    });\n  };\n\n  Messaging.prototype.sendIframe = function (request) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var id = Messaging.getUniqueEventId();\n\n      var url = _this.constructUrl(id, request);\n\n      var iframe = _this.createIframe(function () {\n        _this.removeModal();\n\n        reject(ClientError.USER_ABORT);\n      });\n\n      _this.setResponseListener(id, request.origin, request.timeout, resolve, reject, function () {\n        _this.removeModal();\n      }, iframe);\n\n      iframe.src = url;\n    });\n  };\n\n  Messaging.prototype.sendPopup = function (request) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      var id = Messaging.getUniqueEventId();\n      var tabRef = null;\n\n      _this.setResponseListener(id, request.origin, request.timeout, resolve, reject, function () {\n        if (tabRef) tabRef.close();\n      });\n\n      tabRef = _this.openTab(_this.constructUrl(id, request));\n\n      if (!tabRef || tabRef.closed || typeof tabRef.closed == \"undefined\") {\n        reject(ClientError.POPUP_BLOCKED);\n        return;\n      }\n\n      var tabCloseCheck = setInterval(function () {\n        if (!tabRef || tabRef.closed) {\n          clearInterval(tabCloseCheck);\n          reject(ClientError.USER_ABORT);\n        }\n      }, 500);\n    });\n  };\n\n  Messaging.prototype.setResponseListener = function (id, origin, timeout, resolve, reject, cleanUpCallback, iframe) {\n    var _this = this;\n\n    if (iframe === void 0) {\n      iframe = null;\n    }\n\n    var received = false;\n    var timer = null;\n\n    var listener = function (event) {\n      var response = event.data;\n      var requestUrl = new URL(origin);\n\n      if (response.evtid === id) {\n        if (requestUrl.origin === event.origin) {\n          logger(2, \"event response received\");\n          logger(2, event.data);\n          received = true;\n\n          if (response.evt === ResponseActionBase.COOKIE_CHECK) {\n            if (!iframe || _this.iframeStorageSupport === true) return;\n            return;\n          }\n\n          if (response.evt === ResponseActionBase.ERROR) {\n            reject(new Error(response.errors.join(\". \")));\n          } else if (response.evt === ResponseActionBase.SHOW_FRAME) {\n            if (iframe) {\n              var modal = _this.getModal();\n\n              modal.style.display = \"block\";\n            }\n\n            return;\n          } else {\n            resolve(response);\n          }\n\n          afterResolveOrError();\n        } else {\n          logger(2, \"Does not match origin \" + event.origin);\n        }\n      }\n    };\n\n    var afterResolveOrError = function () {\n      if (timer) clearTimeout(timer);\n      removePostMessageListener(listener);\n      if (!window.NEGOTIATOR_DEBUG) cleanUpCallback();\n    };\n\n    attachPostMessageListener(listener);\n    if (timeout === undefined) timeout = 10000;\n    if (timeout > 0) timer = setTimeout(function () {\n      if (!received) reject(new Error(\"Failed to receive response from window/iframe\"));\n      afterResolveOrError();\n    }, timeout);\n  };\n\n  Messaging.prototype.getModal = function (closedCallback) {\n    var modal = document.getElementById(\"modal-tn\");\n    if (modal || !closedCallback) return modal;\n    modal = document.createElement('div');\n    modal.id = \"modal-tn\";\n    modal.className = \"modal-tn\";\n    modal.style.display = \"none\";\n    modal.innerHTML = \"\\n            <div class=\\\"modal-content-tn\\\">\\n                <div class=\\\"modal-header-tn\\\">\\n                    <span class=\\\"modal-close-tn\\\">&times;</span>\\n                </div>\\n                <div class=\\\"modal-body-tn\\\"></div>\\n            </div>\\n        \";\n    document.body.appendChild(modal);\n    modal.getElementsByClassName('modal-close-tn')[0].addEventListener('click', function () {\n      closedCallback();\n    });\n    return modal;\n  };\n\n  Messaging.prototype.removeModal = function () {\n    var modal = this.getModal();\n\n    if (modal) {\n      modal.style.display = \"none\";\n      modal.remove();\n    }\n  };\n\n  Messaging.prototype.constructUrl = function (id, request) {\n    var url = \"\".concat(request.origin, \"#evtid=\").concat(id, \"&action=\").concat(request.action);\n\n    for (var i in request.data) {\n      var value = request.data[i];\n      if (!value) continue;\n\n      if (value instanceof Array || value instanceof Object) {\n        url += \"&\".concat(i, \"=\").concat(JSON.stringify(value));\n      } else {\n        if (i === \"urlParams\") {\n          url += \"&\".concat(value);\n        } else {\n          url += \"&\".concat(i, \"=\").concat(value);\n        }\n      }\n    }\n\n    return url;\n  };\n\n  Messaging.prototype.openTab = function (url) {\n    return window.open(url, \"_blank\");\n  };\n\n  Messaging.prototype.createIframe = function (closeCallback) {\n    var iframe = document.createElement('iframe');\n    iframe.setAttribute('allow', \"clipboard-read\");\n    var modal = this.getModal(closeCallback);\n    modal.getElementsByClassName('modal-body-tn')[0].appendChild(iframe);\n    return iframe;\n  };\n\n  Messaging.getUniqueEventId = function () {\n    return new Date().getTime().toString();\n  };\n\n  return Messaging;\n}();\n\nexport { Messaging }; //# sourceMappingURL=messaging.js.map","map":null,"metadata":{},"sourceType":"module"}