{"ast":null,"code":"export function isConvertible(target) {\n  if (typeof target === \"function\" && target.prototype) {\n    if (target.prototype.toASN && target.prototype.fromASN) {\n      return true;\n    } else {\n      return isConvertible(target.prototype);\n    }\n  } else {\n    return !!(target && typeof target === \"object\" && \"toASN\" in target && \"fromASN\" in target);\n  }\n}\nexport function isTypeOfArray(target) {\n  var _a;\n\n  if (target) {\n    const proto = Object.getPrototypeOf(target);\n\n    if (((_a = proto === null || proto === void 0 ? void 0 : proto.prototype) === null || _a === void 0 ? void 0 : _a.constructor) === Array) {\n      return true;\n    }\n\n    return isTypeOfArray(proto);\n  }\n\n  return false;\n}\nexport function isArrayEqual(bytes1, bytes2) {\n  if (!(bytes1 && bytes2)) {\n    return false;\n  }\n\n  if (bytes1.byteLength !== bytes2.byteLength) {\n    return false;\n  }\n\n  const b1 = new Uint8Array(bytes1);\n  const b2 = new Uint8Array(bytes2);\n\n  for (let i = 0; i < bytes1.byteLength; i++) {\n    if (b1[i] !== b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":null,"metadata":{},"sourceType":"module"}