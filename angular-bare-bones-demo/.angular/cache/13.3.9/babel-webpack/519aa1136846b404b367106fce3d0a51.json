{"ast":null,"code":"import * as asn1js from \"asn1js\";\nimport { AsnPropTypes } from \"./enums\";\nexport const AsnAnyConverter = {\n  fromASN: value => value instanceof asn1js.Null ? null : value.valueBeforeDecodeView,\n  toASN: value => {\n    if (value === null) {\n      return new asn1js.Null();\n    }\n\n    const schema = asn1js.fromBER(value);\n\n    if (schema.result.error) {\n      throw new Error(schema.result.error);\n    }\n\n    return schema.result;\n  }\n};\nexport const AsnIntegerConverter = {\n  fromASN: value => value.valueBlock.valueHexView.byteLength >= 4 ? value.valueBlock.toString() : value.valueBlock.valueDec,\n  toASN: value => new asn1js.Integer({\n    value: +value\n  })\n};\nexport const AsnEnumeratedConverter = {\n  fromASN: value => value.valueBlock.valueDec,\n  toASN: value => new asn1js.Enumerated({\n    value\n  })\n};\nexport const AsnIntegerArrayBufferConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.Integer({\n    valueHex: value\n  })\n};\nexport const AsnIntegerBigIntConverter = {\n  fromASN: value => value.toBigInt(),\n  toASN: value => asn1js.Integer.fromBigInt(value)\n};\nexport const AsnBitStringConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.BitString({\n    valueHex: value\n  })\n};\nexport const AsnObjectIdentifierConverter = {\n  fromASN: value => value.valueBlock.toString(),\n  toASN: value => new asn1js.ObjectIdentifier({\n    value\n  })\n};\nexport const AsnBooleanConverter = {\n  fromASN: value => value.valueBlock.value,\n  toASN: value => new asn1js.Boolean({\n    value\n  })\n};\nexport const AsnOctetStringConverter = {\n  fromASN: value => value.valueBlock.valueHexView,\n  toASN: value => new asn1js.OctetString({\n    valueHex: value\n  })\n};\n\nfunction createStringConverter(Asn1Type) {\n  return {\n    fromASN: value => value.valueBlock.value,\n    toASN: value => new Asn1Type({\n      value\n    })\n  };\n}\n\nexport const AsnUtf8StringConverter = createStringConverter(asn1js.Utf8String);\nexport const AsnBmpStringConverter = createStringConverter(asn1js.BmpString);\nexport const AsnUniversalStringConverter = createStringConverter(asn1js.UniversalString);\nexport const AsnNumericStringConverter = createStringConverter(asn1js.NumericString);\nexport const AsnPrintableStringConverter = createStringConverter(asn1js.PrintableString);\nexport const AsnTeletexStringConverter = createStringConverter(asn1js.TeletexString);\nexport const AsnVideotexStringConverter = createStringConverter(asn1js.VideotexString);\nexport const AsnIA5StringConverter = createStringConverter(asn1js.IA5String);\nexport const AsnGraphicStringConverter = createStringConverter(asn1js.GraphicString);\nexport const AsnVisibleStringConverter = createStringConverter(asn1js.VisibleString);\nexport const AsnGeneralStringConverter = createStringConverter(asn1js.GeneralString);\nexport const AsnCharacterStringConverter = createStringConverter(asn1js.CharacterString);\nexport const AsnUTCTimeConverter = {\n  fromASN: value => value.toDate(),\n  toASN: value => new asn1js.UTCTime({\n    valueDate: value\n  })\n};\nexport const AsnGeneralizedTimeConverter = {\n  fromASN: value => value.toDate(),\n  toASN: value => new asn1js.GeneralizedTime({\n    valueDate: value\n  })\n};\nexport const AsnNullConverter = {\n  fromASN: () => null,\n  toASN: () => {\n    return new asn1js.Null();\n  }\n};\nexport function defaultConverter(type) {\n  switch (type) {\n    case AsnPropTypes.Any:\n      return AsnAnyConverter;\n\n    case AsnPropTypes.BitString:\n      return AsnBitStringConverter;\n\n    case AsnPropTypes.BmpString:\n      return AsnBmpStringConverter;\n\n    case AsnPropTypes.Boolean:\n      return AsnBooleanConverter;\n\n    case AsnPropTypes.CharacterString:\n      return AsnCharacterStringConverter;\n\n    case AsnPropTypes.Enumerated:\n      return AsnEnumeratedConverter;\n\n    case AsnPropTypes.GeneralString:\n      return AsnGeneralStringConverter;\n\n    case AsnPropTypes.GeneralizedTime:\n      return AsnGeneralizedTimeConverter;\n\n    case AsnPropTypes.GraphicString:\n      return AsnGraphicStringConverter;\n\n    case AsnPropTypes.IA5String:\n      return AsnIA5StringConverter;\n\n    case AsnPropTypes.Integer:\n      return AsnIntegerConverter;\n\n    case AsnPropTypes.Null:\n      return AsnNullConverter;\n\n    case AsnPropTypes.NumericString:\n      return AsnNumericStringConverter;\n\n    case AsnPropTypes.ObjectIdentifier:\n      return AsnObjectIdentifierConverter;\n\n    case AsnPropTypes.OctetString:\n      return AsnOctetStringConverter;\n\n    case AsnPropTypes.PrintableString:\n      return AsnPrintableStringConverter;\n\n    case AsnPropTypes.TeletexString:\n      return AsnTeletexStringConverter;\n\n    case AsnPropTypes.UTCTime:\n      return AsnUTCTimeConverter;\n\n    case AsnPropTypes.UniversalString:\n      return AsnUniversalStringConverter;\n\n    case AsnPropTypes.Utf8String:\n      return AsnUtf8StringConverter;\n\n    case AsnPropTypes.VideotexString:\n      return AsnVideotexStringConverter;\n\n    case AsnPropTypes.VisibleString:\n      return AsnVisibleStringConverter;\n\n    default:\n      return null;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}